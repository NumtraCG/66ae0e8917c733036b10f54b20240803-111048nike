[{"_id": "66ae0e8917c733036b10f54e", "mode": "staged", "originalfile": "/FileStore/platform/uploadedSourceFiles/Nike_Pro.csv", "in": [], "out": ["66ae0e8917c733036b10f54f"], "is_streaming": false, "valid": false, "is_predefined": false, "cache": false, "name": "Nike_Pro", "comment": "", "pipeline_id": "66ae0e8917c733036b10f54b", "sub_type": "HDFS", "stage_type": "source", "stage_attributes": {"url": "/FileStore/platform/uploadedSourceFiles/Nike_Pro.csv", "filename": "Nike_Pro.csv", "delimiter": ",", "file_type": "Delimeted", "dbfs_token": "", "dbfs_domain": "", "is_header": "Use Header Line", "domain": "http://172.31.59.158", "port": "40070", "dirPath": "/FileStore/platform", "server_url": "/nexusMax/NexusMaxPlatform/uploads/platform/"}, "status": "new", "position": {"x": -80, "y": 160}, "shape_attributes": {"image": {"refHeight": "100%", "xlinkHref": "assets/svg/source/hdfs-source.svg"}, "label": {"textVerticalAnchor": "top", "textAnchor": "middle", "refX": "50%", "refY": "100%", "refY2": 10, "fontSize": 10, "fill": "#333333", "type": "source", "text": "Nike_Pro", "slug": "hdfs", "fontFamily": "Roboto Condensed", "fontWeight": "Normal"}}, "shape_size": {"width": 60, "height": 60}, "shape_type": "standard.Image", "user_id": "7b254440-ce6b-4cbe-9a6b-9ca33491250a", "original_schema": [{"inherited": true, "checked": true, "field": "product_name", "alias": "product_name", "type": "String", "position": 0}, {"inherited": true, "checked": true, "field": "product_id", "alias": "product_id", "type": "String", "position": 1}, {"inherited": true, "checked": true, "field": "listing_price", "alias": "listing_price", "type": "numeric", "position": 2}, {"inherited": true, "checked": true, "field": "sale_price", "alias": "sale_price", "type": "numeric", "position": 3}, {"inherited": true, "checked": true, "field": "discount", "alias": "discount", "type": "numeric", "position": 4}, {"inherited": true, "checked": true, "field": "brand", "alias": "brand", "type": "String", "position": 5}, {"inherited": true, "checked": true, "field": "description", "alias": "description", "type": "String", "position": 6}, {"inherited": true, "checked": true, "field": "rating", "alias": "rating", "type": "String", "position": 7}, {"inherited": true, "checked": true, "field": "reviews", "alias": "reviews", "type": "String", "position": 8}], "actual_schema": [{"inherited": true, "checked": true, "field": "product_name", "alias": "product_name", "type": "String", "position": 0}, {"inherited": true, "checked": true, "field": "product_id", "alias": "product_id", "type": "String", "position": 1}, {"inherited": true, "checked": true, "field": "listing_price", "alias": "listing_price", "type": "numeric", "position": 2}, {"inherited": true, "checked": true, "field": "sale_price", "alias": "sale_price", "type": "numeric", "position": 3}, {"inherited": true, "checked": true, "field": "discount", "alias": "discount", "type": "numeric", "position": 4}, {"inherited": true, "checked": true, "field": "brand", "alias": "brand", "type": "String", "position": 5}, {"inherited": true, "checked": true, "field": "description", "alias": "description", "type": "String", "position": 6}, {"inherited": true, "checked": true, "field": "rating", "alias": "rating", "type": "String", "position": 7}, {"inherited": true, "checked": true, "field": "reviews", "alias": "reviews", "type": "String", "position": 8}], "selected_schema": [], "created_at": "2024-08-03 11:03:37.419000", "joinSchema": [], "updated_at": "2024-08-03 11:04:41.003000", "__v": 0, "sampleData": [{"product_name": "Nike Free Metcon 3", "product_id": "CJ0861-017", "listing_price": 0, "sale_price": 9995, "discount": 0, "brand": "Nike", "description": "The Nike Free Metcon 3 combines Nike Free flexibility around the forefoot with Metcon stability in the heel to help you get the most out of your training session.", "rating": "5", "reviews": "1"}, {"product_name": "Nike Zoom Pegasus Turbo 2", "product_id": "AT8242-009", "listing_price": 0, "sale_price": 15995, "discount": 0, "brand": "Nike", "description": "The Nike Zoom Pegasus Turbo 2 is updated with a feather-light upper, while innovative foam brings revolutionary responsiveness to your long-distance training.", "rating": "2.7", "reviews": "14"}, {"product_name": "Nike Air Max 270 React ENG", "product_id": "CK2595-500", "listing_price": 0, "sale_price": 14995, "discount": 0, "brand": "Nike", "description": "The Nike Air Max 270 React ENG combines a full-length React foam midsole with a 270 Max Air unit for unrivalled comfort and a striking visual experience.", "rating": "5", "reviews": "2"}, {"product_name": "Nike Air Max 90", "product_id": "CD0490-104", "listing_price": 0, "sale_price": 9995, "discount": 0, "brand": "Nike", "description": "Clean lines, versatile and timeless\u00e2\u20ac\u201dthe people's shoe returns with the Nike Air Max 90. Featuring the same iconic Waffle sole, stitched overlays and classic TPU accents you've come to love, it lets you walk among the pantheon of Air.", "rating": "5", "reviews": "9"}, {"product_name": "Nike Air Force 1 '07", "product_id": "315115-112", "listing_price": 0, "sale_price": 7495, "discount": 0, "brand": "Nike", "description": "The radiance lives on in the Nike Air Force 1 '07, the b-ball OG that puts a fresh spin on what you know best: crisp leather in an all-white colourway for a statement look on and off the court.", "rating": "4.5", "reviews": "67"}, {"product_name": "Nike Air VaporMax Flyknit 3", "product_id": "AJ6910-009", "listing_price": 0, "sale_price": 16995, "discount": 0, "brand": "Nike", "description": "Be bouncy and buoyant in the Nike Air VaporMax Flyknit 3. Inspired by high fashion, the upper features flowing lines of breathable, stretchable Flyknit construction. Revolutionary VaporMax Air technology keeps a spring in your step with toe-to-heel cushioning.", "rating": "4.4", "reviews": "48"}, {"product_name": "Nike Air Zoom SuperRep", "product_id": "BQ7043-668", "listing_price": 0, "sale_price": 9995, "discount": 0, "brand": "Nike", "description": "The Nike Air Zoom SuperRep is designed for circuit training, HIIT, short runs and other fast-paced exercise. Zoom Air cushioning in the forefoot combines with a wide, stable heel to keep you moving and lifting comfortably.", "rating": "4.4", "reviews": "34"}, {"product_name": "Nike Air Max 97", "product_id": "921733-104", "listing_price": 0, "sale_price": 16995, "discount": 0, "brand": "Nike", "description": "The Nike Air Max 97 keeps a sneaker icon going strong with the same design details that made it famous: water-ripple lines, reflective piping and full-length Max Air cushioning.", "rating": "4.3", "reviews": "16"}, {"product_name": "Nike SB Bruin High", "product_id": "923112-001", "listing_price": 7995, "sale_price": 5597, "discount": 0, "brand": "Nike", "description": "The first Nike SB shoe designed specifically for women, the Nike SB Bruin High is built for exceptional comfort and board control. With classic Bruin design lines and details, this is a fresh take on a time-honoured shoe.", "rating": "4.2", "reviews": "6"}, {"product_name": "Air Jordan XXXIV PF", "product_id": "BQ3381-600", "listing_price": 0, "sale_price": 14995, "discount": 0, "brand": "Nike", "description": "The Air Jordan XXXIV PF continues the legacy of a cultural icon. Light, responsive and sculpted with aerodynamic precision, it combines a boldly unconventional midsole with herringbone traction to merge innovative and iconic design elements.", "rating": "5", "reviews": "2"}, {"product_name": "Nike Metcon 5", "product_id": "AO2982-076", "listing_price": 0, "sale_price": 10995, "discount": 0, "brand": "Nike", "description": "The Nike Metcon 5 is the most tuned Metcon yet. This means specific stability for heavy lifting, traction made for speed and durability where you need it. It even includes a Hyperlift insert that's compatible with all prior versions of the Metcon. Meet your secret weapon for weight-lifting and high-impact training.", "rating": "4.4", "reviews": "22"}, {"product_name": "Nike Joyride Run Flyknit", "product_id": "AQ2730-009", "listing_price": 0, "sale_price": 14995, "discount": 0, "brand": "Nike", "description": "The Nike Joyride Run Flyknit is designed to help make running feel easier and give your legs a day off. Tiny foam beads underfoot contour to your foot for cushioning that stands up to your mileage.", "rating": "4", "reviews": "65"}, {"product_name": "Nike Air VaporMax 360", "product_id": "CK9671-001", "listing_price": 0, "sale_price": 18995, "discount": 0, "brand": "Nike", "description": "Inspired by heritage running shoes like the 2006 Air Max 360, the Nike Air VaporMax 360 re-imagines full-length Air with its lighter, more flexible design. The full-length foam midsole adds to the comfort while bold colours create a fresh, modern look.", "rating": "4", "reviews": "1"}, {"product_name": "Nike Offcourt", "product_id": "BQ4632-602", "listing_price": 0, "sale_price": 2495, "discount": 0, "brand": "Nike", "description": "Featuring Revive Foam, a super-soft foam designed to help you relax and recharge, the unrelenting comfort of the Nike Offcourt Slide is sensational. The innovative dual-layered foam and soft jersey lining on the strap ensure a gratifying full-foot experience. The iconic Air Force 1 pivot circle outsole and block lettering on the strap casually nod to heritage hoops.", "rating": "4.3", "reviews": "4"}, {"product_name": "Jordan Break", "product_id": "AR6374-402", "listing_price": 0, "sale_price": 1995, "discount": 0, "brand": "Nike", "description": "Featuring a fixed strap over the top of the foot, the Jordan Break Slide features durable synthetic leather and lightweight foam cushioning for underfoot comfort.", "rating": "4.2", "reviews": "5"}, {"product_name": "LeBron 7 QS", "product_id": "CU5646-001", "listing_price": 0, "sale_price": 16995, "discount": 0, "brand": "Nike", "description": "Make your head-turning journey to the top comfortable. Built strong and sleek, the LeBron 7 QS features a mix of materials on the upper for a look that lasts. Metal accents and multiple LeBron crests celebrate a king, while full-length cushioning graces your every step.", "rating": "5", "reviews": "1"}, {"product_name": "Nike In-Season TR 9", "product_id": "AR4543-013", "listing_price": 0, "sale_price": 5995, "discount": 0, "brand": "Nike", "description": "The Nike In-Season TR 9 is light, stable and features deep, comfortable footbed for superior impact absorption and energy return throughout your entire workout.", "rating": "4.9", "reviews": "7"}, {"product_name": "Nike Air Force 1 '07 LV8", "product_id": "CD0888-002", "listing_price": 0, "sale_price": 7595, "discount": 0, "brand": "Nike", "description": "The Nike Air Force 1 '07 LV8 incorporates the same hoops-inspired performance features of the 1982 original while adding fresh design details for an updated look.", "rating": "5", "reviews": "3"}, {"product_name": "Nike Air Max Dia", "product_id": "CJ0636-100", "listing_price": 0, "sale_price": 8995, "discount": 0, "brand": "Nike", "description": "Designed specifically for a woman's foot, the Nike Air Max Dia delivers a lifted look and airy aesthetic. The minimal upper modernises the silhouette, while the Max Air unit is amplified even further by an exaggerated midsole for a boost of style.", "rating": "1", "reviews": "1"}, {"product_name": "Air Jordan 1 Mid SE", "product_id": "852542-087", "listing_price": 0, "sale_price": 9995, "discount": 0, "brand": "Nike", "description": "The Air Jordan 1 Mid SE maintains the timeless appeal of the OG AJ1, revamped with fresh colours and premium materials. Built with a lightweight Air-Sole unit and classic design lines, it captures the essence of the original through a modern lens.", "rating": "4.8", "reviews": "13"}, {"product_name": "Nike Daybreak", "product_id": "CK2351-601", "listing_price": 0, "sale_price": 7995, "discount": 0, "brand": "Nike", "description": "Originally released in 1979, the Nike Daybreak is a blast from the past. Featuring the same rubber Waffle outsole and nylon upper, it gives you true vintage style.", "rating": "4.9", "reviews": "7"}, {"product_name": "Nike SB Shane", "product_id": "BV0657-400", "listing_price": 0, "sale_price": 6495, "discount": 0, "brand": "Nike", "description": "Shane O'Neill put the same attention to detail into every aspect of his signature shoe as he does in his almost otherworldly skating. From the low-key perforated ventilation at the toe, to the double lacing option and the no-break-in remastered sole, the Nike SB Shane gets all the details right.", "rating": "4.7", "reviews": "3"}, {"product_name": "Air Jordan 1 Mid", "product_id": "554724-066", "listing_price": 0, "sale_price": 9995, "discount": 0, "brand": "Nike", "description": "The Air Jordan 1 Mid Shoe is inspired by the first AJ1, offering OG fans a look at how far the Jordan brand has come since 1985.", "rating": "4.5", "reviews": "61"}, {"product_name": "Jordan 'Why Not?' Zer0.3 PF", "product_id": "CD3002-103", "listing_price": 0, "sale_price": 10995, "discount": 0, "brand": "Nike", "description": "\"One of the game's fiercest competitors, triple-double dynamo Russell Westbrook has the motor, muscle and mentality to match his fearlessness\u00e2\u20ac\u201dwith the stats to back it up. Built to hold up on outdoor courts, the Jordan \"\"Why Not?\"\" Zer0.3 PF is fine-tuned for players like Russ", "rating": " who beat opponents with linear speed and aggressiveness.\"", "reviews": "5"}, {"product_name": "Nike Air Zoom SuperRep", "product_id": "CD3460-010", "listing_price": 0, "sale_price": 9995, "discount": 0, "brand": "Nike", "description": "The Nike Air Zoom SuperRep is designed for circuit training, HIIT, short runs and other fast-paced exercise. Zoom Air cushioning in the forefoot combines with a wide, stable heel to keep you moving and lifting comfortably.", "rating": "4.5", "reviews": "31"}, {"product_name": "Nike Metcon 5 AMP", "product_id": "CD3395-006", "listing_price": 0, "sale_price": 11995, "discount": 0, "brand": "Nike", "description": "The Nike Metcon 5 AMP arms you with stability for heavy lifting and traction for sprints during high-impact training. It combines breathability and durability to be your secret weapon in the gym.", "rating": "5", "reviews": "2"}, {"product_name": "Nike Air Max 97", "product_id": "CI3708-700", "listing_price": 0, "sale_price": 14995, "discount": 0, "brand": "Nike", "description": "The Air Max 97 shook up the running world with its revolutionary full-length Nike Air unit. The Nike Air Max 97 remasters the original design with bold new colours and flashes of gold.", "rating": "5", "reviews": "1"}, {"product_name": "LeBron 17 Low", "product_id": "CD5007-102", "listing_price": 0, "sale_price": 13995, "discount": 0, "brand": "Nike", "description": "Fine-tuned with LeBron's ferocious game in mind, the LeBron 17 Low has a sleek, low-top design that features a powerful combination of impact-ready cushioning and responsiveness.", "rating": "3", "reviews": "2"}, {"product_name": "Nike Renew Fusion", "product_id": "CD0200-003", "listing_price": 0, "sale_price": 6995, "discount": 0, "brand": "Nike", "description": "The Nike Renew Fusion blends stability, cushioning and durability for high-impact training sessions. A foam sole cushions heavy-weight, high-paced activities, while a midfoot cage locks your foot down to a flat, wide base for stability.", "rating": "5", "reviews": "1"}, {"product_name": "LeBron 17", "product_id": "BQ3177-100", "listing_price": 0, "sale_price": 16995, "discount": 0, "brand": "Nike", "description": "The LeBron 17 harnesses LeBron's strength and speed with containment and support for all-court domination. It features a lightweight mix of knit and heat-moulded yarns that gives each one a durable look and feel. Combined cushioning provides LeBron with the impact support and responsive energy return he needs to power through the long season.", "rating": "4.5", "reviews": "47"}, {"product_name": "Nike Air Max 90 Premium", "product_id": "CQ0912-100", "listing_price": 0, "sale_price": 11995, "discount": 0, "brand": "Nike", "description": "\"The Nike Air Max 90 Premium is built in honour of celebrated Parisian bakers who define French cuisine and hard work. Nike Air cushioning under your feet feels softer than freshly baked brioche while a durable upper features a French flag and baking champion's wheat laurel on opposite heels. \"\"Fresh baked daily\"\" is written on the liner", "rating": " nodding to those who feed the city of style.\"", "reviews": "5"}, {"product_name": "Nike Epic Phantom React A.I.R. Cody Hudson", "product_id": "CI1718-001", "listing_price": 13995, "sale_price": 8397, "discount": 0, "brand": "Nike", "description": "\"Soft to the touch, the Nike Epic Phantom React A.I.R. lets go of laces for slip-on style that has you up and running in no time. A sock-like fit within breathable Flyknit feels as though the Phantom \"\"disappears\"\" as you run", "rating": " while a polka-dotted upper gets you noticed.\"", "reviews": "5"}, {"product_name": "Nike Air Max 90", "product_id": "CD0490-101", "listing_price": 0, "sale_price": 9995, "discount": 0, "brand": "Nike", "description": "Clean lines, versatile and timeless\u00e2\u20ac\u201dthe people's shoe returns with the Nike Air Max 90. Featuring the same iconic Waffle sole, stitched overlays and classic TPU accents you've come to love, it lets you walk among the pantheon of Air.", "rating": "5", "reviews": "9"}, {"product_name": "Nike Zoom Gravity", "product_id": "BQ3202-011", "listing_price": 0, "sale_price": 7995, "discount": 0, "brand": "Nike", "description": "Designed to make fast go faster, the Nike Zoom Gravity is built to take you from quick tempo runs to winning races. Snappy forefoot propulsion and grippy, multi-surface traction combine to maximize your stride.", "rating": "3.1", "reviews": "8"}, {"product_name": "Nike Air Max 270 React ENG", "product_id": "CD0113-400", "listing_price": 0, "sale_price": 14995, "discount": 0, "brand": "Nike", "description": "The Nike Air Max 270 React ENG combines a full-length React foam midsole with a 270 Max Air unit for unrivalled comfort and a striking visual experience.", "rating": "5", "reviews": "1"}, {"product_name": "Nike Air Max 270 React", "product_id": "AO4971-700", "listing_price": 12995, "sale_price": 7797, "discount": 0, "brand": "Nike", "description": "The bold silhouette of Nike Air lifts the Nike Air Max 270 React to new heights, while the Nike React foam midsole delivers exceptional cushioning. Imagine all-day comfort with unstoppable style.", "rating": "3.9", "reviews": "33"}, {"product_name": "Nike React Presto", "product_id": "AV2605-101", "listing_price": 9995, "sale_price": 5997, "discount": 0, "brand": "Nike", "description": "Inspired by the early 2000s original, the Nike React Presto puts an exaggerated spin on an unconventional icon. Nike React foam delivers an expressive look with a lightweight, bouncy feel and a whole lot of personality.", "rating": "3.7", "reviews": "27"}, {"product_name": "Nike Legend React", "product_id": "AA1625-009", "listing_price": 0, "sale_price": 8795, "discount": 0, "brand": "Nike", "description": "The Nike Legend React Men's Running Shoe features a breathable upper with synthetic overlays that enhance durability while smooth, responsive foam cushions every step as you run.", "rating": "4.2", "reviews": "9"}, {"product_name": "NikeCourt Air Max Wildcard", "product_id": "AO7351-104", "listing_price": 0, "sale_price": 7995, "discount": 0, "brand": "Nike", "description": "The NikeCourt Air Max Wildcard delivers the comfort you need to hit hard and move fast on the court. A Max Air unit under your heel cushions every step, while an innovative Lunarlon midsole provides a springy underfoot sensation and extra stability.", "rating": "2.7", "reviews": "3"}, {"product_name": "Nike Free Metcon 3", "product_id": "CJ0861-010", "listing_price": 0, "sale_price": 9995, "discount": 0, "brand": "Nike", "description": "The Nike Free Metcon 3 combines Nike Free flexibility around the forefoot with Metcon stability in the heel to help you get the most out of your training session.", "rating": "5", "reviews": "1"}, {"product_name": "Nike SB Air Max Stefan Janoski 2", "product_id": "AQ7477-009", "listing_price": 0, "sale_price": 9995, "discount": 0, "brand": "Nike", "description": "The Nike SB Air Max Stefan Janoski 2 hugs your foot with a breathable textile upper. A Max Air unit in the heel cushions every step, while a flat rubber outsole optimises grip when you're on your board.", "rating": "2.6", "reviews": "11"}, {"product_name": "Nike Free RN Flyknit 3.0", "product_id": "AQ5707-001", "listing_price": 10995, "sale_price": 7697, "discount": 0, "brand": "Nike", "description": "Ideal for runs up to 3 miles, the Nike Free RN Flyknit 3.0 delivers a lace-free design so you can slip in and hit your stride. An updated flex groove pattern and modified midsole foam provides more flexibility than its predecessor, creating a barefoot sensation with every step. A mix of supportive and stretchy yarns are zonally placed for comfort that moves with your foot.", "rating": "3.9", "reviews": "10"}, {"product_name": "Nike ISPA Joyride Envelope", "product_id": "BV4584-001", "listing_price": 16995, "sale_price": 13597, "discount": 0, "brand": "Nike", "description": "Utilising the latest innovations and Nike's ISPA project\u00e2\u20ac\u201dwhich touts a philosophy of improvise, scavenge, protect and adapt\u00e2\u20ac\u201dthe Nike ISPA Joyride Envelope delivers a futuristic shoe built for taking on the elements. Innovative details provide easy on and off and help support you in wet or warm conditions.", "rating": "5", "reviews": "2"}, {"product_name": "Nike Phantom Venom Academy FG", "product_id": "AO0566-606", "listing_price": 0, "sale_price": 7495, "discount": 0, "brand": "Nike", "description": "The Nike Phantom Venom Academy FG is engineered for powerful, precise strikes that win games. Ridges on the instep create spin to control the flight of the ball, while the firm-ground plate provides the traction needed to unleash at any moment.", "rating": "2.8", "reviews": "5"}, {"product_name": "Nike Air Ghost Racer", "product_id": "AT5410-003", "listing_price": 9995, "sale_price": 6997, "discount": 0, "brand": "Nike", "description": "Designed for speed, stability and comfort, the Nike Air Ghost Racer was a hit 20 years ago\u00e2\u20ac\u201dand now it's back in a stitch-for-stitch remake. And though it has all the same features as the original, it might be even better than you remember.", "rating": "4.5", "reviews": "2"}, {"product_name": "Nike ACG Air Terra Antarktik", "product_id": "BV6348-300", "listing_price": 0, "sale_price": 15995, "discount": 0, "brand": "Nike", "description": "\"Designed and tested in Oregon, the Nike ACG Antarktik is a \"\"jacket\"\" for your foot. Its tough ripstop upper combines with a GORE-TEX lining to help keep your foot dry. All-new lug details use hard rubber for traction in all conditions.\"", "rating": "2.6", "reviews": "20"}, {"product_name": "Nike Mercurial Superfly 7 Academy MG", "product_id": "AT7946-414", "listing_price": 0, "sale_price": 8495, "discount": 0, "brand": "Nike", "description": "Building on the forefoot plate innovation of the 6, the Nike Mercurial Superfly 7 Academy MG Boot adds a versatile multi-ground plate that provides traction on natural- and artificial-grass surfaces.", "rating": "5", "reviews": "2"}, {"product_name": "Nike AlphaDunk", "product_id": "BQ5401-001", "listing_price": 15995, "sale_price": 11197, "discount": 0, "brand": "Nike", "description": "Join the hoops uprising in the AlphaDunk, one of Nike Basketball's bounciest game shoes to date. The revamped upper construction is light and supportive and a large cushioning unit spans nearly the entire forefoot, giving you all the responsiveness you can handle on the court.", "rating": "2.9", "reviews": "12"}, {"product_name": "Nike Daybreak SP", "product_id": "BV7725-500", "listing_price": 7995, "sale_price": 4797, "discount": 0, "brand": "Nike", "description": "The Nike Daybreak SP marks the return of the 1979 original, featuring suede and nylon on the upper and old-school graphics on the tongue for a '70s runner-inspired look and feel.", "rating": "5", "reviews": "3"}, {"product_name": "Nike x MMW Joyride CC3 Setter", "product_id": "CU7623-002", "listing_price": 0, "sale_price": 16995, "discount": 0, "brand": "Nike", "description": "Alyx founder and creative director Matthew M. Williams is known for his ability to push fashion into new spaces. His angle is simple: Combine the influence of his life in New York and California with the latest innovations. The Nike x MMW Joyride CC3 Setter runs with that idea, bringing you to a world of cushioning and comfort.", "rating": "3.5", "reviews": "2"}, {"product_name": "Nike SB Blazer Low GT", "product_id": "704939-103", "listing_price": 0, "sale_price": 6995, "discount": 0, "brand": "Nike", "description": "The Nike SB Blazer Low GT pairs a supportive feel with lightweight, responsive cushioning for everyday use. Just like Grant Taylor, it blends contemporary style with old-school traditions.", "rating": "4.3", "reviews": "8"}, {"product_name": "LeBron 17 Monstars", "product_id": "CD5050-400", "listing_price": 0, "sale_price": 16995, "discount": 0, "brand": "Nike", "description": "The Monstars have crash-landed in the Windy City, prepared to strip us of some of our greatest hardwood heroes. With the game in danger, who can Bugs and the Tune Squad turn to? Who other than The King himself, LeBron James, poised to dash the hopes and dreams of Mr Swackhammer and any team that stands in his way? The LeBron 17 Monstars is here just in time for All-Star in Chicago, where LeBron is ready to represent the Tune Squad and all that is great about the sport of basketball.", "rating": "4.6", "reviews": "5"}, {"product_name": "Kyrie 5 x Bandulu", "product_id": "CK5836-100", "listing_price": 10995, "sale_price": 8797, "discount": 0, "brand": "Nike", "description": "Designed in collaboration with Pat Peltier, the mind behind up-cycled vintage label Bandulu, the Kyrie 5 x Bandulu explores process, approach and technique. The brand's signature paint splatters give the shoe an expression that speaks to Kyrie's creativity and dedication to his craft\u00e2\u20ac\u201don and off the court.", "rating": "5", "reviews": "1"}, {"product_name": "Nike Air Max Impact", "product_id": "CI1396-600", "listing_price": 0, "sale_price": 7995, "discount": 0, "brand": "Nike", "description": "The Nike Air Max Impact infuses bold, expressive details into a design that's a beast on the court. Responsive cushioning helps soften hard landings, while the moulded heel clip and dual-strap system combine for a lightweight, locked-in feel.", "rating": "5", "reviews": "1"}, {"product_name": "Nike Air Max 90 QS", "product_id": "CD0916-001", "listing_price": 0, "sale_price": 11995, "discount": 0, "brand": "Nike", "description": "\"Originally designed by Tinker Hatfield in 1990, the Air Max 90 has been re-imagined. Widely considered one of the biggest cross-cultural icons of the early '00s, this iteration pays tribute to the influential 2003 \"\"Snakeskin\"\" release with premium materials and a bold twist on the original.\"", "rating": "5", "reviews": "1"}, {"product_name": "Nike React Element 55 SE", "product_id": "BV1507-001", "listing_price": 10995, "sale_price": 6597, "discount": 0, "brand": "Nike", "description": "The Nike React Element 55 SE borrows design lines from heritage runners like the Nike Internationalist, then places it all on Nike React technology.", "rating": "4.8", "reviews": "5"}, {"product_name": "Jordan Proto-Max 720", "product_id": "BQ6623-070", "listing_price": 15995, "sale_price": 12797, "discount": 0, "brand": "Nike", "description": "Inspired by outer space flight, the Jordan Proto-Max 720 provides all-day comfort with a future-forward look. An outer shroud covers the sock-like bootie construction, while Nike Air cushions every step.", "rating": "4.4", "reviews": "18"}, {"product_name": "Nike React Element 55 SE", "product_id": "CI3831-200", "listing_price": 10995, "sale_price": 6597, "discount": 0, "brand": "Nike", "description": "The Nike React Element 55 SE borrows design lines from heritage runners like the Nike Internationalist, adds reflective graphics, then places it all on Nike React technology.", "rating": "4", "reviews": "1"}, {"product_name": "Nike Air Max2 Light", "product_id": "AO1741-003", "listing_price": 11995, "sale_price": 8397, "discount": 0, "brand": "Nike", "description": "Originally released in 1994, the Nike Air Max2 Light returns as a near-exact replica of the iconic runner with style for the street. Its mesh and synthetic upper, moulded heel and Max Air unit honour the OG, while the soft foam midsole optimises all-day comfort.", "rating": "3.7", "reviews": "3"}, {"product_name": "Nike Air Max 270", "product_id": "AH8050-100", "listing_price": 0, "sale_price": 13995, "discount": 0, "brand": "Nike", "description": "Nike's first lifestyle Air Max lets you greet the streets with the soft, smooth and resilient ride of the Nike Air Max 270. The design draws inspiration from the Air Max pantheon, showcasing Nike's greatest innovation with its large window and fresh array of colours.", "rating": "3.8", "reviews": "81"}, {"product_name": "Nike Air Force 1 '07 LV8", "product_id": "CK4363-100", "listing_price": 0, "sale_price": 7595, "discount": 0, "brand": "Nike", "description": "The Nike Air Force 1 '07 LV8 has the same hoops-inspired performance of the '82 OG plus fresh new patterns for a sleek look that turns heads.", "rating": "5", "reviews": "6"}, {"product_name": "Nike Air Max 90", "product_id": "CN8490-100", "listing_price": 0, "sale_price": 9995, "discount": 0, "brand": "Nike", "description": "Nothing as fly, nothing as comfortable, nothing as proven. The Nike Air Max 90 stays true to its OG running roots with the iconic Waffle sole, stitched overlays and classic TPU details. Classic colours celebrate your fresh look while Max Air cushioning adds comfort to the journey.", "rating": "5", "reviews": "3"}, {"product_name": "Nike Phantom Vision Academy Dynamic Fit TF", "product_id": "AO3269-717", "listing_price": 8495, "sale_price": 5947, "discount": 0, "brand": "Nike", "description": "The Nike Phantom Vision Academy Dynamic Fit TF Artificial Turf Football Boot provides the precise touch to win small-sided glory, wherever the game finds you. Webbing on the laces provides lockdown while a textured instep is always ready to receive, turn and score.", "rating": "4", "reviews": "3"}, {"product_name": "Nike ACG MOC 3.0", "product_id": "CI9367-301", "listing_price": 0, "sale_price": 7995, "discount": 0, "brand": "Nike", "description": "Trail-ready traction makes the Nike ACG Moc 3.0 a go-to for your next outdoor adventure. Designed and tested in Oregon, it features a sticky rubber heel and toe tip.", "rating": "3.5", "reviews": "2"}, {"product_name": "Nike Air DSVM", "product_id": "AT8179-100", "listing_price": 15995, "sale_price": 9597, "discount": 0, "brand": "Nike", "description": "The lightweight Nike Air DSVM gives you all-day comfort and street-ready style in a modern take on a classic silhouette. An adjustable strap lets you change up the fit for a look that's sure to turn heads.", "rating": "4.4", "reviews": "7"}, {"product_name": "Nike x Carhartt WIP Air Max 95", "product_id": "AV3866-001", "listing_price": 0, "sale_price": 16995, "discount": 0, "brand": "Nike", "description": "The Nike x Carhartt WIP Air Max 95 features reflective details and neon pops of colour. Carhartt WIP materials help construct the durable upper of a new take on the first sneaker with visible forefoot Nike Air.", "rating": "5", "reviews": "1"}, {"product_name": "Nike Odyssey React Flyknit 2", "product_id": "AH1015-010", "listing_price": 9995, "sale_price": 6997, "discount": 0, "brand": "Nike", "description": "The Nike Odyssey React Flyknit 2 provides a strategic combination of lightweight Flyknit construction and synthetic material for support. Underfoot, Nike React cushioning delivers a soft, springy ride for a route that begs to be crushed.", "rating": "4", "reviews": "25"}, {"product_name": "Nike Tiempo Legend 8 Elite FG", "product_id": "AT5293-004", "listing_price": 0, "sale_price": 20995, "discount": 0, "brand": "Nike", "description": "The Nike Tiempo Legend 8 Elite FG takes the legendary touch of premium kangaroo leather and adds foot-hugging Quad-Fit mesh in the lining and a wrap-around Flyknit tongue that feels supportive under your arch.", "rating": "3.1", "reviews": "7"}, {"product_name": "Nike Joyride CC3 Setter", "product_id": "AT6395-002", "listing_price": 14995, "sale_price": 10497, "discount": 0, "brand": "Nike", "description": "Lounge wherever you go and let the Nike Joyride CC3 Setter take you into a new world of comfort. It places your feet directly on soft foam and innovative bead-pods for extra comfort, while exaggerated textures add unrivalled depth to your edgy attitude.", "rating": "4", "reviews": "6"}, {"product_name": "Nike Renew Run", "product_id": "CK6357-005", "listing_price": 0, "sale_price": 6995, "discount": 0, "brand": "Nike", "description": "The Nike Renew Run keeps you moving with softer foam for a cushioned feel. Designed with the everyday runner in mind, this shoe delivers secure support and durable traction for comfort on the go.", "rating": "4.3", "reviews": "12"}, {"product_name": "Nike React Ianga", "product_id": "AV5555-001", "listing_price": 10995, "sale_price": 8797, "discount": 0, "brand": "Nike", "description": "The Nike React Ianga takes elements from a jungle boot and mixes them with modern, technical details. Part of the 10th Collection, this shoe is a unique, military-inspired expression of the React family.", "rating": "4.3", "reviews": "9"}, {"product_name": "Air Jordan 10 Retro", "product_id": "310805-137", "listing_price": 0, "sale_price": 15995, "discount": 0, "brand": "Nike", "description": "Featuring soft, lightweight cushioning, the Air Jordan 10 Retro offers performance-inspired comfort with iconic Air Jordan detailing.", "rating": "4.7", "reviews": "223"}, {"product_name": "Air Jordan 12 Retro", "product_id": "130690-017", "listing_price": 0, "sale_price": 15995, "discount": 0, "brand": "Nike", "description": "An all-time favourite among players and sneakerheads, the Air Jordan 12 Retro features full-length Zoom Air cushioning and full-grain leather styled with distinct radial stitch lines.", "rating": "4.5", "reviews": "24"}, {"product_name": "Nike Air Max 270 React", "product_id": "CT1264-101", "listing_price": 0, "sale_price": 12995, "discount": 0, "brand": "Nike", "description": "Nike's first lifestyle Air Max meets the softest, smoothest, most resilient foam yet in the Nike Air Max 270 React. The design draws inspiration from the Air Max pantheon, showcasing Nike's greatest innovation with its large window and fresh array of colours.", "rating": "4", "reviews": "1"}, {"product_name": "Nike Air Zoom Winflo 6", "product_id": "AQ7497-300", "listing_price": 0, "sale_price": 7995, "discount": 0, "brand": "Nike", "description": "In a fluid design that speaks the language of fast, the Nike Air Zoom Winflo 6 has less bulk and a more sculpted profile than previous versions. It has 2 cushioning units for targeted responsiveness in the forefoot and heel. Up top, mesh in the upper provides breathability.", "rating": "5", "reviews": "3"}, {"product_name": "Nike Air Max 97", "product_id": "CT4526-100", "listing_price": 0, "sale_price": 15995, "discount": 0, "brand": "Nike", "description": "Remastered from the OG that shook up the running world, the Nike Air Max 97 elevates the classic design. Memorial Day Parade White and fresh Sky Blue tint the sole. Flex your summertime vibes and float the streets in style.", "rating": "5", "reviews": "1"}, {"product_name": "Nike MX-720-818", "product_id": "CI3871-300", "listing_price": 0, "sale_price": 15995, "discount": 0, "brand": "Nike", "description": "The Nike MX-720-818 uses materials inspired by space suits for a futuristic take on classic Air Max DNA.", "rating": "4.4", "reviews": "5"}, {"product_name": "Nike React Element 55", "product_id": "BQ2728-012", "listing_price": 0, "sale_price": 11995, "discount": 0, "brand": "Nike", "description": "The Nike React Element 55 Women's Shoe borrows design lines from heritage Nike runners like the Internationalist, adds reflective graphics and then places it all on Nike React technology.", "rating": "3.9", "reviews": "17"}, {"product_name": "Nike ZoomX Vista Grind", "product_id": "CT8919-700", "listing_price": 0, "sale_price": 13995, "discount": 0, "brand": "Nike", "description": "The Nike ZoomX Vista Grind brings you to a bold new place both rebellious and refined. It's comfort you can see and feel in a brand new silhouette.", "rating": "4.5", "reviews": "2"}, {"product_name": "PG 4 EP", "product_id": "CD5082-001", "listing_price": 0, "sale_price": 8995, "discount": 0, "brand": "Nike", "description": "Paul George is the rare high-percentage shooter who's also a coach's dream on D. Designed for his unrivalled 2-way game, the PG 4 EP unveils a new cushioning system that's lightweight, articulated and responsive, ideal for players like PG who go hard every play.", "rating": "4.5", "reviews": "2"}, {"product_name": "Nike Air Zoom Pegasus 36", "product_id": "BV5739-500", "listing_price": 10995, "sale_price": 7697, "discount": 0, "brand": "Nike", "description": "The iconic Nike Air Zoom Pegasus 36 returns with more perforations for more cooling. An engineered mesh and synthetic upper strategically targets breathability across high-heat areas. A slimmer heel collar and tongue reduce bulk without compromising comfort, while exposed Flywire cables give you a snug fit at higher speeds.", "rating": "4.7", "reviews": "3"}, {"product_name": "Nike Air Force 1 '07 LV8", "product_id": "CD0887-201", "listing_price": 0, "sale_price": 7995, "discount": 0, "brand": "Nike", "description": "The radiance lives on in the Nike Air Force 1 '07, the b-ball OG that puts a fresh, outdoorsy spin on what you know best: soft suedes, bold colours and the perfect amount of flash to make you shine.", "rating": "5", "reviews": "3"}, {"product_name": "Nike Air VaporMax Flyknit 3", "product_id": "AJ6900-102", "listing_price": 0, "sale_price": 16995, "discount": 0, "brand": "Nike", "description": "Be bouncy and buoyant in the Nike Air VaporMax Flyknit 3. The upper features flowing 2-tone lines of breathable, stretchable Flyknit construction for unique, street-ready style. Revolutionary VaporMax technology keeps a spring in your step with toe-to-heel cushioning.", "rating": "3.7", "reviews": "50"}, {"product_name": "Nike Air Max Verona", "product_id": "CI9842-500", "listing_price": 0, "sale_price": 9995, "discount": 0, "brand": "Nike", "description": "Designed with every woman in mind, the mixed-material upper features a plush collar, flashy colours and unique stitching patterns. Nike Air cushioning combines with the lifted foam heel for a modern touch, adding comfort and style to your journey.", "rating": "5", "reviews": "2"}, {"product_name": "Nike Air Force 1 Shadow", "product_id": "CI0919-100", "listing_price": 0, "sale_price": 8995, "discount": 0, "brand": "Nike", "description": "The Nike Air Force 1 Shadow pays homage to the women who are setting an example for the next generation by being forces of change in their community. This sneaker reflects this ethos in its design with double the Swoosh, double the height and double the force.", "rating": "4.8", "reviews": "20"}, {"product_name": "Nike Air Tailwind 79", "product_id": "487754-303", "listing_price": 0, "sale_price": 7995, "discount": 0, "brand": "Nike", "description": "Making its debut in 1978 for the Honolulu Marathon, the Nike Air Tailwind was a revolution in cushioning. Now, a racing icon returns with the Nike Air Tailwind 79, featuring nearly original materials and colours, plus the Nike Air unit that made it a winner.", "rating": "3.9", "reviews": "17"}, {"product_name": "Nike TiempoX Lunar Legend VII Pro TF", "product_id": "AH7249-118", "listing_price": 8995, "sale_price": 7197, "discount": 0, "brand": "Nike", "description": "The Nike TiempoX Lunar Legend VII Pro Turf Football Boot features lightweight foam cushioning and a premium leather construction for a flexible fit and dominating touch when playing on turf pitches.", "rating": "3", "reviews": "1"}, {"product_name": "Nike Air Max Plus III", "product_id": "CJ9684-001", "listing_price": 15995, "sale_price": 11197, "discount": 0, "brand": "Nike", "description": "The Nike Air Max Plus III combines ultra-comfortable Tuned Air Technology with an energetic silhouette made famous by its predecessors. The III updates the look with TPU details fused to the upper while paying homage to the iconic colour fade.", "rating": "5", "reviews": "2"}, {"product_name": "Nike Zoom 2K", "product_id": "AO0354-108", "listing_price": 0, "sale_price": 6995, "discount": 0, "brand": "Nike", "description": "Inspired by running silhouettes from the early 2000s, the Nike Zoom 2K is reimagining the golden age of running sneakers. A classic Zoom bag takes it back to where it began, while the rubber wings that wrap the outsole push the design into the future.", "rating": "4.9", "reviews": "8"}, {"product_name": "Nike Zoom Pegasus Turbo 2", "product_id": "AT2863-100", "listing_price": 0, "sale_price": 15995, "discount": 0, "brand": "Nike", "description": "The Nike Zoom Pegasus Turbo 2 is updated with a feather-light upper, while innovative foam brings revolutionary responsiveness to your long-distance training.", "rating": "3.1", "reviews": "54"}, {"product_name": "Nike Kawa Shower", "product_id": "832528-001", "listing_price": 0, "sale_price": 1595, "discount": 0, "brand": "Nike", "description": "The Nike Kawa Shower Men's Slide is designed to help feet recover after competition. A textured Solarsoft footbed and flexible foam outsole offer lightweight comfort.", "rating": "4.5", "reviews": "6"}, {"product_name": "Nike React Infinity Run Flyknit", "product_id": "CD4371-001", "listing_price": 0, "sale_price": 13995, "discount": 0, "brand": "Nike", "description": null, "rating": "4.6", "reviews": "68"}, {"product_name": "Air Jordan XXXIII", "product_id": "AQ8830-016", "listing_price": 18995, "sale_price": 15197, "discount": 0, "brand": "Nike", "description": "The Air Jordan XXXIII rewrites the story of an iconic basketball shoe. Its revolutionary closure system secures you for flight, while new FlightSpeed technology is tuned for optimal energy return.", "rating": "4.1", "reviews": "17"}, {"product_name": "Nike Odyssey React", "product_id": "AO9819-001", "listing_price": 11995, "sale_price": 9637, "discount": 0, "brand": "Nike", "description": "The Nike Odyssey React Men's Running Shoe provides crazy comfort that lasts as long as you can run. Its Nike React foam cushioning is responsive yet lightweight, durable yet soft. This attraction of opposites creates a sensation that not only enhances the feeling of moving forwards, but makes running feel fun, too.\u00c2\u00a0The upper of the Nike Odyssey React is built with a lightweight, breathable fabric instead of the premium Flyknit featured on the Nike Epic React.", "rating": "4.4", "reviews": "27"}, {"product_name": "Nike Metcon 5", "product_id": "AQ1189-009", "listing_price": 0, "sale_price": 10995, "discount": 0, "brand": "Nike", "description": "The Nike Metcon 5 is our most tuned Metcon yet. This means specific stability for heavy lifting, traction made for speed and durability where you need it. It even includes a Hyperlift insert that's compatible with all prior versions of the Metcon. Meet your secret weapon for weight-lifting and high-impact training.", "rating": "3.7", "reviews": "31"}, {"product_name": "LeBron 7", "product_id": "CU5133-600", "listing_price": 16995, "sale_price": 13597, "discount": 0, "brand": "Nike", "description": "First debuted on the hardwood during one of the King's epic December showdowns, the LeBron 7 returns in familiar festive hues to celebrate the game and the season. Featuring the same supple Team Red upper and black accents as the original iteration, this limited-edition sneaker is expertly engineered for the street and arrives complete with the unmistakable Air iconic to the model.", "rating": "4.4", "reviews": "7"}, {"product_name": "Nike Blazer Low QS Flyleather with at least 50% leather fibre", "product_id": "CI5546-100", "listing_price": 0, "sale_price": 6495, "discount": 0, "brand": "Nike", "description": "Inspired by basketball, the Nike Blazer Low QS Flyleather features an innovative Flyleather upper for a premium look and bold graphics by artist Steven Harrington.", "rating": "2", "reviews": "2"}, {"product_name": "Nike SB Dunk High Pro", "product_id": "BQ6826-003", "listing_price": 0, "sale_price": 8995, "discount": 0, "brand": "Nike", "description": "The Nike SB Dunk High Pro pairs iconic Dunk style with a high-top design for a fresh look. A Zoom Air unit in the heel and a padded tongue create a comfortable fit that's made to skate.", "rating": "4.8", "reviews": "4"}, {"product_name": "Nike Air Max 90 FlyEase", "product_id": "CU0814-102", "listing_price": 0, "sale_price": 9995, "discount": 0, "brand": "Nike", "description": "Nike Sportswear's first collaboration by the Hatfield brothers, the Nike Air Max 90 FlyEase combines the timelessness of Tinker's original design with Tobie's FlyEase technology. The heel collapses when you step in then snaps back into place, providing quick, easy access to one of history's most iconic sneakers.", "rating": "4", "reviews": "1"}, {"product_name": "Nike Metcon 5 AMP", "product_id": "CD3395-006", "listing_price": 0, "sale_price": 11995, "discount": 0, "brand": "Nike", "description": "The Nike Metcon 5 AMP arms you with stability for heavy lifting and traction for sprints during high-impact training. It combines breathability and durability to be your secret weapon in the gym.", "rating": "5", "reviews": "2"}, {"product_name": "Nike M2K Tekno", "product_id": "AV4789-104", "listing_price": 8995, "sale_price": 7197, "discount": 0, "brand": "Nike", "description": "Drawing inspiration from the Monarch franchise, the Nike M2K Tekno combines real and synthetic leathers with textile for a layered look.", "rating": "4.4", "reviews": "7"}, {"product_name": "Nike React Kenny 55", "product_id": "CJ3312-001", "listing_price": 0, "sale_price": 12995, "discount": 0, "brand": "Nike", "description": "The Nike React Kenny 55 lets you rep the classic and the cutting edge at once. The lines are borrowed from OG Nike running shoes like the Internationalist, rooting you to sneaker heritage, while responsive React cushioning adds modern comfort that feels unbelievably soft. Its 2-tone marble print speaks to the duality of the real world. 1 part yin, 1 part yang. Everything in perfect balance.", "rating": "5", "reviews": "1"}, {"product_name": "Nike Air VaporMax 2019", "product_id": "AR6631-004", "listing_price": 15995, "sale_price": 12797, "discount": 0, "brand": "Nike", "description": "Designed for running but adopted by the street, the Nike Air VaporMax 2019 features the lightest, most flexible Air Max cushioning to date. A stretch woven material wraps your foot for lightweight support and stability, while an external reinforcement in the heel secures the back of your foot.", "rating": "3.8", "reviews": "24"}, {"product_name": "Nike React Element 55", "product_id": "BQ6166-003", "listing_price": 11995, "sale_price": 7197, "discount": 0, "brand": "Nike", "description": "The Nike React Element 55 Shoe borrows design lines from heritage runners like the Nike Internationalist and then places it all on Nike React technology.", "rating": "3.7", "reviews": "31"}, {"product_name": "Nike Air Force 1 Low Retro", "product_id": "CQ0492-001", "listing_price": 0, "sale_price": 10995, "discount": 0, "brand": "Nike", "description": "The legend lives on in the Nike Air Force 1 '07 Men's Shoe, a modern take on the iconic AF-1 that blends classic style and fresh details.", "rating": "4.5", "reviews": "2"}, {"product_name": "NikeCourt Zoom Cage 3", "product_id": "918193-700", "listing_price": 0, "sale_price": 13495, "discount": 0, "brand": "Nike", "description": "The NikeCourt Zoom Cage 3 offers zoned durability with a lightweight, pliable overlay that moves with you. A Zoom Air unit in the heel delivers a low-profile ride with responsive cushioning.", "rating": "3.6", "reviews": "20"}, {"product_name": "Nike Metcon Sport", "product_id": "AQ7489-008", "listing_price": 0, "sale_price": 7995, "discount": 0, "brand": "Nike", "description": "The Nike Metcon Sport is designed for heavy weightlifting like all Metcons, but is updated for increased agility during explosive movements and speed drills.", "rating": "3.6", "reviews": "14"}, {"product_name": "Jordan Mars 270", "product_id": "CD7070-009", "listing_price": 0, "sale_price": 14995, "discount": 0, "brand": "Nike", "description": "Drawing inspiration from four classic Air Jordans, the Jordan Mars 270 is a modern-day remix that offers a heavy dose of heritage, plus an enormous Max Air unit and springy foam for non-stop comfort.", "rating": "4.6", "reviews": "15"}, {"product_name": "Nike Air Zoom Vomero 14", "product_id": "AH7857-009", "listing_price": 0, "sale_price": 11995, "discount": 0, "brand": "Nike", "description": "The Nike Air Zoom Vomero 14 takes responsive cushioning to the next level. A full-length cushioning unit works with Nike React technology to deliver a super-snappy, smooth ride. Up top, the sleek design feels durable and supports your stride through every mile.", "rating": "4.2", "reviews": "23"}, {"product_name": "Nike Zoom Fly", "product_id": "880848-005", "listing_price": 0, "sale_price": 14495, "discount": 0, "brand": "Nike", "description": "Built with a carbon-infused nylon plate inspired by the VaporFly 4%\u00e2\u20ac\u201dour most efficient marathon shoe ever\u00e2\u20ac\u201dthe Nike Zoom Fly Men's Running Shoe is the perfect response to the demands of your toughest tempo runs, long runs and race days.", "rating": "4.3", "reviews": "105"}, {"product_name": "Nike Zoom Fly 3", "product_id": "AT8240-003", "listing_price": 0, "sale_price": 13995, "discount": 0, "brand": "Nike", "description": "Inspired by the Vaporfly, the Nike Zoom Fly 3 gives distance runners race-day comfort and durability. The power of a carbon-fibre plate keeps you in the running mile after mile.", "rating": "4", "reviews": "30"}, {"product_name": "Nike Air Zoom Pegasus 35", "product_id": "942851-002", "listing_price": 0, "sale_price": 10995, "discount": 0, "brand": "Nike", "description": "The Nike Air Zoom Pegasus 35 is built for runners at every level, whether you're a seasoned veteran or just starting out.\u00c2\u00a0It features a breathable mesh upper with an out-turned collar for Achilles comfort. Down below, the cushioning has been updated with full-length Zoom Air for the first time ever, to deliver a smoother, more natural stride.", "rating": "3.9", "reviews": "61"}, {"product_name": "Nike Air Zoom Pegasus 36 Trail", "product_id": "AR5677-200", "listing_price": 0, "sale_price": 10995, "discount": 0, "brand": "Nike", "description": "An icon trades pavement for path with the Nike Air Zoom Pegasus 36 Trail. A perforated mesh upper adds breathability, as double Zoom Air units underfoot cushion your stride. Opposing lugs on the outsole optimise traction on your uphill climbs.", "rating": "4.6", "reviews": "12"}, {"product_name": "Nike Phantom Vision Club Dynamic Fit FG", "product_id": "AJ6959-717", "listing_price": 5995, "sale_price": 4497, "discount": 0, "brand": "Nike", "description": "The Nike Phantom Vision Club Dynamic Fit FG brings the fierce precision of street play to the pitch. A foot-hugging Dynamic Fit collar combines with targeted texture for precision to create a boot for the finishers, the providers and the battlers of tomorrow's game.", "rating": "5", "reviews": "1"}, {"product_name": "Nike Air Monarch IV", "product_id": "415445-102", "listing_price": 0, "sale_price": 5295, "discount": 0, "brand": "Nike", "description": "The Nike Air Monarch IV Lifestyle/Gym Shoe delivers lightweight cushioning and durable support with a Phylon midsole and a leather upper. Flex grooves provide natural flexibility with every step.", "rating": "4.1", "reviews": "94"}, {"product_name": "Zoom Freak 1", "product_id": "BQ5422-200", "listing_price": 0, "sale_price": 9995, "discount": 0, "brand": "Nike", "description": "Get your freak on in Giannis Antetokounmpo's debut signature shoe, Nike's first-ever for the international basketball sensation. The Zoom Freak 1 has the extra-responsive cushioning, forefoot stability and multi-directional traction needed to complement his freakishly athletic game.", "rating": "4.2", "reviews": "30"}, {"product_name": "Nike Mercurial Superfly 7 Academy IC", "product_id": "AT7975-606", "listing_price": 0, "sale_price": 8495, "discount": 0, "brand": "Nike", "description": "The soft upper of the Nike Mercurial Superfly 7 Academy IC wraps your foot for a second-skin fit, while the rubber outsole helps supercharge traction on the court or street.", "rating": "5", "reviews": "1"}, {"product_name": "Air Jordan 1 Low", "product_id": "553558-125", "listing_price": 0, "sale_price": 8995, "discount": 0, "brand": "Nike", "description": "Inspired by the original that debuted in 1985, the Air Jordan 1 Low offers a clean, classic look that's familiar yet always fresh. It's made for casual mode, with an iconic design that goes with everything and never goes out of style.", "rating": "4.6", "reviews": "34"}, {"product_name": "Nike Mercurial Vapor 13 Elite FG", "product_id": "AQ4176-049", "listing_price": 0, "sale_price": 21995, "discount": 0, "brand": "Nike", "description": "Building on the 360-degree Flyknit innovation of the 12, the Nike Mercurial Vapor 13 Elite FG adds a Nike Aerowtrac zone to the forefoot and a slightly stiffer chassis to help supercharge traction. Inside, an insole with NikeGrip technology provides maximum interior traction underfoot and lightweight cushioning.", "rating": "3.5", "reviews": "4"}, {"product_name": "Nike Air VaporMax 360", "product_id": "CK2718-003", "listing_price": 0, "sale_price": 18995, "discount": 0, "brand": "Nike", "description": "Featuring a full-length foam midsole and VaporMax Air unit, the Nike Air VaporMax 360 gives you remarkable underfoot comfort with bold 2000s style inspired by the Air Max 360.", "rating": "4.1", "reviews": "10"}, {"product_name": "Nike Air Max 720", "product_id": "AO2924-401", "listing_price": 15995, "sale_price": 12797, "discount": 0, "brand": "Nike", "description": "The Nike Air Max 720 goes bigger than ever before with Nike's tallest Air unit yet, offering more air underfoot for unprecedented, all-day comfort. Has Air Max gone too far? We hope so.", "rating": "4.2", "reviews": "62"}, {"product_name": "Nike Zoom KD12", "product_id": "AR4229-003", "listing_price": 0, "sale_price": 12995, "discount": 0, "brand": "Nike", "description": "Kevin Durant always looks relaxed\u00e2\u20ac\u201duntil he attacks. His game is reserved yet explosive, difficult to guard and impossible to stop. The KD12 was built for his dominance and endless energy all game long, with the latest innovation in Nike Zoom Air technology.", "rating": "4.6", "reviews": "18"}, {"product_name": "Nike Free X Metcon 2", "product_id": "AQ8306-407", "listing_price": 9995, "sale_price": 7997, "discount": 0, "brand": "Nike", "description": "The Nike Free X Metcon will take you from a short run to your gym workout. Superior breathability and comfort combined with durability and response make this stable trainer perfect for even the most ambitious of fitness goals.", "rating": "3.4", "reviews": "23"}, {"product_name": "Nike Air Max 90", "product_id": "CD0881-104", "listing_price": 0, "sale_price": 9995, "discount": 0, "brand": "Nike", "description": "Clean lines, versatile and timeless\u00e2\u20ac\u201dthe people's shoe returns with the Nike Air Max 90. Featuring the same iconic Waffle sole, stitched overlays and classic TPU accents you've come to love, it lets you walk among the pantheon of Air.", "rating": "4.7", "reviews": "9"}, {"product_name": "Air Jordan 4 Retro SE", "product_id": "CT5342-007", "listing_price": 0, "sale_price": 18995, "discount": 0, "brand": "Nike", "description": "As fresh as its first release, the Air Jordan 4 Retro remakes Michael Jordan's 4th signature shoe for today's streetwear savants. Suede and textile materials provide lightweight durability and support, while Nike Air cushioning offers comfort with every step.", "rating": "4.8", "reviews": "11"}, {"product_name": "Nike SB Zoom Stefan Janoski Canvas RM Premium", "product_id": "AQ7878-003", "listing_price": 0, "sale_price": 7995, "discount": 0, "brand": "Nike", "description": "The Nike SB Zoom Stefan Janoski Canvas RM Premium pairs a minimal look with a modern fit. It has been updated with a new, plush sockliner and a flexible outsole for better boardfeel right out of the box.", "rating": "1", "reviews": "1"}, {"product_name": "Nike Zoom Rival Fly", "product_id": "CD7288-001", "listing_price": 7995, "sale_price": 6397, "discount": 0, "brand": "Nike", "description": "Inspired by Japan's Ekiden relay runners, the Nike Zoom Rival Fly features a futuristic look with a Zoom Air unit in the forefoot that gives you responsive propulsion. Flex grooves underneath optimise toe-off and soft foam cushions your stride. The mesh and synthetic upper blends strength and breathability.", "rating": "5", "reviews": "1"}, {"product_name": "Nike Pegasus 36 FlyEase (Extra Wide)", "product_id": "BV0612-001", "listing_price": 0, "sale_price": 9995, "discount": 0, "brand": "Nike", "description": "The Nike Air Zoom Pegasus 36 FlyEase (Extra-Wide) maintains everything you love about the Pegasus and adds a zip for effortless on and off. The no-tie lacing system adjusts easily for a secure feel as you tackle your miles.", "rating": "3", "reviews": "4"}, {"product_name": "Nike ISPA Air Max 720", "product_id": "CD2182-001", "listing_price": 17995, "sale_price": 14397, "discount": 0, "brand": "Nike", "description": "Utilising the latest innovations and Nike's ISPA project\u00e2\u20ac\u201dwhich touts a philosophy of improvise, scavenge, protect and adapt\u00e2\u20ac\u201dthe Nike ISPA Air Max 720 delivers smooth cushioning. It features an extra-large air unit, providing support along with innovative details inspired by modern life in the city.", "rating": "3", "reviews": "4"}, {"product_name": "Nike Epic Phantom React Flyknit", "product_id": "BV0417-401", "listing_price": 12995, "sale_price": 7797, "discount": 0, "brand": "Nike", "description": "\"Soft to the touch, the Nike Epic Phantom React Flyknit is lace-free for a slip-on style that gets you up and running in no time. A snug, secure, sock-like fit within a breathable Flyknit upper feels as though the Phantom \"\"disappears\"\" as you run.\"", "rating": "4.4", "reviews": "12"}, {"product_name": "Nike Air Zoom Pegasus 36", "product_id": "AQ2203-003", "listing_price": 0, "sale_price": 9995, "discount": 0, "brand": "Nike", "description": "The iconic Nike Air Zoom Pegasus 36 returns with more perforations and engineered mesh in the upper, which strategically target breathability across high-heat areas. A slimmer heel collar and tongue reduce bulk without compromising comfort, while exposed Flywire cables give you a snug fit at higher speeds.", "rating": "3.6", "reviews": "23"}, {"product_name": "Jordan Aerospace 720", "product_id": "BV5502-600", "listing_price": 0, "sale_price": 16995, "discount": 0, "brand": "Nike", "description": "With more Air underfoot, the Jordan Aerospace 720 delivers next-generation comfort with signature Jordan heritage.", "rating": "5", "reviews": "1"}, {"product_name": "Nike Air Max Plus III", "product_id": "CD7005-001", "listing_price": 0, "sale_price": 15995, "discount": 0, "brand": "Nike", "description": "Featuring the same Tuned Air technology that originally put it in the sneaker history books, the Nike Air Max Plus III updates the look with TPU fused to the upper while paying homage to the iconic colour fade.", "rating": "5", "reviews": "1"}, {"product_name": "Jordan Hydro 8", "product_id": "CD2803-001", "listing_price": 0, "sale_price": 3995, "discount": 0, "brand": "Nike", "description": "Made for athletes to relax in pre- and post-matches, the Jordan Hydro 8 works as an everyday, anytime slide. It offers the plush cushioning of a Solarsoft foam footbed and an adjustable strap.", "rating": "4", "reviews": "1"}, {"product_name": "Nike x Undercover React", "product_id": "CJ6971-001", "listing_price": 16995, "sale_price": 13597, "discount": 0, "brand": "Nike", "description": "Jun Takahashi's vision of chaos and balance comes to life in the modern age. The Nike x Undercover React pairs a classic welly with several technologies to create a shoe unlike any other.", "rating": "3.7", "reviews": "3"}, {"product_name": "Nike Air Max 98", "product_id": "640744-016", "listing_price": 16995, "sale_price": 10197, "discount": 0, "brand": "Nike", "description": "The Air Max 98 rode the wave of its legendary predecessor, debuting with full-length visible Air and fluid design lines. Now it returns, sporting the same signature look and a new run of colours.", "rating": "4.1", "reviews": "9"}, {"product_name": "Nike Air Max 200", "product_id": "AQ2568-100", "listing_price": 9995, "sale_price": 5997, "discount": 0, "brand": "Nike", "description": "With exceptional cushioning and modern detailing, the Nike Air Max 200 radiates cool while providing extreme comfort. Its design is inspired by patterns of energy radiating from the earth\u00e2\u20ac\u201dlike the flow of lava and the ocean's rhythmic waves.", "rating": "4.5", "reviews": "13"}, {"product_name": "Nike Air Max 90", "product_id": "CT2007-100", "listing_price": 0, "sale_price": 9995, "discount": 0, "brand": "Nike", "description": "\"The Nike Air Max 90 honours the OG with a revamped design that replicates the initial 1990 release. A \"\"clean slate\"\" colourway celebrates the shoe's 30th anniversary with the iconic Waffle sole.\"", "rating": "5", "reviews": "1"}, {"product_name": "Nike Air Zoom Terra Kiger 6", "product_id": "CJ0219-400", "listing_price": 0, "sale_price": 10995, "discount": 0, "brand": "Nike", "description": "The Nike Air Zoom Terra Kiger 6 is built to take on wet and rocky trails. Lightweight in design, it features a sleeker look with a woven heel for a secure fit and feel.", "rating": "5", "reviews": "2"}, {"product_name": "Nike Air Max 97 Utility", "product_id": "BQ5615-002", "listing_price": 15995, "sale_price": 11197, "discount": 0, "brand": "Nike", "description": "The Nike Air Max 97 Utility puts a cold-weather spin on a classic style. Synthetic panels, engineered rubber and reflective design touches let you feel secure when hitting the streets.", "rating": "5", "reviews": "1"}, {"product_name": "Jordan Jumpman 2020 PF", "product_id": "BQ3448-400", "listing_price": 0, "sale_price": 8995, "discount": 0, "brand": "Nike", "description": "The Jordan Jumpman 2020 PF delivers lightweight support for dynamic play on the court. A textile upper and secure midfoot webbing keep you moving freely during possessions.", "rating": "5", "reviews": "2"}, {"product_name": "Nike ACG React Terra Gobe", "product_id": "BV6344-001", "listing_price": 12995, "sale_price": 7797, "discount": 0, "brand": "Nike", "description": "The Nike ACG React Terra Gobe combines rugged durability with ACG style to get you where you need to go in comfort. The textile and synthetic upper is breathable and durable, and Nike React technology in the midsole provides an extremely smooth and comfortable ride.", "rating": "3.7", "reviews": "19"}, {"product_name": "Nike Air Force 1 '07 Essential", "product_id": "AO2132-401", "listing_price": 7995, "sale_price": 5597, "discount": 0, "brand": "Nike", "description": "Hoops in the park, Sunday BBQs and sunshine. The radiance lives on in the Nike Air Force 1 '07 Essential, the b-ball OG that puts a fresh spin on what you know best: crisp leather, bold colours and the perfect amount of flash to make you shine.", "rating": "4.4", "reviews": "5"}, {"product_name": "Nike Joyride Dual Run", "product_id": "CD4363-103", "listing_price": 0, "sale_price": 10995, "discount": 0, "brand": "Nike", "description": "The Nike Joyride Dual Run is designed to help make running feel easier and give your legs a day off. Tiny foam beads underfoot contour to your foot for cushioning that stands up to your mileage.", "rating": "4.8", "reviews": "5"}, {"product_name": "Jordan Proto-React Z", "product_id": "CI3794-600", "listing_price": 13995, "sale_price": 11197, "discount": 0, "brand": "Nike", "description": "Inspired by spacesuits, the Jordan Proto-React Z has a futuristic look with a fit and feel made for all-day wear. Responsive cushioning gives you more bounce with less weight, while an aeronautics-inspired shroud and snug bootie help keep you strapped in.", "rating": "4.6", "reviews": "5"}, {"product_name": "NikeCourt Air Zoom Vapor X", "product_id": "AA8030-108", "listing_price": 0, "sale_price": 14995, "discount": 0, "brand": "Nike", "description": "The NikeCourt Air Zoom Vapor X has an updated Dynamic Fit system with a full-length foot frame to provide ultimate lateral control. Its new generative outsole combined with a Zoom Air unit provides a lightweight, responsive feel on the court.", "rating": "3.3", "reviews": "13"}, {"product_name": "LeBron 17", "product_id": "BQ3177-100", "listing_price": 0, "sale_price": 16995, "discount": 0, "brand": "Nike", "description": "The LeBron 17 harnesses LeBron's strength and speed with containment and support for all-court domination. It features a lightweight mix of knit and heat-moulded yarns that gives each one a durable look and feel. Combined cushioning provides LeBron with the impact support and responsive energy return he needs to power through the long season.", "rating": "4.5", "reviews": "47"}, {"product_name": "Nike Benassi", "product_id": "343881-412", "listing_price": 0, "sale_price": 2495, "discount": 0, "brand": "Nike", "description": "The Nike Benassi Women's Slide features a lined upper with a bold logo for plush comfort and an athletic look. A foam midsole and outsole provide lightweight impact protection.", "rating": "4.3", "reviews": "12"}, {"product_name": "Nike Air Max Dia Icon Clash", "product_id": "AQ4312-107", "listing_price": 8995, "sale_price": 5397, "discount": 0, "brand": "Nike", "description": "The Nike Air Max Dia Icon Clash delivers a lifted look and airy aesthetic in a sleek shape. The minimal upper modernises the look, while a Max Air unit, surrounded by clear TPU, is amplified even further by an exaggerated midsole for a boost of style.", "rating": "4.6", "reviews": "23"}, {"product_name": "Air Jordan XXXIV PF", "product_id": "BQ3381-600", "listing_price": 0, "sale_price": 14995, "discount": 0, "brand": "Nike", "description": "The Air Jordan XXXIV PF continues the legacy of a cultural icon. Light, responsive and sculpted with aerodynamic precision, it combines a boldly unconventional midsole with herringbone traction to merge innovative and iconic design elements.", "rating": "5", "reviews": "2"}, {"product_name": "Nike Air Zoom Winflo 5", "product_id": "AA7406-006", "listing_price": 7995, "sale_price": 6397, "discount": 0, "brand": "Nike", "description": "The Nike Air Zoom Winflo 5 Men's Running Shoe provides a responsive ride and durable, multi-surface traction underfoot. Up top, engineered mesh delivers support and breathability where you need them, while an inner sleeve gives you a comfortable, sock-like fit as you hit your stride.", "rating": "3", "reviews": "6"}, {"product_name": "Nike Air Max 90", "product_id": "CD0917-300", "listing_price": 11995, "sale_price": 7197, "discount": 0, "brand": "Nike", "description": "With the Nike Air Max 90, a legendary shoe gets a luxe material treatment and brash colour palette with a history all of its own. Here, the Air Max 90 silhouette is clad in premium all-over suede with ballistic mesh accents to keep it breathable. This vibrant palette of saturated colours was made famous in the original Viotech release, which launched exclusively in Japan in the early 2000s. The head-turners have another classic to admire.", "rating": "3.2", "reviews": "5"}, {"product_name": "PG 3 NASA", "product_id": "CI2666-400", "listing_price": 9995, "sale_price": 7997, "discount": 0, "brand": "Nike", "description": "Paul George's moon shot took him from Palmdale to basketball stardom, and now he's heading to new heights. This space-themed version of the PG 3 offers sensational traction, springy responsiveness and lightweight containment for seamless moves between offence and defence.", "rating": "3.7", "reviews": "11"}, {"product_name": "Nike React Sertu", "product_id": "AT5301-003", "listing_price": 0, "sale_price": 12995, "discount": 0, "brand": "Nike", "description": "Emerging from The 10th, a new label that crosses tried-and-true workwear with Nike innovation, the Nike React Sertu blends handcrafted features with modern, technical elements. Borrowing elements from traditional moccasins and adding a touch of military-inspired detailing, it mixes utility with wearability, bringing a bold new look to the streets.", "rating": "5", "reviews": "2"}, {"product_name": "Nike React Element 55 SE", "product_id": "CD2153-001", "listing_price": 0, "sale_price": 10995, "discount": 0, "brand": "Nike", "description": "The Nike React Element 55 SE borrows design lines from heritage runners like the Nike Internationalist, adds premium details and places it all on Nike React technology.", "rating": "5", "reviews": "1"}, {"product_name": "Nike SB Zoom Stefan Janoski Mid RM", "product_id": "AT7324-001", "listing_price": 7995, "sale_price": 6397, "discount": 0, "brand": "Nike", "description": "The Nike SB Zoom Stefan Janoski Mid RM pairs a minimal look with a modern fit. It has been updated with a new, plush sockliner and a flexible midsole for better boardfeel right out of the box.", "rating": "5", "reviews": "1"}, {"product_name": "Nike Air Max Alpha Savage", "product_id": "AT3378-471", "listing_price": 0, "sale_price": 8995, "discount": 0, "brand": "Nike", "description": "The Nike Air Max Alpha Savage invokes Air Max style, stability and comfort in a modern design. Webbing integrates with the laces for midfoot containment, while Max Air cushioning delivers responsive comfort during your most intense workouts.", "rating": "4.2", "reviews": "5"}, {"product_name": "Nike React Vision", "product_id": "CD4373-001", "listing_price": 0, "sale_price": 10995, "discount": 0, "brand": "Nike", "description": "The Nike React Vision is a story of surreal comfort. Layered textures, shapes and vivid colours are combined in a design influenced by the exaggerated world of our dreams, while React foam and an ultra-plush tongue provide surreal comfort. DIMSIX on the tongue tab rises high off the collar to add just a touch of Nike's own origin story.", "rating": "4.7", "reviews": "3"}, {"product_name": "Jordan Trunner NXT React", "product_id": "AV1201-600", "listing_price": 0, "sale_price": 11995, "discount": 0, "brand": "Nike", "description": "Ready for the toughest workouts, the Jordan Trunner NXT features incredibly responsive cushioning and a breathable, lightweight upper.", "rating": "5", "reviews": "3"}, {"product_name": "Kyrie Low 2", "product_id": "AV6337-003", "listing_price": 0, "sale_price": 9495, "discount": 0, "brand": "Nike", "description": "Kyrie's ability to make quick, sharp cuts while handling the ball gives his game an unrivalled edge. Loaded with responsive cushioning, the Kyrie Low 2 features a curved outsole and traction that wraps up the sides, ideal for quick players who continually work the angles to break down the defence.", "rating": "4.5", "reviews": "4"}, {"product_name": "Nike Zoom Pegasus Turbo 2", "product_id": "CN6928-300", "listing_price": 0, "sale_price": 15995, "discount": 0, "brand": "Nike", "description": "The Nike Zoom Pegasus Turbo 2 Hakone is updated with a feather-light upper, while energy-returning foam brings revolutionary responsiveness to your long distance training.", "rating": "4", "reviews": "4"}, {"product_name": "Nike React Infinity Run Flyknit", "product_id": "CD4372-004", "listing_price": 0, "sale_price": 13995, "discount": 0, "brand": "Nike", "description": null, "rating": "4.2", "reviews": "29"}, {"product_name": "Nike Tiempo Legend 8 Academy MG", "product_id": "AT5292-606", "listing_price": 0, "sale_price": 6495, "discount": 0, "brand": "Nike", "description": "The Nike Tiempo Legend 8 Academy MG takes the legendary touch of calfskin leather and adds a versatile multi-ground plate for traction on natural- and artificial-grass surfaces.", "rating": "2", "reviews": "1"}, {"product_name": "Kyrie 5", "product_id": "AQ2456-007", "listing_price": 0, "sale_price": 8495, "discount": 0, "brand": "Nike", "description": "Responsive and supportive, the Kyrie 5 is made with a soft midsole for responsive cushioning and a curved outsole for multi-directional traction.", "rating": "5", "reviews": "3"}, {"product_name": "Nike Air Force 1 '07", "product_id": "315122-001", "listing_price": 0, "sale_price": 7295, "discount": 0, "brand": "Nike", "description": "Hoops in the park, Sunday BBQs and sunshine. The radiance lives on in the Nike Air Force 1 '07, the b-ball OG that puts a fresh spin on what you know best: crisp leather in an all-black colourway for a statement look on and off the court.", "rating": "4.5", "reviews": "78"}, {"product_name": "LeBron Soldier 13 SFG", "product_id": "AR4225-003", "listing_price": 11995, "sale_price": 9597, "discount": 0, "brand": "Nike", "description": "LeBron works hard in the offseason, getting stronger and fine-tuning his already devastating skills. Inspired by his dedication and commitment to inclusivity, the Soldier 13 SFG combines LeBron-tested cushioning, containment and support with a wide, flexible collar and lace-free closure that lets all players get in and out of the shoe with ease.", "rating": "4.2", "reviews": "6"}, {"product_name": "Nike Phantom Vision 2 Elite Dynamic Fit FG", "product_id": "CD4161-606", "listing_price": 0, "sale_price": 22995, "discount": 0, "brand": "Nike", "description": "The Nike Phantom Vision 2 Elite Dynamic Fit FG brings a new level of fierce precision to the field. A foot-hugging inner sleeve is concealed in a textured Flyknit outer layer to create a boot for the finishers, the providers and the battlers of tomorrow's game.", "rating": "5", "reviews": "1"}, {"product_name": "Nike Air Skarn", "product_id": "CD2189-002", "listing_price": 9995, "sale_price": 6997, "discount": 0, "brand": "Nike", "description": "Hiking shoes don't need to be big and bulky, and the Nike Air Skarn proves it. Originally launched in 1997, this reintroduction of a classic is lightweight, comfortable and tougher than it looks.", "rating": "4.5", "reviews": "2"}, {"product_name": "Nike Air Max 270 SE", "product_id": "CD6615-100", "listing_price": 0, "sale_price": 13995, "discount": 0, "brand": "Nike", "description": "The Nike Air Max 270 SE is inspired by 2 icons of Air: the Air Max 180 and the Air Max 93. It features Nike's biggest heel Air unit yet for a super-soft ride that feels as comfortable as it looks.", "rating": "5", "reviews": "1"}, {"product_name": "Nike SB Blazer Low XT", "product_id": "864348-019", "listing_price": 7995, "sale_price": 6397, "discount": 0, "brand": "Nike", "description": "The Nike SB Blazer Low XT Men's Skateboarding Shoe retools the classic profile for extra-tough sessions, adding lightweight impact protection.", "rating": "5", "reviews": "2"}, {"product_name": "Nike Huarache Type", "product_id": "BQ5102-400", "listing_price": 10995, "sale_price": 6597, "discount": 0, "brand": "Nike", "description": "Part of the N354 family that nods to Steve Prefontaine's fastest mile, the Nike Huarache Type is based on one of the most legendary sneakers from Nike's All Conditions Gear line-up, the Nike Mowabb. Using an adjustable approach to the Huarache system, this shoe is an exploration of fit and comfort.", "rating": "4.5", "reviews": "2"}, {"product_name": "Nike Zoom Vomero 5 SE SP", "product_id": "CI1694-300", "listing_price": 13995, "sale_price": 11197, "discount": 0, "brand": "Nike", "description": "The Nike Zoom Vomero 5 SE SP wraps your foot in breathable support. A combination of durable synthetic leather and breathable mesh stands ready for the rigours of your day. Soft foam and Zoom Air cushioning deliver lightweight comfort for a smooth ride.", "rating": "5", "reviews": "1"}, {"product_name": "Nike Benassi JDI", "product_id": "631261-035", "listing_price": 0, "sale_price": 2795, "discount": 0, "brand": "Nike", "description": "The Nike Benassi JDI Slide features a soft foam midsole and plush, jersey fabric lining the strap. Its heritage logo adds the perfect amount of flash.", "rating": "3", "reviews": "5"}, {"product_name": "Kyrie 6 'Enlightenment'", "product_id": "BQ4630-500", "listing_price": 10995, "sale_price": 8797, "discount": 0, "brand": "Nike", "description": "In spiritual circles, the colour purple represents enlightenment. It speaks to being fully connected to your spiritual mind by tapping into an inner source of potential that was otherwise undiscovered. The Kyrie 6 'Enlightenment' plays up the unseen spirituality theme with an all-seeing eye graphic on the side of the upper and a purple colour scheme.", "rating": "4.4", "reviews": "10"}, {"product_name": "Nike Tiempo Legend 8 Academy IC", "product_id": "AT6099-606", "listing_price": 0, "sale_price": 6495, "discount": 0, "brand": "Nike", "description": "The Nike Tiempo Legend 8 Academy IC takes the legendary touch of calfskin leather and adds cushioning that equips you for the court or the streets. A mesh tongue and collar lining add breathability and street style.", "rating": "5", "reviews": "1"}, {"product_name": "Nike React Presto Premium", "product_id": "CN7664-800", "listing_price": 0, "sale_price": 10995, "discount": 0, "brand": "Nike", "description": "The Nike React Presto Premium features an innovative React foam midsole that delivers a futuristic look and bouncy, lightweight feel for all-day comfort with a whole lot of personality.", "rating": "5", "reviews": "1"}, {"product_name": "Zoom Freak 1 'Employee of the Month'", "product_id": "CD4962-001", "listing_price": 0, "sale_price": 9995, "discount": 0, "brand": "Nike", "description": "Get your freak on in Giannis Antetokounmpo's debut signature shoe, Nike's first ever for the international basketball sensation. The Zoom Freak 1 has the extra-responsive cushioning, forefoot lockdown and multi-directional traction needed to complement his freakishly athletic game.", "rating": "5", "reviews": "1"}, {"product_name": "Nike ZoomX Vaporfly NEXT%", "product_id": "AO4568-600", "listing_price": 0, "sale_price": 19995, "discount": 0, "brand": "Nike", "description": "The Nike ZoomX Vaporfly NEXT% clears your path to record-breaking speed with a lighter design and faster feel than before. With more cushioning underfoot and reduced weight up top, the result is unprecedented energy return and comfort.", "rating": "4.7", "reviews": "45"}, {"product_name": "Nike SB Check", "product_id": "705265-006", "listing_price": 0, "sale_price": 5495, "discount": 0, "brand": "Nike", "description": "Crafted from soft suede, the Nike SB Check is reinforced in key areas for the durability you need to skate all day long.", "rating": "5", "reviews": "1"}, {"product_name": "Nike Air Zoom Structure 22", "product_id": "AA1636-406", "listing_price": 9995, "sale_price": 6997, "discount": 0, "brand": "Nike", "description": "The Nike Air Zoom Structure 22 Men's Running Shoe looks fast and feels secure. Engineered mesh, a heel overlay and dynamic support throughout the midfoot all work together to provide a smooth, stable ride.", "rating": "3.6", "reviews": "10"}, {"product_name": "Nike Drop-Type Mid", "product_id": "BQ5190-101", "listing_price": 6995, "sale_price": 4897, "discount": 0, "brand": "Nike", "description": "Part of the N354 family that nods to Steve Prefontaine's fastest mile, the Nike Drop-Type Mid is inspired by classic tennis shoes in the NikeCourt family. With distinct design lines that borrow from the All Court 2, it puts a raw, experimental edge on an iconic look.", "rating": "5", "reviews": "1"}, {"product_name": "Nike iSPA React", "product_id": "CT2692-002", "listing_price": 0, "sale_price": 13995, "discount": 0, "brand": "Nike", "description": "Utilising the latest innovations and Nike's new iSPA project\u00e2\u20ac\u201dwhich touts a philosophy of improvise, scavenge, protect and adapt\u00e2\u20ac\u201dthe Nike iSPA React takes experimental expression and runs with it. Its low-top design features a tape-like upper nodding to the power of improvisation in the face of adversity.", "rating": "4.6", "reviews": "14"}, {"product_name": "NikeCourt Air Zoom Zero", "product_id": "AA8018-101", "listing_price": 0, "sale_price": 11995, "discount": 0, "brand": "Nike", "description": "Featuring the first full-length Zoom Air unit in NikeCourt history, the NikeCourt Air Zoom Zero delivers exceptional responsiveness and great court feel. Its snug-fitting upper and webbed lacing system offer second-skin-like comfort and lockdown.", "rating": "4.3", "reviews": "10"}, {"product_name": "Nike Air Force Max II", "product_id": "AV6243-400", "listing_price": 0, "sale_price": 13995, "discount": 0, "brand": "Nike", "description": "The game has gone small, so bigs have to be faster, more agile and more versatile to stay relevant. Keeping pace with ever-evolving player needs, the Nike Air Force Max II provides the responsive cushioning that allows big players to keep crashing the boards and banging in the post, while helping them stay light and quick on the break.", "rating": "4.5", "reviews": "2"}, {"product_name": "Nike Air Max 97 SE", "product_id": "AQ4126-100", "listing_price": 15995, "sale_price": 12797, "discount": 0, "brand": "Nike", "description": "The Nike Air Max 97 shook up the running world with its revolutionary full-length Nike Air unit. The Nike Air Max 97 SE Men's Shoe refreshes the original design with new colours and materials.", "rating": "4.5", "reviews": "2"}, {"product_name": "NikeCourt Air Zoom Resistance", "product_id": "918194-003", "listing_price": 6995, "sale_price": 5597, "discount": 0, "brand": "Nike", "description": "The NikeCourt Air Zoom Resistance delivers lightweight durability on the hard court with a performance leather upper.", "rating": "2.5", "reviews": "6"}, {"product_name": "Nike Mercurial Superfly 7 Elite MDS FG", "product_id": "BQ5469-703", "listing_price": 0, "sale_price": 24995, "discount": 0, "brand": "Nike", "description": "Dream of speed and play fast in the Nike Mercurial Superfly 7 Elite MDS FG. A streamlined upper combines with a Nike Aerowtrac zone for high-speed play and supercharged traction.", "rating": "5", "reviews": "1"}, {"product_name": "Nike Solarsoft", "product_id": "488161-602", "listing_price": 0, "sale_price": 1595, "discount": 0, "brand": "Nike", "description": "Made with soft, pliable foam infused with grooves for superb airflow, the Nike Solarsoft Women's Flip Flop is a must-have in warm weather.", "rating": "3.8", "reviews": "5"}, {"product_name": "Air Jordan 11 Retro Low", "product_id": "528895-003", "listing_price": 16995, "sale_price": 11897, "discount": 0, "brand": "Nike", "description": "Since bursting onto the basketball scene in 1996, the Air Jordan 11 Retro Low Men's Shoe has been one of the most beloved Jordan designs ever. Signature details and Nike Air cushioning combine for the ultimate fusion of style and comfort.", "rating": "4.4", "reviews": "25"}, {"product_name": "Nike Zoom Fly 3 Premium", "product_id": "CD4570-300", "listing_price": 0, "sale_price": 14995, "discount": 0, "brand": "Nike", "description": "Inspired by the Vaporfly, the Nike Zoom Fly 3 Premium gives distance runners race-day comfort and durability. The power of a carbon-fibre plate keeps you in the running mile after mile.", "rating": "5", "reviews": "3"}, {"product_name": "Nike Zoom Gravity", "product_id": "BQ3203-007", "listing_price": 7995, "sale_price": 6397, "discount": 0, "brand": "Nike", "description": "Designed to make fast go faster, the Nike Zoom Gravity is built to take you from quick tempo runs to winning races. Snappy forefoot responsiveness and grippy, multi-surface traction combine to optimise your stride.", "rating": "3.7", "reviews": "18"}, {"product_name": "Nike Air Max 720 BETRUE", "product_id": "CJ5472-900", "listing_price": 0, "sale_price": 15995, "discount": 0, "brand": "Nike", "description": "Designed in collaboration with Gilbert Baker, the Nike Air Max 720 BETRUE features a rainbow-coloured upper inspired by, and in celebration of, the LGBTQ community.", "rating": "5", "reviews": "1"}, {"product_name": "Nike Air Force 1 Mid '07", "product_id": "315123-111", "listing_price": 0, "sale_price": 7595, "discount": 0, "brand": "Nike", "description": "The legend lives on in the Nike Air Force 1 Mid '07 Men's Shoe, a modern take on the icon that blends classic style and fresh, crisp details.", "rating": "4.5", "reviews": "13"}, {"product_name": "Nike Air Max 2017", "product_id": "849559-004", "listing_price": 0, "sale_price": 15995, "discount": 0, "brand": "Nike", "description": "The Nike Air Max 2017 Men's Shoe features a seamless Flymesh upper for support and breathability. Iconic Max Air cushioning provides a lightweight, smooth feel with each step, whether you're running your three-miler or running your day.", "rating": "2.9", "reviews": "71"}, {"product_name": "Nike EXP-X14 SE", "product_id": "AO3095-100", "listing_price": 0, "sale_price": 11995, "discount": 0, "brand": "Nike", "description": "\"Drawing inspiration from Nike running shoes such as the Nike Zoom Vaporfly Elite, the Nike EXP-X14 SE Men's Shoe races off the track and onto the street with a fast design and shape. Nike React technology delivers lightweight durability and a smooth feel, while the layered upper showcases Flywire cables and a bold \"\"Just Do It\"\" tagline.\"", "rating": "5", "reviews": "2"}, {"product_name": "Nike x Undercover Air Max 720", "product_id": "CN2408-001", "listing_price": 0, "sale_price": 16995, "discount": 0, "brand": "Nike", "description": "The Nike x Undercover Air Max 720 brings Jun Takahashi's vision of chaos and balance to Air. 360 degrees of cushioning and a breathable design capture Takahashi's view of the future of fashion.", "rating": "4", "reviews": "3"}, {"product_name": "Air Jordan 13 Retro", "product_id": "414571-030", "listing_price": 0, "sale_price": 15995, "discount": 0, "brand": "Nike", "description": "Featuring a panther-inspired design that takes after Michael Jordan's on-court presence, the Air Jordan 13 Retro is based on the OG model and has the same responsive cushioning and premium materials that made it famous in the '90s.", "rating": "3.9", "reviews": "34"}, {"product_name": "Nike Cortez '72 S.D.", "product_id": "CJ2586-100", "listing_price": 7995, "sale_price": 4797, "discount": 0, "brand": "Nike", "description": "\"Inspired by Phil Knight's \"\"Shoe Dog\"\"", "rating": " the Nike Cortez '72 S.D. returns to the OG design with zigzag edges", "reviews": " an exposed foam tongue and minimalist leather. Why? Because you don't change what works.\""}, {"product_name": "Nike Xarr", "product_id": "BQ5240-200", "listing_price": 12995, "sale_price": 9097, "discount": 0, "brand": "Nike", "description": "The Nike Xarr sets you up to take on the elements in style. It's crafted with a water-resistant leather upper to help keep you dry and a rubber outsole to combat the season's wet conditions. With intricate detailing and a stylised tongue cover, it's a fresh new look with lots of attitude.", "rating": "4.8", "reviews": "4"}, {"product_name": "Nike Air Force 1 GORE-TEX \u00c2\u00ae", "product_id": "CK2630-700", "listing_price": 12995, "sale_price": 9097, "discount": 0, "brand": "Nike", "description": "The Nike Air Force 1 GORE-TEX \u00c2\u00ae retools the classic Air Force 1 with a street-approved design that meets the standards of GORE-TEX \u00c2\u00ae waterproof technology. It features water-wicking flat laces, a GORE-TEX \u00c2\u00ae bootie and GORE-TEX \u00c2\u00ae branding on the heel.", "rating": "4.1", "reviews": "18"}, {"product_name": "Kyrie 6 EP 'Chinese New Year'", "product_id": "CD5029-001", "listing_price": 0, "sale_price": 10995, "discount": 0, "brand": "Nike", "description": "According to the four-year cycle of the Chinese zodiac, the year of the mouse represents growth. Through the folk-art tradition of Jianzhi (paper cutting), the Kyrie 6 'Chinese New Year' honours major breakthroughs in Nike innovation with a graphic on the tongue. A watercolour-themed print completes the art-inspired CNY theme.", "rating": "5", "reviews": "1"}, {"product_name": "Nike Zoom KD12", "product_id": "CK1195-101", "listing_price": 0, "sale_price": 12995, "discount": 0, "brand": "Nike", "description": "Kevin Durant always looks relaxed\u00e2\u20ac\u201duntil he attacks. His game is reserved yet explosive, difficult to guard and impossible to stop. The KD12 was built for his dominance and endless energy all game long, with the latest innovation in Nike Zoom Air technology.", "rating": "5", "reviews": "1"}, {"product_name": "Nike Epic React Flyknit 2", "product_id": "BQ8928-011", "listing_price": 12995, "sale_price": 10397, "discount": 0, "brand": "Nike", "description": "The Nike Epic React Flyknit 2 takes a step up from its predecessor with smooth, lightweight performance and a bold look. An updated Flyknit upper contours to your foot with a minimal, supportive design. Underfoot, durable Nike React technology defies the odds by being both soft and responsive, for comfort that lasts as long as you can run.", "rating": "4.1", "reviews": "72"}, {"product_name": "Nike MX-720-818", "product_id": "BV5841-800", "listing_price": 0, "sale_price": 15995, "discount": 0, "brand": "Nike", "description": "Disrupt the universe in your Nike MX-720-818. Featuring materials inspired by spacesuits and quilted stitching on the upper, it takes the largest Air unit to date and blends it with the futuristic look of the final frontier. Mesh on the upper keeps your feet cool while the clear sole features the black and grey reminiscent of deep space.", "rating": "4", "reviews": "1"}, {"product_name": "Nike Air Streak Lite", "product_id": "CD4387-100", "listing_price": 0, "sale_price": 8995, "discount": 0, "brand": "Nike", "description": "The Nike Air Streak Lite puts minimalist style back into the spotlight. Originally created by Nike's first Japanese creation team in 1995, this lightweight, sleek silhouette pushes footwear to a different space.", "rating": "5", "reviews": "1"}, {"product_name": "Nike SB Zoom Stefan Janoski Canvas RM Premium", "product_id": "AQ7878-003", "listing_price": 0, "sale_price": 7995, "discount": 0, "brand": "Nike", "description": "The Nike SB Zoom Stefan Janoski Canvas RM Premium pairs a minimal look with a modern fit. It has been updated with a new, plush sockliner and a flexible outsole for better boardfeel right out of the box.", "rating": "1", "reviews": "1"}, {"product_name": "Nike Wildhorse 6", "product_id": "BV7106-400", "listing_price": 0, "sale_price": 9995, "discount": 0, "brand": "Nike", "description": "The Nike Wildhorse 6 keeps it stable, secure and lightweight on the trail. An updated outsole delivers the traction you need, while a foam midsole keeps you cushioned on your run.", "rating": "4.7", "reviews": "3"}, {"product_name": "Nike Air Zoom Pegasus 36", "product_id": "AQ2210-002", "listing_price": 0, "sale_price": 9995, "discount": 0, "brand": "Nike", "description": "The iconic Nike Air Zoom Pegasus 36 returns with more perforations and engineered mesh in the upper for targeted breathability across high-heat areas. A slimmer heel collar and tongue reduce bulk without compromising comfort, while exposed Flywire cables give you a snug fit at higher speeds.", "rating": "4.4", "reviews": "19"}, {"product_name": "Nike Air Zoom Wildhorse 5", "product_id": "AQ2222-200", "listing_price": 0, "sale_price": 8995, "discount": 0, "brand": "Nike", "description": "Built specifically for trails, the Nike Air Zoom Wildhorse 5 keeps you galloping over rough terrain in breathable, multi-layer fabric. A rock plate helps shield your foot, while a Zoom Air heel unit cushions your stride on and off the path.", "rating": "5", "reviews": "6"}, {"product_name": "Nike Air Max 720 Waves", "product_id": "BQ4430-400", "listing_price": 15995, "sale_price": 11197, "discount": 0, "brand": "Nike", "description": "Bring a new point of view to off-court culture in your Nike Air Max 720 Waves. Its low-profile stance showcases Nike's tallest Air unit to date while its D/MS/X design mixes culture with sport, letting you enter a fresh dimension of hoops style with unparalleled comfort.", "rating": "5", "reviews": "4"}, {"product_name": "Nike Benassi JDI BETRUE", "product_id": "CD2717-001", "listing_price": 0, "sale_price": 4495, "discount": 0, "brand": "Nike", "description": "The Nike Benassi JDI BETRUE Slide creates lightweight comfort in a classic design, while the soft foam sole cushions your every step.", "rating": "4.3", "reviews": "3"}, {"product_name": "Kyrie 4", "product_id": "943806-602", "listing_price": 0, "sale_price": 10995, "discount": 0, "brand": "Nike", "description": "The Kyrie 4 Men's Basketball Shoe is ultra-flexible, responsive and supportive. It's designed for Kyrie Irving's sudden changes of direction and smooth yet rapid playing style.", "rating": "4.1", "reviews": "19"}, {"product_name": "Air Jordan 5 Retro", "product_id": "CN2932-100", "listing_price": 0, "sale_price": 18995, "discount": 0, "brand": "Nike", "description": "The Air Jordan 5 Retro brings back the original that was inspired by WWII fighter planes, featuring a mid-top profile and synthetic leather. An inner-sleeve creates a snug, comfortable feel.", "rating": "4.6", "reviews": "8"}, {"product_name": "Nike Drop-Type Premium", "product_id": "CN6916-100", "listing_price": 0, "sale_price": 6995, "discount": 0, "brand": "Nike", "description": "The Nike Drop-Type Premium is inspired by classic tennis shoes in the NikeCourt family. Part of the N354 family that nods to Steve Prefontaine's fastest mile, it offers distinct design lines that borrow from the All Court 2.", "rating": "4", "reviews": "6"}, {"product_name": "Nike React Metcon", "product_id": "BQ6044-100", "listing_price": 0, "sale_price": 12995, "discount": 0, "brand": "Nike", "description": "The Nike React Metcon takes the stability and traction from the training original and pairs it with Nike's most comfortable cushioning. Tackle high-impact and lifting workouts with a light, breathable upper and durable grip to keep you going.", "rating": "3.9", "reviews": "10"}, {"product_name": "Nike Joyride Dual Run", "product_id": "CD4365-003", "listing_price": 10995, "sale_price": 7697, "discount": 0, "brand": "Nike", "description": "The Nike Joyride Dual Run blazes its own route. Tiny foam beads underfoot combined with traditional cushioning in the forefoot give an incredibly smooth feel that contours to your foot.", "rating": "4.3", "reviews": "3"}, {"product_name": "Nike Classic Cortez", "product_id": "749571-154", "listing_price": 0, "sale_price": 6595, "discount": 0, "brand": "Nike", "description": "The Nike Classic Cortez Shoe is Nike's original running shoe, designed by Bill Bowerman and released in 1972. This version features a leather and synthetic leather construction for added durability.", "rating": "4.2", "reviews": "5"}, {"product_name": "Nike React Element 55 Premium", "product_id": "CI3835-002", "listing_price": 11995, "sale_price": 7197, "discount": 0, "brand": "Nike", "description": "The Nike React Element 55 borrows design lines from heritage runners like the Nike Internationalist, then places it all on Nike React technology.", "rating": "5", "reviews": "1"}, {"product_name": "Nike Joyride CC", "product_id": "AO1742-004", "listing_price": 11995, "sale_price": 8397, "discount": 0, "brand": "Nike", "description": "Lounge wherever you go and let the Nike Joyride CC take you into a new world of cosy by placing your feet directly on the soft cushioning of its innovative bead-pods. Bold colour-blocking and exaggerated textures add unrivalled depth to your fun, edgy attitude.", "rating": "5", "reviews": "4"}, {"product_name": "Nike Zoom Fly Flyknit", "product_id": "AR4561-200", "listing_price": 0, "sale_price": 15995, "discount": 0, "brand": "Nike", "description": "Nike Zoom Fly Flyknit Men's Running Shoe is built for record-breaking speed. The Flyknit upper delivers ultra-lightweight support that fits like a glove.", "rating": "4.2", "reviews": "42"}, {"product_name": "Nike Air Max Tailwind IV SP", "product_id": "BV1357-003", "listing_price": 15995, "sale_price": 9597, "discount": 0, "brand": "Nike", "description": "The Nike Air Max Tailwind IV SP gives a new look to the '90s classic. Max Air units give you comfort and style that last.", "rating": "3", "reviews": "5"}, {"product_name": "Jordan Proto-Lyte", "product_id": "AT3381-008", "listing_price": 7995, "sale_price": 6397, "discount": 0, "brand": "Nike", "description": "Featuring soft foam cushioning and lightweight, woven fabric in the upper, the Jordan Proto-Lyte is made for all-day, bouncy comfort.", "rating": "2.4", "reviews": "5"}, {"product_name": "Nike Mercurial Superfly 7 Academy TF", "product_id": "AT7978-414", "listing_price": 8495, "sale_price": 5947, "discount": 0, "brand": "Nike", "description": "The soft upper of the Nike Mercurial Superfly 7 Academy TF Shoe wraps your foot for a second-skin fit, while the rubber outsole helps supercharge traction on turf.", "rating": "5", "reviews": "1"}, {"product_name": "Nike x Hawkins High Cortez", "product_id": "CJ6106-100", "listing_price": 0, "sale_price": 9995, "discount": 0, "brand": "Nike", "description": "\"Nodding to Hawkins High from the hit TV show \"\"Stranger Things\"\"", "rating": " the Nike x Hawkins High Cortez combines premium materials laid out using the Tiger Pride green and orange with hidden details and show references throughout", "reviews": " including three distinct \"\"Stranger Things\"\" pins.\""}, {"product_name": "Nike Air Max 2090", "product_id": "CT7695-401", "listing_price": 0, "sale_price": 11995, "discount": 0, "brand": "Nike", "description": "Bring the past into the future with the Nike Air Max 2090, a bold look inspired by the DNA of the iconic Air Max 90. Brand-new Nike Air cushioning underfoot adds unparalleled comfort while transparent fabric on the upper is blended with timeless OG features for an edgy, modernised look.", "rating": "4.8", "reviews": "4"}, {"product_name": "Nike Phantom Vision Academy Dynamic Fit MG", "product_id": "AO3258-080", "listing_price": 8495, "sale_price": 5947, "discount": 0, "brand": "Nike", "description": "The Nike Phantom Vision Academy Dynamic Fit MG brings the fierce precision of street play to the pitch. A foot-hugging sleeve has a custom feel and the Ghost Laces system tights with 1 pull and is hidden for a bigger striking surface.", "rating": "4", "reviews": "5"}, {"product_name": "NikeCourt Air Max Vapor Wing MS", "product_id": "BQ0129-106", "listing_price": 0, "sale_price": 6495, "discount": 0, "brand": "Nike", "description": "The NikeCourt Air Max Vapor Wing MS is the perfect pairing of style and comfort for your match. Translucent textile shows off the technology within, while rubber on the toe increases durability. An Air Max unit provides legendary, lightweight cushioning.", "rating": "3.5", "reviews": "2"}, {"product_name": "LeBron x John Elliott Icon", "product_id": "AQ0114-101", "listing_price": 0, "sale_price": 19995, "discount": 0, "brand": "Nike", "description": "The LeBron x John Elliott Icon brings the clean and layered approach of a lifestyle shoe to a hardwood classic. Cushioning from the LeBron 8 combines with court-inspired details and translucent materials as a tribute to Elliott's favourite shoe in the series. The result: Power, unleashed.", "rating": "4.8", "reviews": "6"}, {"product_name": "Nike Air Max 270 Flyknit", "product_id": "AO1023-005", "listing_price": 0, "sale_price": 15995, "discount": 0, "brand": "Nike", "description": "Feel the Air, both above and below, with the Nike Air Max 270 Flyknit Men's Shoe. It features Nike's biggest heel Air unit yet, plus an ultra-breathable Flyknit upper that helps keep you cool when the temperatures rise. Classic colour combinations nod to iconic Air Max models of the past, delivering a modern, streamlined look that's rooted in Nike sneaker heritage.", "rating": "4.4", "reviews": "10"}, {"product_name": "Air Jordan 13 Retro Chinese New Year", "product_id": "CW4409-100", "listing_price": 0, "sale_price": 19995, "discount": 0, "brand": "Nike", "description": "\"Michael Jordan's stealthy creativity on the court earned him the nickname \"\"Black Cat\"\". The Air Jordan 13 Retro is based on the OG model and has responsive cushioning and premium materials. This version features special details to honour the Chinese New Year.\"", "rating": "5", "reviews": "1"}, {"product_name": "Nike Zoom Pegasus Turbo Shield", "product_id": "BQ1896-002", "listing_price": 17995, "sale_price": 12597, "discount": 0, "brand": "Nike", "description": "The Nike Zoom Pegasus Turbo Shield delivers your favourite lightweight running shoe in a smart, weatherised design, so you can continue training in confidence despite those dark and rainy months.", "rating": "4.1", "reviews": "11"}, {"product_name": "Nike Air Wildwood ACG", "product_id": "AO3116-004", "listing_price": 8995, "sale_price": 5397, "discount": 0, "brand": "Nike", "description": "From rain and mud to sunny afternoons, the Wildwood debuted in 1989 as a direct descendent of the Nike Escape. With design influence from the Pegasus, it was designed as an off-road sneaker meant to take you through rough terrain. The special sawtooth Waffle outsole was further proof that conquering bad weather didn't mean drabness.", "rating": "3.4", "reviews": "7"}, {"product_name": "LeBron 16 Low", "product_id": "CI2668-004", "listing_price": 13995, "sale_price": 11197, "discount": 0, "brand": "Nike", "description": "LeBron is unstoppable on the court and just as influential off of it. The year 2003, LeBron's rookie season and a pivotal year in culture, inspires the LeBron 16 Low. It is powered by Max Air and Zoom Air cushioning technologies, and embodies his clout and versatility.", "rating": "4.7", "reviews": "17"}, {"product_name": "Air Jordan 14 Retro", "product_id": "487471-003", "listing_price": 17995, "sale_price": 14397, "discount": 0, "brand": "Nike", "description": "The Air Jordan 14 Retro has class, comfort and the singular look of the original, with heritage-inspired colours, full-grain leather and responsive Zoom Air cushioning.", "rating": "4.2", "reviews": "12"}, {"product_name": "Nike Free RN Flyknit 3.0", "product_id": "AQ5708-201", "listing_price": 10995, "sale_price": 6597, "discount": 0, "brand": "Nike", "description": "Never worry about laces in the Nike Free RN Flyknit 3.0. This remix leaves them out\u00e2\u20ac\u201dletting you slip in quickly and hit your stride even faster. Supportive yarns join stretchy Flyknit for a lightweight upper that feels like a second skin. Heel-to-toe grooves in outsole move and bend with every stride.", "rating": "4.1", "reviews": "13"}, {"product_name": "Nike SB Air Max Stefan Janoski 2", "product_id": "AQ7477-009", "listing_price": 0, "sale_price": 9995, "discount": 0, "brand": "Nike", "description": "The Nike SB Air Max Stefan Janoski 2 hugs your foot with a breathable textile upper. A Max Air unit in the heel cushions every step, while a flat rubber outsole optimises grip when you're on your board.", "rating": "2.6", "reviews": "11"}, {"product_name": "Nike Air Zoom Pegasus 36 Trail", "product_id": "AR5676-401", "listing_price": 0, "sale_price": 10995, "discount": 0, "brand": "Nike", "description": "An icon hits the paths less travelled in the Nike Air Zoom Pegasus 36 Trail. Perforated mesh upper offers breathable comfort, and double Zoom Air units cushion your stride. Outsole lugs optimise traction when running uphill.", "rating": "4.2", "reviews": "9"}, {"product_name": "Nike Tiempo Legend 8 Club IC", "product_id": "AT6110-004", "listing_price": 4495, "sale_price": 3147, "discount": 0, "brand": "Nike", "description": "The Nike Tiempo Legend 8 Club IC takes the touch of textured synthetic leather and adds a grippy rubber outsole for multi-directional traction.", "rating": "2", "reviews": "1"}, {"product_name": "Nike Flex TR 9", "product_id": "AQ7491-008", "listing_price": 0, "sale_price": 5495, "discount": 0, "brand": "Nike", "description": "Designed for low-impact workouts and circuit training, the Nike Flex TR 9 pairs a breathable mesh and synthetic upper with a supportive platform designed for flexibility and traction.", "rating": "2.9", "reviews": "8"}, {"product_name": "Nike Epic Phantom React", "product_id": "CI1291-400", "listing_price": 13995, "sale_price": 8397, "discount": 0, "brand": "Nike", "description": "\"Soft to the touch, the Nike Epic Phantom React lets go of laces for a slip-on style that gets you up and running in no time. A snug, secure, sock-like fit within a breathable Flyknit and synthetic upper feels as though the Phantom \"\"disappears\"\" as you run.\"", "rating": "5", "reviews": "3"}, {"product_name": "Nike Metcon 5 AMP", "product_id": "CN5455-160", "listing_price": 0, "sale_price": 11995, "discount": 0, "brand": "Nike", "description": "The Nike Metcon 5 AMP arms you with stability for heavy lifting and traction for sprints during high-impact training. It combines breathability and durability to be your secret weapon in the gym.", "rating": "4.5", "reviews": "2"}, {"product_name": "Nike SB Air Zoom Bruin Edge", "product_id": "CD5036-100", "listing_price": 0, "sale_price": 7995, "discount": 0, "brand": "Nike", "description": "The Nike SB Air Zoom Bruin Edge puts a DIY spin on an iconic skate shoe. Frayed stitching, exposed foam and a mix of materials create a patched look that's built to perform. Stencils are included so you can take the DIY look to the next level.", "rating": "5", "reviews": "1"}, {"product_name": "Nike x Undercover React Presto", "product_id": "CU3459-200", "listing_price": 0, "sale_price": 15995, "discount": 0, "brand": "Nike", "description": "Jun Takahashi's vision of chaos and balance continues with the Nike x Undercover React Presto. An OG Presto design uses new details that pay homage to last season's collaboration, the React Boot.", "rating": "5", "reviews": "1"}, {"product_name": "Nike Signal D/MS/X", "product_id": "AT5303-100", "listing_price": 10995, "sale_price": 7697, "discount": 0, "brand": "Nike", "description": "Inspired by the chopping, cutting and rebuilding of custom cars and bikes, the Nike Signal D/MS/X overturns the idea of sportswear with style and attitude. With layered materials and intricate detailing, it uses innovations in an irreverent way that's more aesthetic than athletic.", "rating": "2.7", "reviews": "3"}, {"product_name": "Nike Air Max 720 (OBJ)", "product_id": "CK2531-001", "listing_price": 16995, "sale_price": 13597, "discount": 0, "brand": "Nike", "description": "Disrupt the atmosphere and let your light shine in the Nike Air Max 720 (OBJ), featuring Nike's tallest Air unit yet. Its colours take inspiration from the natural world, a counterpoint to the shoe's futuristic look.", "rating": "5", "reviews": "5"}, {"product_name": "Nike Vandalised LX", "product_id": "BQ3611-100", "listing_price": 10995, "sale_price": 8797, "discount": 0, "brand": "Nike", "description": "The Nike Vandalised LX hacks Nike DNA for a totally new spin on the original 1984 Nike Vandal, a basketball classic. Rearranging all the components creates a bold new look with asymmetrical details.", "rating": "5", "reviews": "1"}, {"product_name": "Nike Flex RN 2019", "product_id": "AQ7487-201", "listing_price": 0, "sale_price": 6995, "discount": 0, "brand": "Nike", "description": "With a stretchable knit in the upper, the Nike Flex RN 2019 makes every run comfortable as it expands and contracts along with your foot. Dual-density foam gives you cushioned comfort for pounding out the miles, while grooves in the outsole provide flexibility from heel to toe.", "rating": "3.8", "reviews": "6"}, {"product_name": "Nike Free RN 5.0", "product_id": "AQ1289-003", "listing_price": 7995, "sale_price": 5597, "discount": 0, "brand": "Nike", "description": "Ideal for runs up to 3 miles, the Nike Free RN 5.0 returns to its roots as a natural motion shoe. An updated flex groove pattern and modified midsole foam provides more flexibility than its predecessor, creating a barefoot sensation with every step. At the upper, breathable and stretchy mesh moves with your foot, while synthetic suede overlays provide stable support.", "rating": "3.9", "reviews": "25"}, {"product_name": "NikeCourt Air Max Vapor Wing MS", "product_id": "BQ0129-106", "listing_price": 0, "sale_price": 6495, "discount": 0, "brand": "Nike", "description": "The NikeCourt Air Max Vapor Wing MS is the perfect pairing of style and comfort for your match. Translucent textile shows off the technology within, while rubber on the toe increases durability. An Air Max unit provides legendary, lightweight cushioning.", "rating": "3.5", "reviews": "2"}, {"product_name": "Nike Air Max 90 NS SE", "product_id": "881105-800", "listing_price": 9995, "sale_price": 7997, "discount": 0, "brand": "Nike", "description": "The Nike Air Max 90 SE Women's Shoe combines classic design lines with rich materials for an elevated look that's true to the original.", "rating": "5", "reviews": "2"}, {"product_name": "Nike React Vision", "product_id": "CI7523-002", "listing_price": 0, "sale_price": 10995, "discount": 0, "brand": "Nike", "description": "The Nike React Vision is a story of surreal comfort. Layered textures, shapes and vivid colours are combined in a design influenced by the exaggerated world of our dreams, while React foam and an ultra-plush tongue provide surreal comfort. DIMSIX on the tongue tab rises high off the collar to add just a touch of Nike's own origin story.", "rating": "4.3", "reviews": "3"}, {"product_name": "Nike Air Max 2090", "product_id": "CT7698-600", "listing_price": 0, "sale_price": 11995, "discount": 0, "brand": "Nike", "description": "Bring the past into the future with the Nike Air Max 2090, a bold look inspired by the DNA of the iconic Air Max 90. Brand-new Nike Air cushioning underfoot adds unparalleled comfort while transparent knit and vibrantly coloured textiles on the upper blend with timeless OG features for an edgy, modernised look.", "rating": "5", "reviews": "2"}, {"product_name": "Nike Air Max Dia Winter", "product_id": "BQ9665-301", "listing_price": 0, "sale_price": 10995, "discount": 0, "brand": "Nike", "description": "Designed specifically for a woman's foot, the Nike Air Max Dia Winter delivers a lifted and airy aesthetic in a sleek shape. The minimal upper modernises the look, while a Max Air unit is amplified even further by an exaggerated midsole for a boost of style.", "rating": "4.4", "reviews": "5"}, {"product_name": "Nike Zoom Pegasus Turbo 2", "product_id": "BV7766-100", "listing_price": 15995, "sale_price": 12797, "discount": 0, "brand": "Nike", "description": "The Nike Zoom Pegasus Turbo 2 is updated with a feather-light upper, while innovative foam brings revolutionary responsiveness to your long-distance training.", "rating": "2.7", "reviews": "3"}, {"product_name": "Nike SB Shane", "product_id": "BV0657-400", "listing_price": 0, "sale_price": 6495, "discount": 0, "brand": "Nike", "description": "Shane O'Neill put the same attention to detail into every aspect of his signature shoe as he does in his almost otherworldly skating. From the low-key perforated ventilation at the toe, to the double lacing option and the no-break-in remastered sole, the Nike SB Shane gets all the details right.", "rating": "4.7", "reviews": "3"}, {"product_name": "Nike Air VaporMax 360", "product_id": "CK2719-400", "listing_price": 0, "sale_price": 18995, "discount": 0, "brand": "Nike", "description": "Featuring a full-length foam midsole and VaporMax Air unit, the Nike Air VaporMax 360 gives you remarkable underfoot comfort with bold 2000s style inspired by the Air Max 360.", "rating": "2.2", "reviews": "5"}, {"product_name": "Nike Air Max FF 720", "product_id": "AO3189-600", "listing_price": 18995, "sale_price": 13297, "discount": 0, "brand": "Nike", "description": "Part shoe, part sandal, the Nike Air Max FF 720 takes you into a new realm of Air. Built specifically for a woman's foot, it features premium leather on heightened foam for bold versatility and unbelievable comfort. Cinch it up with its unique drawcord system and make the streets your runway.", "rating": "3.5", "reviews": "6"}, {"product_name": "Jordan Proto-Max 720", "product_id": "BQ6623-070", "listing_price": 15995, "sale_price": 12797, "discount": 0, "brand": "Nike", "description": "Inspired by outer space flight, the Jordan Proto-Max 720 provides all-day comfort with a future-forward look. An outer shroud covers the sock-like bootie construction, while Nike Air cushions every step.", "rating": "4.4", "reviews": "18"}, {"product_name": "Nike Joyride Run Flyknit", "product_id": "AQ2731-500", "listing_price": 14995, "sale_price": 11997, "discount": 0, "brand": "Nike", "description": "The Nike Joyride Run Flyknit is designed to help make running feel easier and give your legs a day off. Tiny foam beads underfoot contour to your foot for cushioning that stands up to your mileage.", "rating": "4.4", "reviews": "26"}, {"product_name": "Nike Odyssey React Flyknit 2", "product_id": "AH1016-602", "listing_price": 9995, "sale_price": 5997, "discount": 0, "brand": "Nike", "description": "The Nike Odyssey React Flyknit 2 Women's Running Shoe delivers a strategic combination of lightweight Flyknit and synthetic material for support just where you need it. Underfoot, Nike React cushioning delivers a soft, springy ride for a route that begs to be crushed.", "rating": "3.4", "reviews": "26"}, {"product_name": "Nike React Element 55 SE", "product_id": "CN3591-002", "listing_price": 0, "sale_price": 11995, "discount": 0, "brand": "Nike", "description": "The Nike React Element 55 SE borrows design lines from heritage runners like the Nike Internationalist, adds reflective graphics and combines it with Nike React technology for a smooth ride.", "rating": "5", "reviews": "1"}, {"product_name": "Nike Air Max Dia LX", "product_id": "CI1214-004", "listing_price": 9995, "sale_price": 7997, "discount": 0, "brand": "Nike", "description": "Designed specifically for a woman's foot, the Nike Air Max Dia LX delivers a lifted and airy aesthetic in a new, sleek shape. The minimal upper modernises your look, while the Max Air unit, surrounded by clear plastic, elevates your style.", "rating": "1", "reviews": "1"}, {"product_name": "Nike Metcon 5", "product_id": "AQ1189-009", "listing_price": 0, "sale_price": 10995, "discount": 0, "brand": "Nike", "description": "The Nike Metcon 5 is our most tuned Metcon yet. This means specific stability for heavy lifting, traction made for speed and durability where you need it. It even includes a Hyperlift insert that's compatible with all prior versions of the Metcon. Meet your secret weapon for weight-lifting and high-impact training.", "rating": "3.7", "reviews": "31"}, {"product_name": "Nike Benassi", "product_id": "343880-090", "listing_price": 0, "sale_price": 2495, "discount": 0, "brand": "Nike", "description": "The Nike Benassi Slide features a lined upper with a bold logo for plush comfort and an athletic look. A foam midsole and outsole provide lightweight impact protection.", "rating": "4.1", "reviews": "33"}, {"product_name": "Nike Zoom KD12 'YouTube'", "product_id": "CQ7731-900", "listing_price": 12995, "sale_price": 10397, "discount": 0, "brand": "Nike", "description": "Breaking new ground for athletes, KD provides unprecedented access to his life through his YouTube channel. It's this type of authentic connection that KD wanted to create with his fans when he first partnered with YouTube in 2017. In celebration of his channel, the KD12 'YouTube' features co-branded graphic hits on the tongue and heel that celebrate two icons coming together to change the game.", "rating": "4.6", "reviews": "5"}, {"product_name": "Nike Air Force 1 React", "product_id": "CD4366-002", "listing_price": 0, "sale_price": 9995, "discount": 0, "brand": "Nike", "description": "\"Refresh your look and step into a new AF-1 world with the Nike Air Force 1 React. It fuses modern design with iconic b-ball style for a big, bold look. The oversized Swoosh, large \"\"AIR\"\" on the midsole and new sole pattern let you express your modern world while Nike React technology adds exceptional underfoot comfort.\"", "rating": "4.8", "reviews": "4"}, {"product_name": "Nike Air Max 90", "product_id": "CI5646-200", "listing_price": 11995, "sale_price": 9597, "discount": 0, "brand": "Nike", "description": "The Nike Air Max 90 stays true to its OG running roots with the iconic Waffle sole. Details and colours nod to the classic Lahar Escape Boot, delivering a vintage look from the wild.", "rating": "4.8", "reviews": "5"}, {"product_name": "Nike Air Zoom Pegasus 36", "product_id": "CD4573-001", "listing_price": 0, "sale_price": 10995, "discount": 0, "brand": "Nike", "description": "The iconic Nike Air Zoom Pegasus 36 returns with more perforations and mesh in the upper for targeted breathability across high-heat areas. A slimmer heel collar and tongue reduces bulk without compromising comfort, while exposed cables give you a snug fit at higher speeds.", "rating": "5", "reviews": "2"}, {"product_name": "Nike Zoom Fly 3", "product_id": "AT8241-002", "listing_price": 0, "sale_price": 13995, "discount": 0, "brand": "Nike", "description": "Inspired by the Vaporfly, the Nike Zoom Fly 3 gives distance runners race-day comfort and durability. The power of a carbon-fibre plate and responsive cushioning keeps you in the running mile after mile.", "rating": "4.8", "reviews": "12"}, {"product_name": "Nike Air Force 1 Shadow", "product_id": "CI0919-100", "listing_price": 0, "sale_price": 8995, "discount": 0, "brand": "Nike", "description": "The Nike Air Force 1 Shadow pays homage to the women who are setting an example for the next generation by being forces of change in their community. This sneaker reflects this ethos in its design with double the Swoosh, double the height and double the force.", "rating": "4.8", "reviews": "20"}, {"product_name": "Nike Air Max Tailwind IV", "product_id": "AQ2567-002", "listing_price": 13995, "sale_price": 8397, "discount": 0, "brand": "Nike", "description": "The Nike Air Max Tailwind IV gives a new look to the '90s classic. Max Air units give you comfort and style that last.", "rating": "5", "reviews": "1"}, {"product_name": "Nike Potential 3", "product_id": "844127-108", "listing_price": 0, "sale_price": 4495, "discount": 0, "brand": "Nike", "description": "The Nike Potential 3 Unisex Cricket Shoe delivers lightweight cushioning and superb grip on the field with a Phylon midsole and rubber outsole.", "rating": "5", "reviews": "1"}, {"product_name": "Nike x Olivia Kim Air Max 98", "product_id": "CK3309-001", "listing_price": 15995, "sale_price": 11197, "discount": 0, "brand": "Nike", "description": "NYC in the '90s\u00e2\u20ac\u201dif you spent much time in one of the many neighbourhoods, you'd hear SUVs driving around bumping Jamaican dancehall music at full blast. The Nike x Olivia Kim Air Max 98 celebrates the music and culture of NYC as remembered by designer Olivia. The fresh red-yellow-green take on the iconic Air Max 98 captures the vibrancy of the city's Rastafarian community.", "rating": "4.5", "reviews": "2"}, {"product_name": "NikeCourt Royale", "product_id": "749747-010", "listing_price": 4495, "sale_price": 3597, "discount": 0, "brand": "Nike", "description": "Taking inspiration from the archives, the NikeCourt Royale Men's Shoe brings retro tennis style in a modern package for everyday comfort.", "rating": "1.5", "reviews": "2"}, {"product_name": "Nike Air Huarache", "product_id": "634835-108", "listing_price": 0, "sale_price": 8995, "discount": 0, "brand": "Nike", "description": "Designed to stretch with your foot, the Nike Air Huarache Women's Shoe has remained a sneaker staple since its 1991 debut, when it changed the face of running footwear forever.", "rating": "4.5", "reviews": "63"}, {"product_name": "Nike Phantom Venom Academy FG", "product_id": "AO0566-606", "listing_price": 0, "sale_price": 7495, "discount": 0, "brand": "Nike", "description": "The Nike Phantom Venom Academy FG is engineered for powerful, precise strikes that win games. Ridges on the instep create spin to control the flight of the ball, while the firm-ground plate provides the traction needed to unleash at any moment.", "rating": "2.8", "reviews": "5"}, {"product_name": "Nike Phantom Vision 2 Elite Dynamic Fit FG", "product_id": "CD4161-606", "listing_price": 0, "sale_price": 22995, "discount": 0, "brand": "Nike", "description": "The Nike Phantom Vision 2 Elite Dynamic Fit FG brings a new level of fierce precision to the field. A foot-hugging inner sleeve is concealed in a textured Flyknit outer layer to create a boot for the finishers, the providers and the battlers of tomorrow's game.", "rating": "5", "reviews": "1"}, {"product_name": "Nike Air Force 1 Mid '07", "product_id": "366731-100", "listing_price": 7895, "sale_price": 6317, "discount": 0, "brand": "Nike", "description": "The legend lives on in the Nike Air Force 1 Mid '07 Women's Shoe, a modern take on the icon that blends classic style and fresh, crisp details.", "rating": "3.8", "reviews": "4"}, {"product_name": "Nike Air Force 1 '07 Premium", "product_id": "BQ4424-700", "listing_price": 10995, "sale_price": 7697, "discount": 0, "brand": "Nike", "description": "The Nike Air Force 1 '07 Premium captures the iconic look of its 1982 predecessor, with full-length cushioning for comfort and premium detailing that honours the original. A rich mix of materials gives an eye-catching look that's ready to hit the streets.", "rating": "5", "reviews": "1"}, {"product_name": "Air Jordan 12 Retro", "product_id": "130690-017", "listing_price": 0, "sale_price": 15995, "discount": 0, "brand": "Nike", "description": "An all-time favourite among players and sneakerheads, the Air Jordan 12 Retro features full-length Zoom Air cushioning and full-grain leather styled with distinct radial stitch lines.", "rating": "4.5", "reviews": "24"}, {"product_name": "Nike Air Max 98 LX", "product_id": "AV4417-002", "listing_price": 15995, "sale_price": 12797, "discount": 0, "brand": "Nike", "description": "Always one step ahead, the Nike Air Max 98 LX features the OG design lines that were inspired by the walls of the Grand Canyon while stepping into the future with a colourful medley of recycled materials on the upper. The fluid, textured look and full-length Nike Air cushioning set you apart as you turn waste into style.", "rating": "4.5", "reviews": "6"}, {"product_name": "Nike Phantom Venom Academy TF", "product_id": "AO0571-606", "listing_price": 0, "sale_price": 7495, "discount": 0, "brand": "Nike", "description": "The Nike Phantom Venom Academy TF is engineered for powerful, precise strikes that win games. Ridges on the instep help create spin to control the flight of the ball. The sole provides the turf traction needed to unleash at any moment.", "rating": "5", "reviews": "1"}, {"product_name": "Nike SB Dunk High Pro", "product_id": "BQ6826-003", "listing_price": 0, "sale_price": 8995, "discount": 0, "brand": "Nike", "description": "The Nike SB Dunk High Pro pairs iconic Dunk style with a high-top design for a fresh look. A Zoom Air unit in the heel and a padded tongue create a comfortable fit that's made to skate.", "rating": "4.8", "reviews": "4"}, {"product_name": "Nike Phantom Vision Academy Dynamic Fit MG", "product_id": "AO3258-080", "listing_price": 8495, "sale_price": 5947, "discount": 0, "brand": "Nike", "description": "The Nike Phantom Vision Academy Dynamic Fit MG brings the fierce precision of street play to the pitch. A foot-hugging sleeve has a custom feel and the Ghost Laces system tights with 1 pull and is hidden for a bigger striking surface.", "rating": "4", "reviews": "5"}, {"product_name": "Nike Air Max 270 React", "product_id": "AT6174-004", "listing_price": 12995, "sale_price": 7797, "discount": 0, "brand": "Nike", "description": "The bold silhouette of Nike Air lifts the Nike Air Max 270 React to new heights, while the Nike React foam midsole delivers exceptional cushioning. Imagine all-day comfort with unstoppable style.", "rating": "4.2", "reviews": "30"}, {"product_name": "Nike Tiempo Legend 8 Elite FG", "product_id": "AT5293-004", "listing_price": 0, "sale_price": 20995, "discount": 0, "brand": "Nike", "description": "The Nike Tiempo Legend 8 Elite FG takes the legendary touch of premium kangaroo leather and adds foot-hugging Quad-Fit mesh in the lining and a wrap-around Flyknit tongue that feels supportive under your arch.", "rating": "3.1", "reviews": "7"}, {"product_name": "Nike SB Zoom Stefan Janoski Canvas RM", "product_id": "AR7718-001", "listing_price": 0, "sale_price": 6995, "discount": 0, "brand": "Nike", "description": "The Nike SB Zoom Stefan Janoski Canvas RM pairs a minimal look with a modern fit. It has been updated with a new, plush sockliner and a flexible midsole for better boardfeel right out of the box.", "rating": "3.4", "reviews": "5"}, {"product_name": "Jordan 'Why Not?' Zer0.2 SE PF", "product_id": "AV4126-002", "listing_price": 0, "sale_price": 10995, "discount": 0, "brand": "Nike", "description": "Why not take the shot? Why not attack the full length of the court? Why not crash the boards and steal every ball and rain assists like water? The Jordan 'Why Not?' The Zer0.2 SE PF celebrates Russell Westbrook's calculated chaos by combining materials that work in lightweight harmony\u00e2\u20ac\u201dbecause, well, why not?", "rating": "3", "reviews": "2"}, {"product_name": "Nike Shox TL Nova SP", "product_id": "CK2085-002", "listing_price": 0, "sale_price": 14995, "discount": 0, "brand": "Nike", "description": "The 2003 icon returns with new upgrades. Fearless on the streets, the Nike Shox TL Nova takes mechanical cushioning to the next level. A modernised upper combines with Nike Shox columns for a new era.", "rating": "5", "reviews": "1"}, {"product_name": "Nike Air Max 90", "product_id": "CU0675-300", "listing_price": 13995, "sale_price": 9797, "discount": 0, "brand": "Nike", "description": "Redesigned for casual wear, the Nike Air Max 90 stays true to its '90s running roots with a rubber Waffle sole, stitched overlays and TPU plates. Hair-on leather and felted fabric colours combine with Max Air cushioning for a makeover that goes all out.", "rating": "5", "reviews": "1"}, {"product_name": "Nike Benassi JDI Floral", "product_id": "618919-031", "listing_price": 2995, "sale_price": 2397, "discount": 0, "brand": "Nike", "description": "The Nike Benassi JDI Floral Women's Slide is designed with a textured footbed and a lightweight foam midsole/outsole for a soothing, plush feel.", "rating": "4.1", "reviews": "8"}, {"product_name": "Nike Potential 3", "product_id": "844127-108", "listing_price": 0, "sale_price": 4495, "discount": 0, "brand": "Nike", "description": "The Nike Potential 3 Unisex Cricket Shoe delivers lightweight cushioning and superb grip on the field with a Phylon midsole and rubber outsole.", "rating": "5", "reviews": "1"}, {"product_name": "Nike Epic React Flyknit 2", "product_id": "BQ8927-102", "listing_price": 12995, "sale_price": 10397, "discount": 0, "brand": "Nike", "description": "The Nike Epic React Flyknit 2 takes a step up from its predecessor with smooth, lightweight performance and a bold look. An updated Flyknit upper contours to your foot with a minimal, supportive design. Underfoot, durable Nike React technology defies the odds by being both soft and responsive, for comfort that lasts as long as you can run.", "rating": "4.2", "reviews": "45"}, {"product_name": "Nike Phantom Vision Club Dynamic Fit FG", "product_id": "AJ6959-717", "listing_price": 5995, "sale_price": 4497, "discount": 0, "brand": "Nike", "description": "The Nike Phantom Vision Club Dynamic Fit FG brings the fierce precision of street play to the pitch. A foot-hugging Dynamic Fit collar combines with targeted texture for precision to create a boot for the finishers, the providers and the battlers of tomorrow's game.", "rating": "5", "reviews": "1"}, {"product_name": "Nike Air Max 97", "product_id": "921826-016", "listing_price": 16995, "sale_price": 11897, "discount": 0, "brand": "Nike", "description": "The Nike Air Max 97 Men's Shoe keeps the sneaker favourite going strong with the same design details that made it famous: water-ripple lines, reflective piping and full-length Max Air cushioning.", "rating": "4.3", "reviews": "17"}, {"product_name": "Nike x Olivia Kim Air Force 1 '07", "product_id": "CK3314-400", "listing_price": 0, "sale_price": 9995, "discount": 0, "brand": "Nike", "description": "Olivia Kim remembers NYC in the '90s. The city danced at all-night raves, and the fashion was bomb dot com. The Nike x Olivia Kim AF-1 '07 captures the outrageous '90s rave spirit with a blue corduroy upper and glow-in-the-dark details.", "rating": "5", "reviews": "1"}, {"product_name": "Nike TiempoX Lunar Legend VII Pro TF", "product_id": "AH7249-118", "listing_price": 8995, "sale_price": 7197, "discount": 0, "brand": "Nike", "description": "The Nike TiempoX Lunar Legend VII Pro Turf Football Boot features lightweight foam cushioning and a premium leather construction for a flexible fit and dominating touch when playing on turf pitches.", "rating": "3", "reviews": "1"}, {"product_name": "Nike M2K Tekno", "product_id": "BQ3378-002", "listing_price": 8995, "sale_price": 7197, "discount": 0, "brand": "Nike", "description": "The Nike M2K Tekno Shoe draws inspiration from the Monarch franchise and pushes it into today with a futuristic heel counter and plush tongue for additional comfort.", "rating": "3", "reviews": "1"}, {"product_name": "Nike Epic Phantom React Flyknit", "product_id": "BV0415-300", "listing_price": 12995, "sale_price": 7797, "discount": 0, "brand": "Nike", "description": "\"Soft to the touch, the Nike Epic Phantom React Flyknit is lace-free for a slip-on design that gets you up and out the door in no time. A snug, sock-like fit and breathable upper materials will make you feel as though the Phantom \"\"disappears\"\" as you run.\"", "rating": "4.9", "reviews": "17"}, {"product_name": "Nike SB Air Zoom Bruin Edge", "product_id": "CD5036-100", "listing_price": 0, "sale_price": 7995, "discount": 0, "brand": "Nike", "description": "The Nike SB Air Zoom Bruin Edge puts a DIY spin on an iconic skate shoe. Frayed stitching, exposed foam and a mix of materials create a patched look that's built to perform. Stencils are included so you can take the DIY look to the next level.", "rating": "5", "reviews": "1"}, {"product_name": "Nike Mercurial Superfly 7 Elite FG", "product_id": "AQ4174-049", "listing_price": 0, "sale_price": 22995, "discount": 0, "brand": "Nike", "description": "Building on the 360 innovation of the 6, the Nike Mercurial Superfly 7 Elite FG Boot adds a Nike Aerowtrac zone to the forefoot and a slightly stiffer chassis to help supercharge traction.", "rating": "4.3", "reviews": "8"}, {"product_name": "Nike Air Max 90 Essential", "product_id": "AJ1285-101", "listing_price": 0, "sale_price": 8995, "discount": 0, "brand": "Nike", "description": "The Nike Air Max 90 Essential Men's Shoe keeps the classic design lines of the 1990 original and the cushioning that made it famous.", "rating": "4", "reviews": "9"}, {"product_name": "Nike Air Zoom Pegasus 36 Premium Rise", "product_id": "AV6259-500", "listing_price": 10995, "sale_price": 6597, "discount": 0, "brand": "Nike", "description": "\"Breathability and inspiration come together in the Nike Air Zoom Pegasus 36 Premium Rise. A knit-in graphic repeating across the mesh and synthetic upper spells out \"\"Just Do It.\"\" in perforations. Strategically placed", "rating": " they cover zones where your foot releases the most heat.\"", "reviews": "5"}, {"product_name": "Nike Tiempo Legend 8 Academy MG", "product_id": "AT5292-004", "listing_price": 6495, "sale_price": 4547, "discount": 0, "brand": "Nike", "description": "The Nike Tiempo Legend 8 Academy MG takes the legendary touch of calfskin leather and adds a versatile multi-ground plate for traction on natural- and artificial-grass surfaces.", "rating": "2", "reviews": "1"}, {"product_name": "Nike Tanjun", "product_id": "812654-011", "listing_price": 4795, "sale_price": 3357, "discount": 0, "brand": "Nike", "description": "\"Named after the Japanese word for \"\"simplicity\"\"", "rating": " the Nike Tanjun Men's Shoe offers a streamlined", "reviews": " modern design for an elevated everyday look.\""}, {"product_name": "Nike Air Max Triax 96 SP", "product_id": "CT5543-300", "listing_price": 0, "sale_price": 12995, "discount": 0, "brand": "Nike", "description": "First released in the late '90s, the Nike Air Max Triax 96 SP now returns as a cult classic. Featuring the same iconic shape and large-volume visible Air unit, it brings back the classic comfort and style you remember.", "rating": "4", "reviews": "1"}, {"product_name": "Nike Air Max 2090", "product_id": "CU9174-600", "listing_price": 0, "sale_price": 13995, "discount": 0, "brand": "Nike", "description": "Bring the past into the future with the Nike Air Max 2090, a bold look inspired by the DNA of the iconic Air Max 90. Brand-new Nike Air cushioning underfoot adds unparalleled comfort while transparent mesh and vibrantly coloured details on the upper are blended with timeless OG features for an edgy, modernised look.", "rating": "5", "reviews": "1"}, {"product_name": "Nike Zoom Pegasus Turbo Shield", "product_id": "CJ9712-001", "listing_price": 17995, "sale_price": 12597, "discount": 0, "brand": "Nike", "description": "The Nike Zoom Pegasus Turbo Shield delivers your favourite lightweight running shoe in a smart, weatherised design, so you can continue training in confidence despite those dark and rainy months.", "rating": "4.5", "reviews": "4"}, {"product_name": "Nike Air Max 720 SE", "product_id": "CD0683-600", "listing_price": 0, "sale_price": 15995, "discount": 0, "brand": "Nike", "description": "The Nike Air Max 720 goes bigger than ever before with Nike's tallest Air unit yet, which offers more air underfoot for unprecedented, all-day comfort. Details include bubble wrap accents and colours inspired by the natural world.", "rating": "3", "reviews": "1"}, {"product_name": "Nike Revolution 5 FlyEase", "product_id": "BQ3212-600", "listing_price": 0, "sale_price": 3695, "discount": 0, "brand": "Nike", "description": "Designed with a zip closure secured by a midfoot strap, the Nike Revolution 5 FlyEase lets you suit up for your run quickly and easily. Soft foam cushions your stride, while a minimalist design fits in just about anywhere.", "rating": "4.5", "reviews": "6"}, {"product_name": "Nike Classic Cortez", "product_id": "807471-101", "listing_price": 0, "sale_price": 6995, "discount": 0, "brand": "Nike", "description": "The Nike Classic Cortez Women's Shoe is Nike's original running shoe, designed by Bill Bowerman and released in 1972. This version features a leather and synthetic leather construction for added durability.", "rating": "4.5", "reviews": "34"}, {"product_name": "Nike Air Max 200", "product_id": "AT6175-100", "listing_price": 9995, "sale_price": 5997, "discount": 0, "brand": "Nike", "description": "Inspired by patterns of energy radiating from Earth\u00e2\u20ac\u201dlike the flow of lava and the rhythmic ocean waves\u00e2\u20ac\u201dthe Nike Air Max 200 boasts the largest Max Air unit to date. With exceptional cushioning and modern detailing, this shoe radiates cool while providing optimal comfort.", "rating": "4.6", "reviews": "16"}, {"product_name": "Nike Air Max 270", "product_id": "AH6789-023", "listing_price": 0, "sale_price": 13995, "discount": 0, "brand": "Nike", "description": "The Nike Air Max 270 is inspired by two icons of big Air: Air Max 180 and Air Max 93. It features Nike's biggest heel Air unit yet for a soft ride that feels as remarkable as it looks.", "rating": "3.9", "reviews": "63"}, {"product_name": "Nike SFB Gen 2 20cm (approx.)", "product_id": "922474-001", "listing_price": 0, "sale_price": 13995, "discount": 0, "brand": "Nike", "description": "Made from durable nylon canvas and synthetic leather, the Nike SFB Gen 2 20cm (approx.) is a lightweight tactical boot designed for speed and flexibility over rough terrain. Inspired by Nike Free technology, the flexible sole is equipped with an aggressive traction pattern for multi-surface grip and an internal rock shield to help prevent punctures.", "rating": "3.8", "reviews": "15"}, {"product_name": "Nike Air Max Dia", "product_id": "CI3898-200", "listing_price": 0, "sale_price": 8995, "discount": 0, "brand": "Nike", "description": "Designed specifically for a woman's foot, the Nike Air Max Dia delivers a lifted look, an airy aesthetic and a sleek shape. The minimal upper modernises the look, while the Max Air unit, surrounded by clear TPU, is amplified even further by an exaggerated midsole for a boost of style.", "rating": "5", "reviews": "3"}, {"product_name": "Nike Zoom Rise", "product_id": "BQ5467-101", "listing_price": 11995, "sale_price": 8397, "discount": 0, "brand": "Nike", "description": "Bounce like never before in the Zoom Rise, Nike Basketball's artfully crafted creation for the upwardly mobile. This mid-top provides containment and support up through the ankle, while an extra-large Nike Zoom Air unit under the ball of your foot redefines how responsive a shoe can be.", "rating": "4", "reviews": "2"}, {"product_name": "Air Jordan 1 Low", "product_id": "553558-125", "listing_price": 0, "sale_price": 8995, "discount": 0, "brand": "Nike", "description": "Inspired by the original that debuted in 1985, the Air Jordan 1 Low offers a clean, classic look that's familiar yet always fresh. It's made for casual mode, with an iconic design that goes with everything and never goes out of style.", "rating": "4.6", "reviews": "34"}, {"product_name": "Nike Air Max Bella TR 2", "product_id": "AQ7492-010", "listing_price": 0, "sale_price": 6495, "discount": 0, "brand": "Nike", "description": "The Nike Air Max Bella TR 2 is a versatile trainer for weight training and station workouts. It's crafted from breathable fabric and features comfortable cushioning underfoot with a flat outsole for stability during workout sessions.", "rating": "4.3", "reviews": "12"}, {"product_name": "Nike Air Zoom Terra Kiger 6", "product_id": "CJ0220-400", "listing_price": 0, "sale_price": 10995, "discount": 0, "brand": "Nike", "description": "The Nike Air Zoom Terra Kiger 6 is built to take on wet and rocky trails. Lightweight in design, it features a sleeker look with a woven heel for a secure fit and feel.", "rating": "5", "reviews": "2"}, {"product_name": "Jordan Proto-React Z", "product_id": "CI3794-600", "listing_price": 13995, "sale_price": 11197, "discount": 0, "brand": "Nike", "description": "Inspired by spacesuits, the Jordan Proto-React Z has a futuristic look with a fit and feel made for all-day wear. Responsive cushioning gives you more bounce with less weight, while an aeronautics-inspired shroud and snug bootie help keep you strapped in.", "rating": "4.6", "reviews": "5"}, {"product_name": "Nike Air Force 1 SP", "product_id": "CQ6566-700", "listing_price": 0, "sale_price": 12995, "discount": 0, "brand": "Nike", "description": "The Nike Air Force 1 SP adds a shiny metallic finish to the details that made the original an icon.", "rating": "4.7", "reviews": "3"}, {"product_name": "Nike Zoom Pegasus Turbo", "product_id": "AJ4115-060", "listing_price": 0, "sale_price": 15995, "discount": 0, "brand": "Nike", "description": "The Nike Zoom Pegasus Turbo is the Pegasus you know and love with major upgrades for speed. The featherlight upper looks as fast as it feels, while the revolutionary Nike ZoomX foam that was designed for elite Nike runners during the Breaking 2 attempt brings record-breaking speed and responsiveness to your daily training runs.", "rating": "3.6", "reviews": "20"}, {"product_name": "Nike Free RN 5.0", "product_id": "AQ1316-500", "listing_price": 7995, "sale_price": 4797, "discount": 0, "brand": "Nike", "description": "An ideal performer for runs of up to 3 miles, the Nike Free RN 5.0 returns to its roots as a running shoe. A stripped-down upper with single-layer mesh is stretchy to feel like a second skin. The lightweight midsole with less foam makes it easy to hit the ground running.", "rating": "4.2", "reviews": "13"}, {"product_name": "Nike Air VaporMax 2019 Premium", "product_id": "AT6817-300", "listing_price": 16995, "sale_price": 13597, "discount": 0, "brand": "Nike", "description": "The Nike Air VaporMax 2019 Premium Shoe wraps your foot in stretchy woven material that gives structure and support to your stride. Underfoot, the lightest, most flexible Air Max cushioning to date gives a super-bouncy sensation that rivals running on air. Metallic Silver accents spark a sense of style.", "rating": "5", "reviews": "1"}, {"product_name": "NikeCourt Air Zoom Vapor Cage 4", "product_id": "CD0431-107", "listing_price": 0, "sale_price": 12995, "discount": 0, "brand": "Nike", "description": "The NikeCourt Air Zoom Vapor Cage 4 is innovated to last. Rubber and flexible plastic are built to withstand your toughest matches while a unique lacing system keeps your laces hidden for extra durability.", "rating": "4.7", "reviews": "3"}, {"product_name": "Air Jordan 1 Nova XX", "product_id": "AV4052-116", "listing_price": 0, "sale_price": 10495, "discount": 0, "brand": "Nike", "description": "Featuring an internal 1/2 sleeve construction, the Air Jordan 1 Nova XX Shoe offers a snug fit without traditional laces. Underfoot, an Air-Sole unit at the heel provides lightweight cushioning that moves with you all day long.", "rating": "5", "reviews": "1"}, {"product_name": "Nike Flex RN 2019", "product_id": "AQ7483-001", "listing_price": 0, "sale_price": 6995, "discount": 0, "brand": "Nike", "description": "The stretchable knit upper of the Nike Flex RN 2019 wraps you in softness as it expands and contracts with your foot. Dual-density foam layers supply durable cushioned comfort, while grooves on the outsole give you heel-to-toe flexibility.", "rating": "4.5", "reviews": "2"}, {"product_name": "Nike Free X Metcon 2", "product_id": "CD8526-446", "listing_price": 0, "sale_price": 9995, "discount": 0, "brand": "Nike", "description": null, "rating": "3", "reviews": "7"}, {"product_name": "Nike Air Max Impact", "product_id": "CI1396-004", "listing_price": 0, "sale_price": 7995, "discount": 0, "brand": "Nike", "description": "The Nike Air Max Impact infuses bold, expressive details into a design that's a beast on the court. Responsive cushioning helps soften hard landings, while the moulded heel clip and dual-strap system combine for a lightweight, locked-in feel.", "rating": "5", "reviews": "1"}, {"product_name": "Nike Classic Cortez", "product_id": "807471-103", "listing_price": 0, "sale_price": 6995, "discount": 0, "brand": "Nike", "description": "The Nike Classic Cortez Women's Shoe is Nike's original running shoe, designed by Bill Bowerman and released in 1972. This version features a leather and synthetic leather construction for added durability.", "rating": "4.5", "reviews": "34"}, {"product_name": "Nike Air Max 90 Premium", "product_id": "CJ1794-600", "listing_price": 0, "sale_price": 11995, "discount": 0, "brand": "Nike", "description": "The Nike Air Max 90 Premium pays tribute to the steadfast Royal Mail workers in London. Nike Air cushioning provides comfort for all-day wear, while fabric and leather on the upper combine breathability with durability. Details like crowns on the laces and colours inspired by Royal Mail uniforms nod to those who deliver day in and day out.", "rating": "5", "reviews": "2"}, {"product_name": "Nike Renew Run", "product_id": "CK6360-001", "listing_price": 0, "sale_price": 6995, "discount": 0, "brand": "Nike", "description": "The Nike Renew Run keeps you moving with softer foam for a cushioned feel. Designed with the everyday runner in mind, this shoe delivers secure support and durable traction for comfort on the go.", "rating": "4.8", "reviews": "5"}, {"product_name": "Nike Air Max 270 Special Edition", "product_id": "CQ6549-001", "listing_price": 0, "sale_price": 14995, "discount": 0, "brand": "Nike", "description": "Find unstoppable comfort in the Nike Air Max 270. The eye-catching Max Air 270 unit and Nike React foam midsole deliver cushioning that moves with you. A soft and minimal collar contours to your heel for an amazing fit. A glow-in-the-dark colourway celebrates the New Year.", "rating": "5", "reviews": "1"}, {"product_name": "Nike Air Force 1 Sage Low", "product_id": "AR5339-002", "listing_price": 0, "sale_price": 8995, "discount": 0, "brand": "Nike", "description": "Taking both height and craft to new levels, the Nike Air Force 1 Sage Low features a platform midsole and a pared-down upper for a bold yet feminine look.", "rating": "4.5", "reviews": "36"}, {"product_name": "Nike Air Max Triax 96", "product_id": "CD2053-105", "listing_price": 0, "sale_price": 10995, "discount": 0, "brand": "Nike", "description": "More than 20 years after its initial release, the Nike Air Max Triax 96 returns as a cult classic. Featuring the same iconic shape and large-volume Air unit, it brings back the classic comfort and style you remember.", "rating": "5", "reviews": "2"}, {"product_name": "PG 3 NASA", "product_id": "CI2666-400", "listing_price": 9995, "sale_price": 7997, "discount": 0, "brand": "Nike", "description": "Paul George's moon shot took him from Palmdale to basketball stardom, and now he's heading to new heights. This space-themed version of the PG 3 offers sensational traction, springy responsiveness and lightweight containment for seamless moves between offence and defence.", "rating": "3.7", "reviews": "11"}, {"product_name": "Nike Free RN 5.0 AW", "product_id": "BV7775-100", "listing_price": 8995, "sale_price": 5397, "discount": 0, "brand": "Nike", "description": "An ideal performer for runs up to 3 miles, the Nike Free RN 5.0 AW returns to its roots as a motion shoe. A stripped-down upper with single-layer mesh stretches and moves with you. Less foam in the midsole makes it easy to hit the ground running.", "rating": "5", "reviews": "1"}, {"product_name": "Air Jordan 1 Jester XX Low Laced", "product_id": "CI7815-602", "listing_price": 0, "sale_price": 7995, "discount": 0, "brand": "Nike", "description": "The Air Jordan 1 Jester XX Low knows not to take things too seriously, except comfort. A real and synthetic leather upper is supportive where it counts, while the exaggerated midsole adds a little altitude with responsive cushioning.", "rating": "5", "reviews": "2"}, {"product_name": "Nike SB Zoom Stefan Janoski Canvas RM", "product_id": "AR7718-001", "listing_price": 0, "sale_price": 6995, "discount": 0, "brand": "Nike", "description": "The Nike SB Zoom Stefan Janoski Canvas RM pairs a minimal look with a modern fit. It has been updated with a new, plush sockliner and a flexible midsole for better boardfeel right out of the box.", "rating": "3.4", "reviews": "5"}, {"product_name": "Nike Tiempo Legend 8 Academy IC", "product_id": "AT6099-606", "listing_price": 0, "sale_price": 6495, "discount": 0, "brand": "Nike", "description": "The Nike Tiempo Legend 8 Academy IC takes the legendary touch of calfskin leather and adds cushioning that equips you for the court or the streets. A mesh tongue and collar lining add breathability and street style.", "rating": "5", "reviews": "1"}, {"product_name": "Nike SB Bruin High", "product_id": "923112-001", "listing_price": 7995, "sale_price": 5597, "discount": 0, "brand": "Nike", "description": "The first Nike SB shoe designed specifically for women, the Nike SB Bruin High is built for exceptional comfort and board control. With classic Bruin design lines and details, this is a fresh take on a time-honoured shoe.", "rating": "4.2", "reviews": "6"}, {"product_name": "PG 3", "product_id": "AO2607-401", "listing_price": 8995, "sale_price": 7197, "discount": 0, "brand": "Nike", "description": "Paul George's moon shot took him from Palmdale to basketball stardom, and now he's heading to new heights with clouds under his feet. Built on an outsole inspired by moon craters, the PG 3 combines sensational traction with responsive Zoom Air cushioning that helps you move seamlessly between offence and defence.", "rating": "4", "reviews": "19"}, {"product_name": "Nike Free TR Ultra", "product_id": "AO3424-001", "listing_price": 7995, "sale_price": 6397, "discount": 0, "brand": "Nike", "description": "The Nike Free TR Ultra is lightweight and flexible to be quick and adaptable for whatever workout you take on. The slip-on design has Flywire cables to securely hold your foot. Soft, flexible foam cushioning has a wider surface area for more stability.", "rating": "1", "reviews": "1"}, {"product_name": "Air Jordan 7 Retro", "product_id": "313358-006", "listing_price": 15995, "sale_price": 11197, "discount": 0, "brand": "Nike", "description": "The Air Jordan 7 Retro celebrates MJ's championship legacy with a reissue of his 7th game shoe, the one he famously wore to gold-medal glory.", "rating": "4.8", "reviews": "4"}, {"product_name": "Nike SFB Gen 2 20cm (approx.)", "product_id": "922474-001", "listing_price": 0, "sale_price": 13995, "discount": 0, "brand": "Nike", "description": "Made from durable nylon canvas and synthetic leather, the Nike SFB Gen 2 20cm (approx.) is a lightweight tactical boot designed for speed and flexibility over rough terrain. Inspired by Nike Free technology, the flexible sole is equipped with an aggressive traction pattern for multi-surface grip and an internal rock shield to help prevent punctures.", "rating": "3.8", "reviews": "15"}, {"product_name": "Nike Mercurial Superfly 7 Elite MDS FG", "product_id": "BQ5469-703", "listing_price": 0, "sale_price": 24995, "discount": 0, "brand": "Nike", "description": "Dream of speed and play fast in the Nike Mercurial Superfly 7 Elite MDS FG. A streamlined upper combines with a Nike Aerowtrac zone for high-speed play and supercharged traction.", "rating": "5", "reviews": "1"}, {"product_name": "Nike Epic Phantom React", "product_id": "CI1290-100", "listing_price": 13995, "sale_price": 8397, "discount": 0, "brand": "Nike", "description": "\"Soft to the touch, the Nike Epic Phantom React lets go of laces for a slip-on style that gets you up and running in no time. A snug, secure, sock-like fit within a breathable Flyknit and synthetic upper feels as though the Phantom \"\"disappears\"\" as you run.\"", "rating": "5", "reviews": "2"}, {"product_name": "Nike Air Huarache Ultra", "product_id": "885118-001", "listing_price": 8995, "sale_price": 7197, "discount": 0, "brand": "Nike", "description": "The Nike Air Huarache Ultra Women's Sandal helps keep your feet cool and comfortable on warmer days.", "rating": "4.6", "reviews": "12"}, {"product_name": "Nike Wildhorse 6", "product_id": "BV7099-400", "listing_price": 0, "sale_price": 9995, "discount": 0, "brand": "Nike", "description": "The Nike Wildhorse 6 keeps it stable, secure and lightweight on the trail. An updated outsole delivers the traction you need, while a foam midsole keeps you cushioned on your run.", "rating": "4.5", "reviews": "2"}, {"product_name": "Nike Benassi JDI BETRUE", "product_id": "CD2717-001", "listing_price": 0, "sale_price": 4495, "discount": 0, "brand": "Nike", "description": "The Nike Benassi JDI BETRUE Slide creates lightweight comfort in a classic design, while the soft foam sole cushions your every step.", "rating": "4.3", "reviews": "3"}, {"product_name": "Nike Zoom Rise", "product_id": "BQ5467-101", "listing_price": 11995, "sale_price": 8397, "discount": 0, "brand": "Nike", "description": "Bounce like never before in the Zoom Rise, Nike Basketball's artfully crafted creation for the upwardly mobile. This mid-top provides containment and support up through the ankle, while an extra-large Nike Zoom Air unit under the ball of your foot redefines how responsive a shoe can be.", "rating": "4", "reviews": "2"}, {"product_name": "Nike Tiempo Legend 8 Club IC", "product_id": "AT6110-004", "listing_price": 4495, "sale_price": 3147, "discount": 0, "brand": "Nike", "description": "The Nike Tiempo Legend 8 Club IC takes the touch of textured synthetic leather and adds a grippy rubber outsole for multi-directional traction.", "rating": "2", "reviews": "1"}, {"product_name": "Nike Air Max 2017", "product_id": "849560-001", "listing_price": 0, "sale_price": 15995, "discount": 0, "brand": "Nike", "description": "The Nike Air Max 2017 Women's Shoe features a seamless Flymesh upper for support and breathability. Iconic Max Air cushioning provides a lightweight, smooth feel with each step, whether you're running your three-miler or running your day.", "rating": "3.5", "reviews": "18"}, {"product_name": "Nike Flex RN 2018", "product_id": "AA7408-008", "listing_price": 7495, "sale_price": 5997, "discount": 0, "brand": "Nike", "description": "The Nike Flex RN 2018 Women's Running Shoe delivers a flexible fit with a lightweight knit construction to help your runs feel free and easy.", "rating": "3.2", "reviews": "15"}, {"product_name": "NikeCourt Royale AC", "product_id": "BQ9138-601", "listing_price": 4495, "sale_price": 3147, "discount": 0, "brand": "Nike", "description": "Winning in both style and comfort, the NikeCourt Royale AC is as easy to get on as it is to pair with your entire warm-weather wardrobe. A hidden gore strap keeps the canvas upper looking clean and classic while easing it on and off.", "rating": "5", "reviews": "1"}, {"product_name": "Jordan Air Latitude 720", "product_id": "AV5187-602", "listing_price": 15995, "sale_price": 12797, "discount": 0, "brand": "Nike", "description": "Boasting a bold 720 Air unit, the Jordan Air Latitude 720 offers 360 degrees of cushioning and then some. This attention-grabbing, AJ 8\u00e2\u20ac\u201cinspired shoe is a celebration of '90s Jordan heritage, big-time Air and street-ready comfort.", "rating": "5", "reviews": "1"}, {"product_name": "Nike Air Force 1 '07 SE", "product_id": "AA0287-002", "listing_price": 8495, "sale_price": 6797, "discount": 0, "brand": "Nike", "description": "The legend lives on in the Nike Air Force 1 '07 SE. This fresh take on an icon gives you classic style while playing up the AF-1's versatility with new colours and materials.", "rating": "3.6", "reviews": "5"}, {"product_name": "Nike Zoom Fly 3 Premium", "product_id": "BV7756-001", "listing_price": 14995, "sale_price": 10497, "discount": 0, "brand": "Nike", "description": "Inspired by the Vaporfly, the Nike Zoom Fly 3 gives distance runners race-day comfort and durability. The power of a carbon-fibre plate keeps you in the running mile after mile.", "rating": "5", "reviews": "1"}, {"product_name": "Nike Air VaporMax 2019", "product_id": "AR6632-603", "listing_price": 15995, "sale_price": 9597, "discount": 0, "brand": "Nike", "description": "Designed for running but adopted by the street, the Nike Air VaporMax 2019 features the lightest, most flexible Air Max cushioning to date. A stretch woven material wraps your foot for lightweight support and stability, while an external reinforcement in the heel secures the back of your foot.", "rating": "3.5", "reviews": "11"}, {"product_name": "Nike Air Zoom Structure 22", "product_id": "AA1640-002", "listing_price": 0, "sale_price": 9995, "discount": 0, "brand": "Nike", "description": "The Nike Air Zoom Structure 22 Women's Running Shoe looks fast and feels secure. Engineered mesh, a heel overlay and dynamic support throughout the midfoot all work together to provide a smooth, stable ride.", "rating": "4.3", "reviews": "14"}, {"product_name": "NikeCourt Air Zoom Vapor X", "product_id": "AA8027-109", "listing_price": 0, "sale_price": 14995, "discount": 0, "brand": "Nike", "description": "The NikeCourt Air Zoom Vapor X has an updated Dynamic Fit system with a full-length foot frame to provide ultimate control. Its new generative outsole combined with a Zoom Air unit provides a lightweight, responsive feel on the court.", "rating": "4", "reviews": "3"}, {"product_name": "LeBron Soldier 13 SFG", "product_id": "AR4225-100", "listing_price": 11995, "sale_price": 9597, "discount": 0, "brand": "Nike", "description": "LeBron works hard in the offseason, getting stronger and fine-tuning his already devastating skills. Inspired by his dedication and commitment to inclusivity, the Soldier 13 SFG combines LeBron-tested cushioning, containment and support with a wide, flexible collar and lace-free closure that lets all players get in and out of the shoe with ease.", "rating": "4.2", "reviews": "6"}, {"product_name": "Air Jordan 13 Retro", "product_id": "414571-030", "listing_price": 0, "sale_price": 15995, "discount": 0, "brand": "Nike", "description": "Featuring a panther-inspired design that takes after Michael Jordan's on-court presence, the Air Jordan 13 Retro is based on the OG model and has the same responsive cushioning and premium materials that made it famous in the '90s.", "rating": "3.9", "reviews": "34"}, {"product_name": "Nike React Element 55 Premium", "product_id": "CD6964-002", "listing_price": 11995, "sale_price": 7197, "discount": 0, "brand": "Nike", "description": "The Nike React Element 55 is a balanced blend of classic design and forward-looking innovation. Nike React foam delivers lightweight, bouncy comfort, while rubber outsole pods and an exaggerated outsole offer a cutting-edge look that begs a reaction.", "rating": "4", "reviews": "1"}, {"product_name": "Nike Air Max 97", "product_id": "CI7388-600", "listing_price": 0, "sale_price": 16995, "discount": 0, "brand": "Nike", "description": "The Nike Air Max 97 keeps a sneaker icon going strong with the same design details that made its reputation from the beginning: water-ripple lines, reflective piping and full-length Max Air cushioning.", "rating": "5", "reviews": "1"}, {"product_name": "Nike Air Force 1 GORE-TEX \u00c2\u00ae", "product_id": "CK2630-001", "listing_price": 12995, "sale_price": 10397, "discount": 0, "brand": "Nike", "description": "The Nike Air Force 1 GORE-TEX \u00c2\u00ae retools the classic Air Force 1 with a street-approved design that meets the standards of GORE-TEX \u00c2\u00ae waterproof technology. It features water-wicking flat laces, a GORE-TEX \u00c2\u00ae bootie and GORE-TEX \u00c2\u00ae branding on the heel.", "rating": "4.1", "reviews": "18"}, {"product_name": "Nike Phantom Venom Academy TF", "product_id": "AO0571-606", "listing_price": 0, "sale_price": 7495, "discount": 0, "brand": "Nike", "description": "The Nike Phantom Venom Academy TF is engineered for powerful, precise strikes that win games. Ridges on the instep help create spin to control the flight of the ball. The sole provides the turf traction needed to unleash at any moment.", "rating": "5", "reviews": "1"}, {"product_name": "Kyrie 4", "product_id": "943806-602", "listing_price": 0, "sale_price": 10995, "discount": 0, "brand": "Nike", "description": "The Kyrie 4 Men's Basketball Shoe is ultra-flexible, responsive and supportive. It's designed for Kyrie Irving's sudden changes of direction and smooth yet rapid playing style.", "rating": "4.1", "reviews": "19"}, {"product_name": "Nike React Metcon", "product_id": "BQ6046-010", "listing_price": 0, "sale_price": 12995, "discount": 0, "brand": "Nike", "description": "The Nike React Metcon takes the stability and traction from the training original and pairs it with Nike's most comfortable cushioning. Tackle high-impact and lifting workouts with a light, breathable upper and durable grip to keep you going.", "rating": "3.7", "reviews": "3"}, {"product_name": "Nike ZoomX Vista Grind SP", "product_id": "CT5770-300", "listing_price": 0, "sale_price": 14995, "discount": 0, "brand": "Nike", "description": "The Nike ZoomX Vista Grind SP is proof of the improbable, bringing you to a bold new place that's rebellious and forward thinking. Recycled foam from the Nike ZoomX family plus lightweight fabric and durable overlays come together to give the shoe a modern look and classic comfort.", "rating": "5", "reviews": "1"}, {"product_name": "Nike Air Max 270 React", "product_id": "CI3899-200", "listing_price": 0, "sale_price": 12995, "discount": 0, "brand": "Nike", "description": "The Nike Air Max 270 React uses lightweight, layered, no-sew materials to create a modern style that looks as good as it feels.", "rating": "4.3", "reviews": "6"}, {"product_name": "Nike Drop-Type", "product_id": "CQ0989-002", "listing_price": 0, "sale_price": 5995, "discount": 0, "brand": "Nike", "description": "With DIY attitude and classic tennis shoe appeal, the Nike Drop-Type puts a raw, experimental edge on an iconic look. Featuring distinct lines that borrow from the NikeCourt series, an exposed foam tongue and N354 branding, it lets your shoes do the talking.", "rating": "4", "reviews": "1"}, {"product_name": "Nike Blazer Low LE", "product_id": "AV9370-001", "listing_price": 6995, "sale_price": 5597, "discount": 0, "brand": "Nike", "description": "The Nike Blazer Low LE refines the old-school basketball icon with updated details.", "rating": "5", "reviews": "2"}, {"product_name": "Nike Zoom Pegasus Turbo 2 Rise", "product_id": "BV1134-001", "listing_price": 15995, "sale_price": 9597, "discount": 0, "brand": "Nike", "description": "The Nike Zoom Pegasus Turbo 2 Rise is updated with a featherlight upper, while innovative foam brings revolutionary responsiveness to your long-distance training.", "rating": "4", "reviews": "5"}, {"product_name": "Nike Air Max Dia SE", "product_id": "AR7410-603", "listing_price": 9995, "sale_price": 5997, "discount": 0, "brand": "Nike", "description": "The Nike Air Max Dia SE features sleek lines and a sheer upper that combine classic Air Max elements into a lightweight, comfy and versatile icon. Together with its smart toe-down profile and extra lift, the Nike Air Max Dia SE offers an ever-bigger expression of Nike Air.", "rating": "4.8", "reviews": "20"}, {"product_name": "Nike Tanjun", "product_id": "812655-011", "listing_price": 4995, "sale_price": 3997, "discount": 0, "brand": "Nike", "description": "Named after the Japanese word for simplicity, the Nike Tanjun Women's Shoe offers an elegant, modern design for an elevated everyday look.", "rating": "4", "reviews": "53"}, {"product_name": "Nike Air Max 90", "product_id": "325213-139", "listing_price": 9495, "sale_price": 7597, "discount": 0, "brand": "Nike", "description": "The Nike Air Max 90 Women's Shoe honours its roots with a supportive upper and the excellent cushioning that made the original a favourite.", "rating": "3.6", "reviews": "5"}, {"product_name": "Nike Air Max 720 BETRUE", "product_id": "CJ5472-900", "listing_price": 0, "sale_price": 15995, "discount": 0, "brand": "Nike", "description": "Designed in collaboration with Gilbert Baker, the Nike Air Max 720 BETRUE features a rainbow-coloured upper inspired by, and in celebration of, the LGBTQ community.", "rating": "5", "reviews": "1"}, {"product_name": "Nike Odyssey React", "product_id": "AO9820-001", "listing_price": 11995, "sale_price": 9597, "discount": 0, "brand": "Nike", "description": "The Nike Odyssey React Women's Running Shoe provides crazy comfort that lasts as long as you can run. Its Nike React foam cushioning is responsive yet lightweight, durable yet soft. This attraction of opposites creates a sensation that not only enhances the feeling of moving forwards, but makes running feel fun, too.\u00c2\u00a0The upper of the Nike Odyssey React is built with a lightweight, breathable fabric instead of the premium Flyknit featured on the Nike Epic React.", "rating": "4.1", "reviews": "8"}, {"product_name": "Nike Legend React", "product_id": "AA1626-602", "listing_price": 0, "sale_price": 8795, "discount": 0, "brand": "Nike", "description": "The Nike Legend React Women's Running Shoe features a breathable upper with synthetic overlays that enhance durability while smooth, responsive foam cushions every step as you run.", "rating": "2.7", "reviews": "19"}, {"product_name": "Nike Air Zoom Winflo 6", "product_id": "AQ8228-102", "listing_price": 0, "sale_price": 7995, "discount": 0, "brand": "Nike", "description": "In a fluid design that speaks the language of fast, the Nike Air Zoom Winflo 6 has less bulk and a more sculpted profile than previous versions. It has 2 Zoom Air units for targeted responsiveness in the forefoot and heel. On the top, engineered mesh optimises breathability.", "rating": "3.7", "reviews": "10"}, {"product_name": "Nike Air Zoom Vomero 14", "product_id": "AH7858-010", "listing_price": 11995, "sale_price": 9597, "discount": 0, "brand": "Nike", "description": "The Nike Air Zoom Vomero 14 takes responsive cushioning to the next level. The full-length Zoom Air unit works with Nike React cushioning to deliver a super-snappy, smooth ride. On the top, the sleek design is engineered to support your stride.", "rating": "2.8", "reviews": "11"}, {"product_name": "Nike Air VaporMax SE", "product_id": "CI1246-302", "listing_price": 16995, "sale_price": 10197, "discount": 0, "brand": "Nike", "description": "The Nike Air VaporMax SE wraps your foot in a stretch woven material that gives structure and support to your stride. Underfoot, the lightest, most flexible Air Max cushioning to date gives a super-bouncy sensation that rivals running on air.", "rating": "3.7", "reviews": "3"}, {"product_name": "NikeCourt Air Max Wildcard", "product_id": "AO7353-105", "listing_price": 0, "sale_price": 7995, "discount": 0, "brand": "Nike", "description": "The NikeCourt Air Max Wildcard delivers the comfort you need to hit hard and move fast on the court. A Max Air unit under your heel cushions every step, while an innovative Lunarlon midsole gives you a springy underfoot sensation and extra stability.", "rating": "4.5", "reviews": "2"}, {"product_name": "Nike Air Max 98", "product_id": "CI3709-001", "listing_price": 0, "sale_price": 16995, "discount": 0, "brand": "Nike", "description": "The Nike Air Max 98 brings back retro Air Max style with contemporary comfort innovations. A full-length Max Air unit gives total cushioning in every step.", "rating": "4", "reviews": "1"}, {"product_name": "Nike SB Zoom Stefan Janoski Mid RM", "product_id": "AT7324-001", "listing_price": 7995, "sale_price": 6397, "discount": 0, "brand": "Nike", "description": "The Nike SB Zoom Stefan Janoski Mid RM pairs a minimal look with a modern fit. It has been updated with a new, plush sockliner and a flexible midsole for better boardfeel right out of the box.", "rating": "5", "reviews": "1"}, {"product_name": "NikeCourt Air Zoom Zero", "product_id": "AA8022-107", "listing_price": 0, "sale_price": 11995, "discount": 0, "brand": "Nike", "description": "Featuring the first full-length Zoom Air unit in NikeCourt history, the NikeCourt Air Zoom Zero delivers exceptional responsiveness and great court feel. Its fabric and synthetic upper with a customisable lacing system offers second-skin-like comfort.", "rating": "3.8", "reviews": "4"}, {"product_name": "Nike M2K Tekno", "product_id": "AO3108-018", "listing_price": 0, "sale_price": 8995, "discount": 0, "brand": "Nike", "description": "The Nike M2K Tekno draws inspiration from the Monarch franchise and pushes it into the future with space-age detailing. Its layered upper mimics the design of the OG Monarch, while the chunky outsole draws on the beloved Monarch IV.", "rating": "4", "reviews": "13"}, {"product_name": "PG 3", "product_id": "AO2607-401", "listing_price": 8995, "sale_price": 7197, "discount": 0, "brand": "Nike", "description": "Paul George's moon shot took him from Palmdale to basketball stardom, and now he's heading to new heights with clouds under his feet. Built on an outsole inspired by moon craters, the PG 3 combines sensational traction with responsive Zoom Air cushioning that helps you move seamlessly between offence and defence.", "rating": "4", "reviews": "19"}, {"product_name": "Air Jordan 5 Retro", "product_id": "CN2932-100", "listing_price": 0, "sale_price": 18995, "discount": 0, "brand": "Nike", "description": "The Air Jordan 5 Retro brings back the original that was inspired by WWII fighter planes, featuring a mid-top profile and synthetic leather. An inner-sleeve creates a snug, comfortable feel.", "rating": "4.6", "reviews": "8"}, {"product_name": "Nike Air Max Dia NRG", "product_id": "CQ2503-900", "listing_price": 10995, "sale_price": 7697, "discount": 0, "brand": "Nike", "description": "Crisp and clean with the perfect amount of lift, the Nike Air Max Dia is designed to elevate her every day. The minimal upper features no-sew skins and breathable mesh for an airiness that matches the swirled iridescent patterns. Boosting style and comfort, the Max Air unit underfoot joins with the super-soft foam midsole.", "rating": "4.3", "reviews": "3"}, {"product_name": "Nike Mercurial Vapor 13 Elite FG", "product_id": "AQ4176-049", "listing_price": 0, "sale_price": 21995, "discount": 0, "brand": "Nike", "description": "Building on the 360-degree Flyknit innovation of the 12, the Nike Mercurial Vapor 13 Elite FG adds a Nike Aerowtrac zone to the forefoot and a slightly stiffer chassis to help supercharge traction. Inside, an insole with NikeGrip technology provides maximum interior traction underfoot and lightweight cushioning.", "rating": "3.5", "reviews": "4"}, {"product_name": "Nike Air Max 720", "product_id": "AR9293-603", "listing_price": 15995, "sale_price": 9597, "discount": 0, "brand": "Nike", "description": "The Nike Air Max 720 goes bigger than ever before with Nike's tallest Air unit yet, which offers more air underfoot for unimaginable, all-day comfort. Has Air Max gone too far? We hope so.", "rating": "4.9", "reviews": "18"}, {"product_name": "Nike Zoom KD12", "product_id": "AR4229-003", "listing_price": 0, "sale_price": 12995, "discount": 0, "brand": "Nike", "description": "Kevin Durant always looks relaxed\u00e2\u20ac\u201duntil he attacks. His game is reserved yet explosive, difficult to guard and impossible to stop. The KD12 was built for his dominance and endless energy all game long, with the latest innovation in Nike Zoom Air technology.", "rating": "4.6", "reviews": "18"}, {"product_name": "Air Jordan 7 Retro", "product_id": "313358-006", "listing_price": 15995, "sale_price": 11197, "discount": 0, "brand": "Nike", "description": "The Air Jordan 7 Retro celebrates MJ's championship legacy with a reissue of his 7th game shoe, the one he famously wore to gold-medal glory.", "rating": "4.8", "reviews": "4"}, {"product_name": "Nike Mercurial Superfly 7 Academy IC", "product_id": "AT7975-606", "listing_price": 0, "sale_price": 8495, "discount": 0, "brand": "Nike", "description": "The soft upper of the Nike Mercurial Superfly 7 Academy IC wraps your foot for a second-skin fit, while the rubber outsole helps supercharge traction on the court or street.", "rating": "5", "reviews": "1"}, {"product_name": "Nike Air Zoom Pegasus 36 FlyEase", "product_id": "BV0614-005", "listing_price": 9995, "sale_price": 7997, "discount": 0, "brand": "Nike", "description": "The Nike Air Zoom Pegasus 36 FlyEase maintains everything you love about the Pegasus and adds a zip for effortless on and off. The no-tie lacing system adjusts easily for a secure feel as you tackle your miles.", "rating": "3", "reviews": "4"}, {"product_name": "Nike P-6000 Icon Clash", "product_id": "BV1021-007", "listing_price": 7995, "sale_price": 5597, "discount": 0, "brand": "Nike", "description": "A mash-up of Pegasus' past, the Nike P-6000 Icon Clash features breathable mesh with horizontal and vertical overlays for a 2000s running look that is as striking as, say, a majestic winged horse. Drawing on the design of the Nike Pegasus 25 and 2006, its running aesthetic meets all-day comfort for the streets.", "rating": "4.7", "reviews": "10"}, {"product_name": "Nike Mercurial Superfly 7 Elite FG", "product_id": "AQ4174-049", "listing_price": 0, "sale_price": 22995, "discount": 0, "brand": "Nike", "description": "Building on the 360 innovation of the 6, the Nike Mercurial Superfly 7 Elite FG Boot adds a Nike Aerowtrac zone to the forefoot and a slightly stiffer chassis to help supercharge traction.", "rating": "4.3", "reviews": "8"}, {"product_name": "Nike Air Max 95 Premium", "product_id": "807443-503", "listing_price": 16995, "sale_price": 13597, "discount": 0, "brand": "Nike", "description": "The Nike Air Max 95 Premium retains its iconic look, but is sleeker, lighter and geared for 24/7 comfort and style. It features inspiration from the human body itself. The midsole represents the spine, graduated panels are the muscles, the lace loops are the shoe's ribs and the fabric tongue is its skin.", "rating": "3.7", "reviews": "3"}, {"product_name": "Nike Pre-Love O.X.", "product_id": "AO3166-300", "listing_price": 0, "sale_price": 7495, "discount": 0, "brand": "Nike", "description": "The Nike Pre-Love O.X. Women's Shoe features a running-inspired profile and lightweight foam cushioning for all-day comfort.", "rating": "5", "reviews": "3"}, {"product_name": "Nike Mercurial Superfly 7 Academy MG", "product_id": "AT7946-414", "listing_price": 0, "sale_price": 8495, "discount": 0, "brand": "Nike", "description": "Building on the forefoot plate innovation of the 6, the Nike Mercurial Superfly 7 Academy MG Boot adds a versatile multi-ground plate that provides traction on natural- and artificial-grass surfaces.", "rating": "5", "reviews": "2"}, {"product_name": "Nike Air Force 1 '07 SE", "product_id": "CI3446-001", "listing_price": 0, "sale_price": 7995, "discount": 0, "brand": "Nike", "description": "The Nike Air Force 1 '07 SE incorporates the same hoops-inspired performance features of the 1982 original while adding details that call to mind the 2000s aesthetic.", "rating": "5", "reviews": "1"}, {"product_name": "Nike Zoom Pegasus Turbo XX", "product_id": "AR4347-600", "listing_price": 16995, "sale_price": 13597, "discount": 0, "brand": "Nike", "description": "Bridging performance and style, the Nike Zoom Pegasus Turbo XX Women's Running Shoe combines a full-length ZoomX midsole with an upper re-imagined exclusively for women. This feather-light translucent upper pops with a racing-stripe print that looks as fast as it feels, while Nike ZoomX foam delivers revolutionary responsiveness. A transparent, soft TPU overlay wraps your midfoot for the fit you need.", "rating": "1", "reviews": "1"}, {"product_name": "Nike React Metcon", "product_id": "BQ6044-100", "listing_price": 0, "sale_price": 12995, "discount": 0, "brand": "Nike", "description": "The Nike React Metcon takes the stability and traction from the training original and pairs it with Nike's most comfortable cushioning. Tackle high-impact and lifting workouts with a light, breathable upper and durable grip to keep you going.", "rating": "3.9", "reviews": "10"}, {"product_name": "Nike Zoom Pegasus Turbo 2 Special Edition", "product_id": "BV7757-500", "listing_price": 15995, "sale_price": 12797, "discount": 0, "brand": "Nike", "description": "The Nike Zoom Pegasus Turbo 2 is updated with a featherlight upper, while energy-returning foam brings revolutionary responsiveness to your long-distance training.", "rating": "5", "reviews": "1"}, {"product_name": "Nike Metcon 5 AMP", "product_id": "CN5455-160", "listing_price": 0, "sale_price": 11995, "discount": 0, "brand": "Nike", "description": "The Nike Metcon 5 AMP arms you with stability for heavy lifting and traction for sprints during high-impact training. It combines breathability and durability to be your secret weapon in the gym.", "rating": "4.5", "reviews": "2"}, {"product_name": "Air Jordan 5 Retro", "product_id": "CD2722-001", "listing_price": 0, "sale_price": 15995, "discount": 0, "brand": "Nike", "description": "The Air Jordan 5 Retro for women gives a colourful makeover to one of MJ's most memorable game shoes. Featuring iconic fighter plane-inspired midsole sculpting and moulded lace toggle, this version flashes an all-over reflective rainbow print for some bold colour and energy.", "rating": "3.3", "reviews": "3"}, {"product_name": "Nike ZoomX Vaporfly NEXT%", "product_id": "AO4568-600", "listing_price": 0, "sale_price": 19995, "discount": 0, "brand": "Nike", "description": "The Nike ZoomX Vaporfly NEXT% clears your path to record-breaking speed with a lighter design and faster feel than before. With more cushioning underfoot and reduced weight up top, the result is unprecedented energy return and comfort.", "rating": "4.7", "reviews": "45"}, {"product_name": "Kyrie 6 'Enlightenment'", "product_id": "BQ4630-500", "listing_price": 10995, "sale_price": 8797, "discount": 0, "brand": "Nike", "description": "In spiritual circles, the colour purple represents enlightenment. It speaks to being fully connected to your spiritual mind by tapping into an inner source of potential that was otherwise undiscovered. The Kyrie 6 'Enlightenment' plays up the unseen spirituality theme with an all-seeing eye graphic on the side of the upper and a purple colour scheme.", "rating": "4.4", "reviews": "10"}, {"product_name": "Nike React Metcon AMP", "product_id": "CT9155-063", "listing_price": 0, "sale_price": 13995, "discount": 0, "brand": "Nike", "description": "The Nike React Metcon AMP takes the stability and traction from the original and pairs it with React foam, Nike's most comfortable cushioning. It feels soft and springy with a breathable upper, but it's still stable enough to tackle lifting and high-impact workouts. A glow-in-the-dark rubber sole climbs up the side of the shoe for durability and extra grip during rope climbs.", "rating": "3", "reviews": "1"}, {"product_name": "Air Jordan 8 Retro", "product_id": "CI1236-100", "listing_price": 15995, "sale_price": 12797, "discount": 0, "brand": "Nike", "description": "The Air Jordan 8 Retro recaptures the memorable look of the '93 release. It's made from real and synthetic leather and has the same distinct and daring design that made the original such a '90s favourite.", "rating": "5", "reviews": "1"}, {"product_name": "Nike Mercurial Superfly 7 Academy TF", "product_id": "AT7978-414", "listing_price": 8495, "sale_price": 5947, "discount": 0, "brand": "Nike", "description": "The soft upper of the Nike Mercurial Superfly 7 Academy TF Shoe wraps your foot for a second-skin fit, while the rubber outsole helps supercharge traction on turf.", "rating": "5", "reviews": "1"}, {"product_name": "Nike Air Max 98", "product_id": "AH6799-300", "listing_price": 0, "sale_price": 16995, "discount": 0, "brand": "Nike", "description": "The Nike Air Max 98 features the OG design lines that were inspired by the walls of the Grand Canyon while adding bursts of fresh colour to the upper. The fluid, textured look and full-length Nike Air cushioning set you apart from the pack.", "rating": "4", "reviews": "4"}], "stage_runningstate": "executed", "datacache": 0, "originalcount": 414, "samplecount": 414, "samplefile": "/FileStore/platform/sampleData/66ae0e8917c733036b10f54e/part-00000-8f46f37b-7b4e-4437-846f-b1e1b04c7905-c000.csv", "after_run": {"baseType": "hdfs", "notify": "True", "pipeline_type": "simple", "retrain": "0", "schedule": "0", "scheduleInfo": "{}"}}, {"_id": "66ae0e8917c733036b10f54f", "mode": "staged", "originalfile": "/FileStore/platform/uploadedSourceFiles/Nike_Pro.csv", "in": ["66ae0e8917c733036b10f54e"], "out": ["66ae0e8917c733036b10f550"], "is_streaming": false, "valid": false, "is_predefined": false, "cache": false, "name": "Nike_AutoFE", "dataPercentage": "10", "comment": "", "pipeline_id": "66ae0e8917c733036b10f54b", "sub_type": "Feature", "stage_type": "transformation", "stage_attributes": {"AutoFE": {"autoFE_flag": true, "dataPercentage": "10", "sampledata": [{"product_name": "Nike Free Metcon 3", "product_id": "CJ0861-017", "listing_price": 0, "sale_price": 9995, "discount": 0, "brand": "Nike", "description": "The Nike Free Metcon 3 combines Nike Free flexibility around the forefoot with Metcon stability in the heel to help you get the most out of your training session.", "rating": "5", "reviews": "1", "product_name_stringindexer_transform": 44.0, "product_id_stringindexer_transform": 201.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 64.0, "rating_stringindexer_transform": 0.0, "reviews_stringindexer_transform": 0.0}, {"product_name": "Nike Zoom Pegasus Turbo 2", "product_id": "AT8242-009", "listing_price": 0, "sale_price": 15995, "discount": 0, "brand": "Nike", "description": "The Nike Zoom Pegasus Turbo 2 is updated with a feather-light upper, while innovative foam brings revolutionary responsiveness to your long-distance training.", "rating": "2.7", "reviews": "14", "product_name_stringindexer_transform": 5.0, "product_id_stringindexer_transform": 176.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 5.0, "rating_stringindexer_transform": 18.0, "reviews_stringindexer_transform": 20.0}, {"product_name": "Nike Air Max 270 React ENG", "product_id": "CK2595-500", "listing_price": 0, "sale_price": 14995, "discount": 0, "brand": "Nike", "description": "The Nike Air Max 270 React ENG combines a full-length React foam midsole with a 270 Max Air unit for unrivalled comfort and a striking visual experience.", "rating": "5", "reviews": "2", "product_name_stringindexer_transform": 68.0, "product_id_stringindexer_transform": 173.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 56.0, "rating_stringindexer_transform": 0.0, "reviews_stringindexer_transform": 1.0}, {"product_name": "Nike Air Max 90", "product_id": "CD0490-104", "listing_price": 0, "sale_price": 9995, "discount": 0, "brand": "Nike", "description": "Clean lines, versatile and timeless\u00e2\u20ac\u201dthe people's shoe returns with the Nike Air Max 90. Featuring the same iconic Waffle sole, stitched overlays and classic TPU accents you've come to love, it lets you walk among the pantheon of Air.", "rating": "5", "reviews": "9", "product_name_stringindexer_transform": 0.0, "product_id_stringindexer_transform": 120.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 3.0, "rating_stringindexer_transform": 0.0, "reviews_stringindexer_transform": 12.0}, {"product_name": "Nike Air Force 1 '07", "product_id": "315115-112", "listing_price": 0, "sale_price": 7495, "discount": 0, "brand": "Nike", "description": "The radiance lives on in the Nike Air Force 1 '07, the b-ball OG that puts a fresh spin on what you know best: crisp leather in an all-white colourway for a statement look on and off the court.", "rating": "4.5", "reviews": "67", "product_name_stringindexer_transform": 106.0, "product_id_stringindexer_transform": 224.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 108.0, "rating_stringindexer_transform": 1.0, "reviews_stringindexer_transform": 33.0}, {"product_name": "Nike Air VaporMax Flyknit 3", "product_id": "AJ6910-009", "listing_price": 0, "sale_price": 16995, "discount": 0, "brand": "Nike", "description": "Be bouncy and buoyant in the Nike Air VaporMax Flyknit 3. Inspired by high fashion, the upper features flowing lines of breathable, stretchable Flyknit construction. Revolutionary VaporMax Air technology keeps a spring in your step with toe-to-heel cushioning.", "rating": "4.4", "reviews": "48", "product_name_stringindexer_transform": 61.0, "product_id_stringindexer_transform": 275.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 201.0, "rating_stringindexer_transform": 3.0, "reviews_stringindexer_transform": 43.0}, {"product_name": "Nike Air Zoom SuperRep", "product_id": "BQ7043-668", "listing_price": 0, "sale_price": 9995, "discount": 0, "brand": "Nike", "description": "The Nike Air Zoom SuperRep is designed for circuit training, HIIT, short runs and other fast-paced exercise. Zoom Air cushioning in the forefoot combines with a wide, stable heel to keep you moving and lifting comfortably.", "rating": "4.4", "reviews": "34", "product_name_stringindexer_transform": 22.0, "product_id_stringindexer_transform": 263.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 25.0, "rating_stringindexer_transform": 3.0, "reviews_stringindexer_transform": 13.0}, {"product_name": "Nike Air Max 97", "product_id": "921733-104", "listing_price": 0, "sale_price": 16995, "discount": 0, "brand": "Nike", "description": "The Nike Air Max 97 keeps a sneaker icon going strong with the same design details that made it famous: water-ripple lines, reflective piping and full-length Max Air cushioning.", "rating": "4.3", "reviews": "16", "product_name_stringindexer_transform": 1.0, "product_id_stringindexer_transform": 168.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 170.0, "rating_stringindexer_transform": 4.0, "reviews_stringindexer_transform": 29.0}, {"product_name": "Nike SB Bruin High", "product_id": "923112-001", "listing_price": 7995, "sale_price": 5597, "discount": 0, "brand": "Nike", "description": "The first Nike SB shoe designed specifically for women, the Nike SB Bruin High is built for exceptional comfort and board control. With classic Bruin design lines and details, this is a fresh take on a time-honoured shoe.", "rating": "4.2", "reviews": "6", "product_name_stringindexer_transform": 59.0, "product_id_stringindexer_transform": 45.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 42.0, "rating_stringindexer_transform": 5.0, "reviews_stringindexer_transform": 5.0}, {"product_name": "Air Jordan XXXIV PF", "product_id": "BQ3381-600", "listing_price": 0, "sale_price": 14995, "discount": 0, "brand": "Nike", "description": "The Air Jordan XXXIV PF continues the legacy of a cultural icon. Light, responsive and sculpted with aerodynamic precision, it combines a boldly unconventional midsole with herringbone traction to merge innovative and iconic design elements.", "rating": "5", "reviews": "2", "product_name_stringindexer_transform": 103.0, "product_id_stringindexer_transform": 42.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 19.0, "rating_stringindexer_transform": 0.0, "reviews_stringindexer_transform": 1.0}, {"product_name": "Nike Metcon 5", "product_id": "AO2982-076", "listing_price": 0, "sale_price": 10995, "discount": 0, "brand": "Nike", "description": "The Nike Metcon 5 is the most tuned Metcon yet. This means specific stability for heavy lifting, traction made for speed and durability where you need it. It even includes a Hyperlift insert that's compatible with all prior versions of the Metcon. Meet your secret weapon for weight-lifting and high-impact training.", "rating": "4.4", "reviews": "22", "product_name_stringindexer_transform": 7.0, "product_id_stringindexer_transform": 170.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 198.0, "rating_stringindexer_transform": 3.0, "reviews_stringindexer_transform": 38.0}, {"product_name": "Nike Joyride Run Flyknit", "product_id": "AQ2730-009", "listing_price": 0, "sale_price": 14995, "discount": 0, "brand": "Nike", "description": "The Nike Joyride Run Flyknit is designed to help make running feel easier and give your legs a day off. Tiny foam beads underfoot contour to your foot for cushioning that stands up to your mileage.", "rating": "4", "reviews": "65", "product_name_stringindexer_transform": 50.0, "product_id_stringindexer_transform": 276.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 34.0, "rating_stringindexer_transform": 2.0, "reviews_stringindexer_transform": 45.0}, {"product_name": "Nike Air VaporMax 360", "product_id": "CK9671-001", "listing_price": 0, "sale_price": 18995, "discount": 0, "brand": "Nike", "description": "Inspired by heritage running shoes like the 2006 Air Max 360, the Nike Air VaporMax 360 re-imagines full-length Air with its lighter, more flexible design. The full-length foam midsole adds to the comfort while bold colours create a fresh, modern look.", "rating": "4", "reviews": "1", "product_name_stringindexer_transform": 9.0, "product_id_stringindexer_transform": 61.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 190.0, "rating_stringindexer_transform": 2.0, "reviews_stringindexer_transform": 0.0}, {"product_name": "Nike Offcourt", "product_id": "BQ4632-602", "listing_price": 0, "sale_price": 2495, "discount": 0, "brand": "Nike", "description": "Featuring Revive Foam, a super-soft foam designed to help you relax and recharge, the unrelenting comfort of the Nike Offcourt Slide is sensational. The innovative dual-layered foam and soft jersey lining on the strap ensure a gratifying full-foot experience. The iconic Air Force 1 pivot circle outsole and block lettering on the strap casually nod to heritage hoops.", "rating": "4.3", "reviews": "4", "product_name_stringindexer_transform": 195.0, "product_id_stringindexer_transform": 86.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 72.0, "rating_stringindexer_transform": 4.0, "reviews_stringindexer_transform": 4.0}, {"product_name": "Jordan Break", "product_id": "AR6374-402", "listing_price": 0, "sale_price": 1995, "discount": 0, "brand": "Nike", "description": "Featuring a fixed strap over the top of the foot, the Jordan Break Slide features durable synthetic leather and lightweight foam cushioning for underfoot comfort.", "rating": "4.2", "reviews": "5", "product_name_stringindexer_transform": 227.0, "product_id_stringindexer_transform": 246.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 229.0, "rating_stringindexer_transform": 5.0, "reviews_stringindexer_transform": 3.0}, {"product_name": "LeBron 7 QS", "product_id": "CU5646-001", "listing_price": 0, "sale_price": 16995, "discount": 0, "brand": "Nike", "description": "Make your head-turning journey to the top comfortable. Built strong and sleek, the LeBron 7 QS features a mix of materials on the upper for a look that lasts. Metal accents and multiple LeBron crests celebrate a king, while full-length cushioning graces your every step.", "rating": "5", "reviews": "1", "product_name_stringindexer_transform": 177.0, "product_id_stringindexer_transform": 141.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 325.0, "rating_stringindexer_transform": 0.0, "reviews_stringindexer_transform": 0.0}, {"product_name": "Nike In-Season TR 9", "product_id": "AR4543-013", "listing_price": 0, "sale_price": 5995, "discount": 0, "brand": "Nike", "description": "The Nike In-Season TR 9 is light, stable and features deep, comfortable footbed for superior impact absorption and energy return throughout your entire workout.", "rating": "4.9", "reviews": "7", "product_name_stringindexer_transform": 201.0, "product_id_stringindexer_transform": 218.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 280.0, "rating_stringindexer_transform": 19.0, "reviews_stringindexer_transform": 10.0}, {"product_name": "Nike Air Force 1 '07 LV8", "product_id": "CD0888-002", "listing_price": 0, "sale_price": 7595, "discount": 0, "brand": "Nike", "description": "The Nike Air Force 1 '07 LV8 incorporates the same hoops-inspired performance features of the 1982 original while adding fresh design details for an updated look.", "rating": "5", "reviews": "3", "product_name_stringindexer_transform": 10.0, "product_id_stringindexer_transform": 98.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 109.0, "rating_stringindexer_transform": 0.0, "reviews_stringindexer_transform": 2.0}, {"product_name": "Nike Air Max Dia", "product_id": "CJ0636-100", "listing_price": 0, "sale_price": 8995, "discount": 0, "brand": "Nike", "description": "Designed specifically for a woman's foot, the Nike Air Max Dia delivers a lifted look and airy aesthetic. The minimal upper modernises the silhouette, while the Max Air unit is amplified even further by an exaggerated midsole for a boost of style.", "rating": "1", "reviews": "1", "product_name_stringindexer_transform": 97.0, "product_id_stringindexer_transform": 360.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 227.0, "rating_stringindexer_transform": 16.0, "reviews_stringindexer_transform": 0.0}, {"product_name": "Air Jordan 1 Mid SE", "product_id": "852542-087", "listing_price": 0, "sale_price": 9995, "discount": 0, "brand": "Nike", "description": "The Air Jordan 1 Mid SE maintains the timeless appeal of the OG AJ1, revamped with fresh colours and premium materials. Built with a lightweight Air-Sole unit and classic design lines, it captures the essence of the original through a modern lens.", "rating": "4.8", "reviews": "13", "product_name_stringindexer_transform": 250.0, "product_id_stringindexer_transform": 92.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 187.0, "rating_stringindexer_transform": 6.0, "reviews_stringindexer_transform": 15.0}, {"product_name": "Nike Daybreak", "product_id": "CK2351-601", "listing_price": 0, "sale_price": 7995, "discount": 0, "brand": "Nike", "description": "Originally released in 1979, the Nike Daybreak is a blast from the past. Featuring the same rubber Waffle outsole and nylon upper, it gives you true vintage style.", "rating": "4.9", "reviews": "7", "product_name_stringindexer_transform": 186.0, "product_id_stringindexer_transform": 312.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 182.0, "rating_stringindexer_transform": 19.0, "reviews_stringindexer_transform": 10.0}, {"product_name": "Nike SB Shane", "product_id": "BV0657-400", "listing_price": 0, "sale_price": 6495, "discount": 0, "brand": "Nike", "description": "Shane O'Neill put the same attention to detail into every aspect of his signature shoe as he does in his almost otherworldly skating. From the low-key perforated ventilation at the toe, to the double lacing option and the no-break-in remastered sole, the Nike SB Shane gets all the details right.", "rating": "4.7", "reviews": "3", "product_name_stringindexer_transform": 20.0, "product_id_stringindexer_transform": 35.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 41.0, "rating_stringindexer_transform": 11.0, "reviews_stringindexer_transform": 2.0}, {"product_name": "Air Jordan 1 Mid", "product_id": "554724-066", "listing_price": 0, "sale_price": 9995, "discount": 0, "brand": "Nike", "description": "The Air Jordan 1 Mid Shoe is inspired by the first AJ1, offering OG fans a look at how far the Jordan brand has come since 1985.", "rating": "4.5", "reviews": "61", "product_name_stringindexer_transform": 155.0, "product_id_stringindexer_transform": 253.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 243.0, "rating_stringindexer_transform": 1.0, "reviews_stringindexer_transform": 28.0}, {"product_name": "Jordan 'Why Not?' Zer0.3 PF", "product_id": "CD3002-103", "listing_price": 0, "sale_price": 10995, "discount": 0, "brand": "Nike", "description": "\"One of the game's fiercest competitors, triple-double dynamo Russell Westbrook has the motor, muscle and mentality to match his fearlessness\u00e2\u20ac\u201dwith the stats to back it up. Built to hold up on outdoor courts, the Jordan \"\"Why Not?\"\" Zer0.3 PF is fine-tuned for players like Russ", "rating": " who beat opponents with linear speed and aggressiveness.\"", "reviews": "5", "product_name_stringindexer_transform": 265.0, "product_id_stringindexer_transform": 160.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 122.0, "rating_stringindexer_transform": 29.0, "reviews_stringindexer_transform": 3.0}, {"product_name": "Nike Air Zoom SuperRep", "product_id": "CD3460-010", "listing_price": 0, "sale_price": 9995, "discount": 0, "brand": "Nike", "description": "The Nike Air Zoom SuperRep is designed for circuit training, HIIT, short runs and other fast-paced exercise. Zoom Air cushioning in the forefoot combines with a wide, stable heel to keep you moving and lifting comfortably.", "rating": "4.5", "reviews": "31", "product_name_stringindexer_transform": 22.0, "product_id_stringindexer_transform": 169.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 25.0, "rating_stringindexer_transform": 1.0, "reviews_stringindexer_transform": 21.0}, {"product_name": "Nike Metcon 5 AMP", "product_id": "CD3395-006", "listing_price": 0, "sale_price": 11995, "discount": 0, "brand": "Nike", "description": "The Nike Metcon 5 AMP arms you with stability for heavy lifting and traction for sprints during high-impact training. It combines breathability and durability to be your secret weapon in the gym.", "rating": "5", "reviews": "2", "product_name_stringindexer_transform": 4.0, "product_id_stringindexer_transform": 33.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 1.0, "rating_stringindexer_transform": 0.0, "reviews_stringindexer_transform": 1.0}, {"product_name": "Nike Air Max 97", "product_id": "CI3708-700", "listing_price": 0, "sale_price": 14995, "discount": 0, "brand": "Nike", "description": "The Air Max 97 shook up the running world with its revolutionary full-length Nike Air unit. The Nike Air Max 97 remasters the original design with bold new colours and flashes of gold.", "rating": "5", "reviews": "1", "product_name_stringindexer_transform": 1.0, "product_id_stringindexer_transform": 154.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 278.0, "rating_stringindexer_transform": 0.0, "reviews_stringindexer_transform": 0.0}, {"product_name": "LeBron 17 Low", "product_id": "CD5007-102", "listing_price": 0, "sale_price": 13995, "discount": 0, "brand": "Nike", "description": "Fine-tuned with LeBron's ferocious game in mind, the LeBron 17 Low has a sleek, low-top design that features a powerful combination of impact-ready cushioning and responsiveness.", "rating": "3", "reviews": "2", "product_name_stringindexer_transform": 136.0, "product_id_stringindexer_transform": 338.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 319.0, "rating_stringindexer_transform": 10.0, "reviews_stringindexer_transform": 1.0}, {"product_name": "Nike Renew Fusion", "product_id": "CD0200-003", "listing_price": 0, "sale_price": 6995, "discount": 0, "brand": "Nike", "description": "The Nike Renew Fusion blends stability, cushioning and durability for high-impact training sessions. A foam sole cushions heavy-weight, high-paced activities, while a midfoot cage locks your foot down to a flat, wide base for stability.", "rating": "5", "reviews": "1", "product_name_stringindexer_transform": 119.0, "product_id_stringindexer_transform": 119.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 189.0, "rating_stringindexer_transform": 0.0, "reviews_stringindexer_transform": 0.0}, {"product_name": "LeBron 17", "product_id": "BQ3177-100", "listing_price": 0, "sale_price": 16995, "discount": 0, "brand": "Nike", "description": "The LeBron 17 harnesses LeBron's strength and speed with containment and support for all-court domination. It features a lightweight mix of knit and heat-moulded yarns that gives each one a durable look and feel. Combined cushioning provides LeBron with the impact support and responsive energy return he needs to power through the long season.", "rating": "4.5", "reviews": "47", "product_name_stringindexer_transform": 87.0, "product_id_stringindexer_transform": 41.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 48.0, "rating_stringindexer_transform": 1.0, "reviews_stringindexer_transform": 30.0}, {"product_name": "Nike Air Max 90 Premium", "product_id": "CQ0912-100", "listing_price": 0, "sale_price": 11995, "discount": 0, "brand": "Nike", "description": "\"The Nike Air Max 90 Premium is built in honour of celebrated Parisian bakers who define French cuisine and hard work. Nike Air cushioning under your feet feels softer than freshly baked brioche while a durable upper features a French flag and baking champion's wheat laurel on opposite heels. \"\"Fresh baked daily\"\" is written on the liner", "rating": " nodding to those who feed the city of style.\"", "reviews": "5", "product_name_stringindexer_transform": 83.0, "product_id_stringindexer_transform": 76.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 306.0, "rating_stringindexer_transform": 35.0, "reviews_stringindexer_transform": 3.0}, {"product_name": "Nike Epic Phantom React A.I.R. Cody Hudson", "product_id": "CI1718-001", "listing_price": 13995, "sale_price": 8397, "discount": 0, "brand": "Nike", "description": "\"Soft to the touch, the Nike Epic Phantom React A.I.R. lets go of laces for slip-on style that has you up and running in no time. A sock-like fit within breathable Flyknit feels as though the Phantom \"\"disappears\"\" as you run", "rating": " while a polka-dotted upper gets you noticed.\"", "reviews": "5", "product_name_stringindexer_transform": 121.0, "product_id_stringindexer_transform": 291.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 100.0, "rating_stringindexer_transform": 36.0, "reviews_stringindexer_transform": 3.0}, {"product_name": "Nike Air Max 90", "product_id": "CD0490-101", "listing_price": 0, "sale_price": 9995, "discount": 0, "brand": "Nike", "description": "Clean lines, versatile and timeless\u00e2\u20ac\u201dthe people's shoe returns with the Nike Air Max 90. Featuring the same iconic Waffle sole, stitched overlays and classic TPU accents you've come to love, it lets you walk among the pantheon of Air.", "rating": "5", "reviews": "9", "product_name_stringindexer_transform": 0.0, "product_id_stringindexer_transform": 202.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 3.0, "rating_stringindexer_transform": 0.0, "reviews_stringindexer_transform": 12.0}, {"product_name": "Nike Zoom Gravity", "product_id": "BQ3202-011", "listing_price": 0, "sale_price": 7995, "discount": 0, "brand": "Nike", "description": "Designed to make fast go faster, the Nike Zoom Gravity is built to take you from quick tempo runs to winning races. Snappy forefoot propulsion and grippy, multi-surface traction combine to maximize your stride.", "rating": "3.1", "reviews": "8", "product_name_stringindexer_transform": 42.0, "product_id_stringindexer_transform": 150.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 289.0, "rating_stringindexer_transform": 21.0, "reviews_stringindexer_transform": 7.0}, {"product_name": "Nike Air Max 270 React ENG", "product_id": "CD0113-400", "listing_price": 0, "sale_price": 14995, "discount": 0, "brand": "Nike", "description": "The Nike Air Max 270 React ENG combines a full-length React foam midsole with a 270 Max Air unit for unrivalled comfort and a striking visual experience.", "rating": "5", "reviews": "1", "product_name_stringindexer_transform": 68.0, "product_id_stringindexer_transform": 127.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 56.0, "rating_stringindexer_transform": 0.0, "reviews_stringindexer_transform": 0.0}, {"product_name": "Nike Air Max 270 React", "product_id": "AO4971-700", "listing_price": 12995, "sale_price": 7797, "discount": 0, "brand": "Nike", "description": "The bold silhouette of Nike Air lifts the Nike Air Max 270 React to new heights, while the Nike React foam midsole delivers exceptional cushioning. Imagine all-day comfort with unstoppable style.", "rating": "3.9", "reviews": "33", "product_name_stringindexer_transform": 3.0, "product_id_stringindexer_transform": 56.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 33.0, "rating_stringindexer_transform": 12.0, "reviews_stringindexer_transform": 26.0}, {"product_name": "Nike React Presto", "product_id": "AV2605-101", "listing_price": 9995, "sale_price": 5997, "discount": 0, "brand": "Nike", "description": "Inspired by the early 2000s original, the Nike React Presto puts an exaggerated spin on an unconventional icon. Nike React foam delivers an expressive look with a lightweight, bouncy feel and a whole lot of personality.", "rating": "3.7", "reviews": "27", "product_name_stringindexer_transform": 143.0, "product_id_stringindexer_transform": 268.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 131.0, "rating_stringindexer_transform": 8.0, "reviews_stringindexer_transform": 31.0}, {"product_name": "Nike Legend React", "product_id": "AA1625-009", "listing_price": 0, "sale_price": 8795, "discount": 0, "brand": "Nike", "description": "The Nike Legend React Men's Running Shoe features a breathable upper with synthetic overlays that enhance durability while smooth, responsive foam cushions every step as you run.", "rating": "4.2", "reviews": "9", "product_name_stringindexer_transform": 29.0, "product_id_stringindexer_transform": 105.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 186.0, "rating_stringindexer_transform": 5.0, "reviews_stringindexer_transform": 12.0}, {"product_name": "NikeCourt Air Max Wildcard", "product_id": "AO7351-104", "listing_price": 0, "sale_price": 7995, "discount": 0, "brand": "Nike", "description": "The NikeCourt Air Max Wildcard delivers the comfort you need to hit hard and move fast on the court. A Max Air unit under your heel cushions every step, while an innovative Lunarlon midsole provides a springy underfoot sensation and extra stability.", "rating": "2.7", "reviews": "3", "product_name_stringindexer_transform": 111.0, "product_id_stringindexer_transform": 300.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 152.0, "rating_stringindexer_transform": 18.0, "reviews_stringindexer_transform": 2.0}, {"product_name": "Nike Free Metcon 3", "product_id": "CJ0861-010", "listing_price": 0, "sale_price": 9995, "discount": 0, "brand": "Nike", "description": "The Nike Free Metcon 3 combines Nike Free flexibility around the forefoot with Metcon stability in the heel to help you get the most out of your training session.", "rating": "5", "reviews": "1", "product_name_stringindexer_transform": 44.0, "product_id_stringindexer_transform": 329.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 64.0, "rating_stringindexer_transform": 0.0, "reviews_stringindexer_transform": 0.0}, {"product_name": "Nike SB Air Max Stefan Janoski 2", "product_id": "AQ7477-009", "listing_price": 0, "sale_price": 9995, "discount": 0, "brand": "Nike", "description": "The Nike SB Air Max Stefan Janoski 2 hugs your foot with a breathable textile upper. A Max Air unit in the heel cushions every step, while a flat rubber outsole optimises grip when you're on your board.", "rating": "2.6", "reviews": "11", "product_name_stringindexer_transform": 57.0, "product_id_stringindexer_transform": 26.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 67.0, "rating_stringindexer_transform": 23.0, "reviews_stringindexer_transform": 11.0}, {"product_name": "Nike Free RN Flyknit 3.0", "product_id": "AQ5707-001", "listing_price": 10995, "sale_price": 7697, "discount": 0, "brand": "Nike", "description": "Ideal for runs up to 3 miles, the Nike Free RN Flyknit 3.0 delivers a lace-free design so you can slip in and hit your stride. An updated flex groove pattern and modified midsole foam provides more flexibility than its predecessor, creating a barefoot sensation with every step. A mix of supportive and stretchy yarns are zonally placed for comfort that moves with your foot.", "rating": "3.9", "reviews": "10", "product_name_stringindexer_transform": 82.0, "product_id_stringindexer_transform": 194.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 301.0, "rating_stringindexer_transform": 12.0, "reviews_stringindexer_transform": 6.0}, {"product_name": "Nike ISPA Joyride Envelope", "product_id": "BV4584-001", "listing_price": 16995, "sale_price": 13597, "discount": 0, "brand": "Nike", "description": "Utilising the latest innovations and Nike's ISPA project\u00e2\u20ac\u201dwhich touts a philosophy of improvise, scavenge, protect and adapt\u00e2\u20ac\u201dthe Nike ISPA Joyride Envelope delivers a futuristic shoe built for taking on the elements. Innovative details provide easy on and off and help support you in wet or warm conditions.", "rating": "5", "reviews": "2", "product_name_stringindexer_transform": 145.0, "product_id_stringindexer_transform": 266.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 133.0, "rating_stringindexer_transform": 0.0, "reviews_stringindexer_transform": 1.0}, {"product_name": "Nike Phantom Venom Academy FG", "product_id": "AO0566-606", "listing_price": 0, "sale_price": 7495, "discount": 0, "brand": "Nike", "description": "The Nike Phantom Venom Academy FG is engineered for powerful, precise strikes that win games. Ridges on the instep create spin to control the flight of the ball, while the firm-ground plate provides the traction needed to unleash at any moment.", "rating": "2.8", "reviews": "5", "product_name_stringindexer_transform": 108.0, "product_id_stringindexer_transform": 3.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 68.0, "rating_stringindexer_transform": 22.0, "reviews_stringindexer_transform": 3.0}, {"product_name": "Nike Air Ghost Racer", "product_id": "AT5410-003", "listing_price": 9995, "sale_price": 6997, "discount": 0, "brand": "Nike", "description": "Designed for speed, stability and comfort, the Nike Air Ghost Racer was a hit 20 years ago\u00e2\u20ac\u201dand now it's back in a stitch-for-stitch remake. And though it has all the same features as the original, it might be even better than you remember.", "rating": "4.5", "reviews": "2", "product_name_stringindexer_transform": 264.0, "product_id_stringindexer_transform": 166.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 84.0, "rating_stringindexer_transform": 1.0, "reviews_stringindexer_transform": 1.0}, {"product_name": "Nike ACG Air Terra Antarktik", "product_id": "BV6348-300", "listing_price": 0, "sale_price": 15995, "discount": 0, "brand": "Nike", "description": "\"Designed and tested in Oregon, the Nike ACG Antarktik is a \"\"jacket\"\" for your foot. Its tough ripstop upper combines with a GORE-TEX lining to help keep your foot dry. All-new lug details use hard rubber for traction in all conditions.\"", "rating": "2.6", "reviews": "20", "product_name_stringindexer_transform": 125.0, "product_id_stringindexer_transform": 231.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 94.0, "rating_stringindexer_transform": 23.0, "reviews_stringindexer_transform": 17.0}, {"product_name": "Nike Mercurial Superfly 7 Academy MG", "product_id": "AT7946-414", "listing_price": 0, "sale_price": 8495, "discount": 0, "brand": "Nike", "description": "Building on the forefoot plate innovation of the 6, the Nike Mercurial Superfly 7 Academy MG Boot adds a versatile multi-ground plate that provides traction on natural- and artificial-grass surfaces.", "rating": "5", "reviews": "2", "product_name_stringindexer_transform": 19.0, "product_id_stringindexer_transform": 30.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 47.0, "rating_stringindexer_transform": 0.0, "reviews_stringindexer_transform": 1.0}, {"product_name": "Nike AlphaDunk", "product_id": "BQ5401-001", "listing_price": 15995, "sale_price": 11197, "discount": 0, "brand": "Nike", "description": "Join the hoops uprising in the AlphaDunk, one of Nike Basketball's bounciest game shoes to date. The revamped upper construction is light and supportive and a large cushioning unit spans nearly the entire forefoot, giving you all the responsiveness you can handle on the court.", "rating": "2.9", "reviews": "12", "product_name_stringindexer_transform": 214.0, "product_id_stringindexer_transform": 210.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 310.0, "rating_stringindexer_transform": 24.0, "reviews_stringindexer_transform": 8.0}, {"product_name": "Nike Daybreak SP", "product_id": "BV7725-500", "listing_price": 7995, "sale_price": 4797, "discount": 0, "brand": "Nike", "description": "The Nike Daybreak SP marks the return of the 1979 original, featuring suede and nylon on the upper and old-school graphics on the tongue for a '70s runner-inspired look and feel.", "rating": "5", "reviews": "3", "product_name_stringindexer_transform": 112.0, "product_id_stringindexer_transform": 278.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 253.0, "rating_stringindexer_transform": 0.0, "reviews_stringindexer_transform": 2.0}, {"product_name": "Nike x MMW Joyride CC3 Setter", "product_id": "CU7623-002", "listing_price": 0, "sale_price": 16995, "discount": 0, "brand": "Nike", "description": "Alyx founder and creative director Matthew M. Williams is known for his ability to push fashion into new spaces. His angle is simple: Combine the influence of his life in New York and California with the latest innovations. The Nike x MMW Joyride CC3 Setter runs with that idea, bringing you to a world of cushioning and comfort.", "rating": "3.5", "reviews": "2", "product_name_stringindexer_transform": 233.0, "product_id_stringindexer_transform": 157.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 261.0, "rating_stringindexer_transform": 13.0, "reviews_stringindexer_transform": 1.0}, {"product_name": "Nike SB Blazer Low GT", "product_id": "704939-103", "listing_price": 0, "sale_price": 6995, "discount": 0, "brand": "Nike", "description": "The Nike SB Blazer Low GT pairs a supportive feel with lightweight, responsive cushioning for everyday use. Just like Grant Taylor, it blends contemporary style with old-school traditions.", "rating": "4.3", "reviews": "8", "product_name_stringindexer_transform": 247.0, "product_id_stringindexer_transform": 50.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 168.0, "rating_stringindexer_transform": 4.0, "reviews_stringindexer_transform": 7.0}, {"product_name": "LeBron 17 Monstars", "product_id": "CD5050-400", "listing_price": 0, "sale_price": 16995, "discount": 0, "brand": "Nike", "description": "The Monstars have crash-landed in the Windy City, prepared to strip us of some of our greatest hardwood heroes. With the game in danger, who can Bugs and the Tune Squad turn to? Who other than The King himself, LeBron James, poised to dash the hopes and dreams of Mr Swackhammer and any team that stands in his way? The LeBron 17 Monstars is here just in time for All-Star in Chicago, where LeBron is ready to represent the Tune Squad and all that is great about the sport of basketball.", "rating": "4.6", "reviews": "5", "product_name_stringindexer_transform": 162.0, "product_id_stringindexer_transform": 227.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 117.0, "rating_stringindexer_transform": 7.0, "reviews_stringindexer_transform": 3.0}, {"product_name": "Kyrie 5 x Bandulu", "product_id": "CK5836-100", "listing_price": 10995, "sale_price": 8797, "discount": 0, "brand": "Nike", "description": "Designed in collaboration with Pat Peltier, the mind behind up-cycled vintage label Bandulu, the Kyrie 5 x Bandulu explores process, approach and technique. The brand's signature paint splatters give the shoe an expression that speaks to Kyrie's creativity and dedication to his craft\u00e2\u20ac\u201don and off the court.", "rating": "5", "reviews": "1", "product_name_stringindexer_transform": 209.0, "product_id_stringindexer_transform": 96.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 225.0, "rating_stringindexer_transform": 0.0, "reviews_stringindexer_transform": 0.0}, {"product_name": "Nike Air Max Impact", "product_id": "CI1396-600", "listing_price": 0, "sale_price": 7995, "discount": 0, "brand": "Nike", "description": "The Nike Air Max Impact infuses bold, expressive details into a design that's a beast on the court. Responsive cushioning helps soften hard landings, while the moulded heel clip and dual-strap system combine for a lightweight, locked-in feel.", "rating": "5", "reviews": "1", "product_name_stringindexer_transform": 84.0, "product_id_stringindexer_transform": 178.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 18.0, "rating_stringindexer_transform": 0.0, "reviews_stringindexer_transform": 0.0}, {"product_name": "Nike Air Max 90 QS", "product_id": "CD0916-001", "listing_price": 0, "sale_price": 11995, "discount": 0, "brand": "Nike", "description": "\"Originally designed by Tinker Hatfield in 1990, the Air Max 90 has been re-imagined. Widely considered one of the biggest cross-cultural icons of the early '00s, this iteration pays tribute to the influential 2003 \"\"Snakeskin\"\" release with premium materials and a bold twist on the original.\"", "rating": "5", "reviews": "1", "product_name_stringindexer_transform": 142.0, "product_id_stringindexer_transform": 74.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 299.0, "rating_stringindexer_transform": 0.0, "reviews_stringindexer_transform": 0.0}, {"product_name": "Nike React Element 55 SE", "product_id": "BV1507-001", "listing_price": 10995, "sale_price": 6597, "discount": 0, "brand": "Nike", "description": "The Nike React Element 55 SE borrows design lines from heritage runners like the Nike Internationalist, then places it all on Nike React technology.", "rating": "4.8", "reviews": "5", "product_name_stringindexer_transform": 2.0, "product_id_stringindexer_transform": 364.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 234.0, "rating_stringindexer_transform": 6.0, "reviews_stringindexer_transform": 3.0}, {"product_name": "Jordan Proto-Max 720", "product_id": "BQ6623-070", "listing_price": 15995, "sale_price": 12797, "discount": 0, "brand": "Nike", "description": "Inspired by outer space flight, the Jordan Proto-Max 720 provides all-day comfort with a future-forward look. An outer shroud covers the sock-like bootie construction, while Nike Air cushions every step.", "rating": "4.4", "reviews": "18", "product_name_stringindexer_transform": 100.0, "product_id_stringindexer_transform": 38.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 43.0, "rating_stringindexer_transform": 3.0, "reviews_stringindexer_transform": 9.0}, {"product_name": "Nike React Element 55 SE", "product_id": "CI3831-200", "listing_price": 10995, "sale_price": 6597, "discount": 0, "brand": "Nike", "description": "The Nike React Element 55 SE borrows design lines from heritage runners like the Nike Internationalist, adds reflective graphics, then places it all on Nike React technology.", "rating": "4", "reviews": "1", "product_name_stringindexer_transform": 2.0, "product_id_stringindexer_transform": 72.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 195.0, "rating_stringindexer_transform": 2.0, "reviews_stringindexer_transform": 0.0}, {"product_name": "Nike Air Max2 Light", "product_id": "AO1741-003", "listing_price": 11995, "sale_price": 8397, "discount": 0, "brand": "Nike", "description": "Originally released in 1994, the Nike Air Max2 Light returns as a near-exact replica of the iconic runner with style for the street. Its mesh and synthetic upper, moulded heel and Max Air unit honour the OG, while the soft foam midsole optimises all-day comfort.", "rating": "3.7", "reviews": "3", "product_name_stringindexer_transform": 262.0, "product_id_stringindexer_transform": 225.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 327.0, "rating_stringindexer_transform": 8.0, "reviews_stringindexer_transform": 2.0}, {"product_name": "Nike Air Max 270", "product_id": "AH8050-100", "listing_price": 0, "sale_price": 13995, "discount": 0, "brand": "Nike", "description": "Nike's first lifestyle Air Max lets you greet the streets with the soft, smooth and resilient ride of the Nike Air Max 270. The design draws inspiration from the Air Max pantheon, showcasing Nike's greatest innovation with its large window and fresh array of colours.", "rating": "3.8", "reviews": "81", "product_name_stringindexer_transform": 73.0, "product_id_stringindexer_transform": 172.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 223.0, "rating_stringindexer_transform": 14.0, "reviews_stringindexer_transform": 50.0}, {"product_name": "Nike Air Force 1 '07 LV8", "product_id": "CK4363-100", "listing_price": 0, "sale_price": 7595, "discount": 0, "brand": "Nike", "description": "The Nike Air Force 1 '07 LV8 has the same hoops-inspired performance of the '82 OG plus fresh new patterns for a sleek look that turns heads.", "rating": "5", "reviews": "6", "product_name_stringindexer_transform": 10.0, "product_id_stringindexer_transform": 271.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 230.0, "rating_stringindexer_transform": 0.0, "reviews_stringindexer_transform": 5.0}, {"product_name": "Nike Air Max 90", "product_id": "CN8490-100", "listing_price": 0, "sale_price": 9995, "discount": 0, "brand": "Nike", "description": "Nothing as fly, nothing as comfortable, nothing as proven. The Nike Air Max 90 stays true to its OG running roots with the iconic Waffle sole, stitched overlays and classic TPU details. Classic colours celebrate your fresh look while Max Air cushioning adds comfort to the journey.", "rating": "5", "reviews": "3", "product_name_stringindexer_transform": 0.0, "product_id_stringindexer_transform": 217.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 82.0, "rating_stringindexer_transform": 0.0, "reviews_stringindexer_transform": 2.0}, {"product_name": "Nike Phantom Vision Academy Dynamic Fit TF", "product_id": "AO3269-717", "listing_price": 8495, "sale_price": 5947, "discount": 0, "brand": "Nike", "description": "The Nike Phantom Vision Academy Dynamic Fit TF Artificial Turf Football Boot provides the precise touch to win small-sided glory, wherever the game finds you. Webbing on the laces provides lockdown while a textured instep is always ready to receive, turn and score.", "rating": "4", "reviews": "3", "product_name_stringindexer_transform": 223.0, "product_id_stringindexer_transform": 184.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 199.0, "rating_stringindexer_transform": 2.0, "reviews_stringindexer_transform": 2.0}, {"product_name": "Nike ACG MOC 3.0", "product_id": "CI9367-301", "listing_price": 0, "sale_price": 7995, "discount": 0, "brand": "Nike", "description": "Trail-ready traction makes the Nike ACG Moc 3.0 a go-to for your next outdoor adventure. Designed and tested in Oregon, it features a sticky rubber heel and toe tip.", "rating": "3.5", "reviews": "2", "product_name_stringindexer_transform": 220.0, "product_id_stringindexer_transform": 281.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 252.0, "rating_stringindexer_transform": 13.0, "reviews_stringindexer_transform": 1.0}, {"product_name": "Nike Air DSVM", "product_id": "AT8179-100", "listing_price": 15995, "sale_price": 9597, "discount": 0, "brand": "Nike", "description": "The lightweight Nike Air DSVM gives you all-day comfort and street-ready style in a modern take on a classic silhouette. An adjustable strap lets you change up the fit for a look that's sure to turn heads.", "rating": "4.4", "reviews": "7", "product_name_stringindexer_transform": 236.0, "product_id_stringindexer_transform": 110.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 266.0, "rating_stringindexer_transform": 3.0, "reviews_stringindexer_transform": 10.0}, {"product_name": "Nike x Carhartt WIP Air Max 95", "product_id": "AV3866-001", "listing_price": 0, "sale_price": 16995, "discount": 0, "brand": "Nike", "description": "The Nike x Carhartt WIP Air Max 95 features reflective details and neon pops of colour. Carhartt WIP materials help construct the durable upper of a new take on the first sneaker with visible forefoot Nike Air.", "rating": "5", "reviews": "1", "product_name_stringindexer_transform": 180.0, "product_id_stringindexer_transform": 59.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 184.0, "rating_stringindexer_transform": 0.0, "reviews_stringindexer_transform": 0.0}, {"product_name": "Nike Odyssey React Flyknit 2", "product_id": "AH1015-010", "listing_price": 9995, "sale_price": 6997, "discount": 0, "brand": "Nike", "description": "The Nike Odyssey React Flyknit 2 provides a strategic combination of lightweight Flyknit construction and synthetic material for support. Underfoot, Nike React cushioning delivers a soft, springy ride for a route that begs to be crushed.", "rating": "4", "reviews": "25", "product_name_stringindexer_transform": 67.0, "product_id_stringindexer_transform": 188.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 297.0, "rating_stringindexer_transform": 2.0, "reviews_stringindexer_transform": 24.0}, {"product_name": "Nike Tiempo Legend 8 Elite FG", "product_id": "AT5293-004", "listing_price": 0, "sale_price": 20995, "discount": 0, "brand": "Nike", "description": "The Nike Tiempo Legend 8 Elite FG takes the legendary touch of premium kangaroo leather and adds foot-hugging Quad-Fit mesh in the lining and a wrap-around Flyknit tongue that feels supportive under your arch.", "rating": "3.1", "reviews": "7", "product_name_stringindexer_transform": 66.0, "product_id_stringindexer_transform": 25.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 37.0, "rating_stringindexer_transform": 21.0, "reviews_stringindexer_transform": 10.0}, {"product_name": "Nike Joyride CC3 Setter", "product_id": "AT6395-002", "listing_price": 14995, "sale_price": 10497, "discount": 0, "brand": "Nike", "description": "Lounge wherever you go and let the Nike Joyride CC3 Setter take you into a new world of comfort. It places your feet directly on soft foam and innovative bead-pods for extra comfort, while exaggerated textures add unrivalled depth to your edgy attitude.", "rating": "4", "reviews": "6", "product_name_stringindexer_transform": 147.0, "product_id_stringindexer_transform": 223.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 322.0, "rating_stringindexer_transform": 2.0, "reviews_stringindexer_transform": 5.0}, {"product_name": "Nike Renew Run", "product_id": "CK6357-005", "listing_price": 0, "sale_price": 6995, "discount": 0, "brand": "Nike", "description": "The Nike Renew Run keeps you moving with softer foam for a cushioned feel. Designed with the everyday runner in mind, this shoe delivers secure support and durable traction for comfort on the go.", "rating": "4.3", "reviews": "12", "product_name_stringindexer_transform": 98.0, "product_id_stringindexer_transform": 229.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 55.0, "rating_stringindexer_transform": 4.0, "reviews_stringindexer_transform": 8.0}, {"product_name": "Nike React Ianga", "product_id": "AV5555-001", "listing_price": 10995, "sale_price": 8797, "discount": 0, "brand": "Nike", "description": "The Nike React Ianga takes elements from a jungle boot and mixes them with modern, technical details. Part of the 10th Collection, this shoe is a unique, military-inspired expression of the React family.", "rating": "4.3", "reviews": "9", "product_name_stringindexer_transform": 261.0, "product_id_stringindexer_transform": 340.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 102.0, "rating_stringindexer_transform": 4.0, "reviews_stringindexer_transform": 12.0}, {"product_name": "Air Jordan 10 Retro", "product_id": "310805-137", "listing_price": 0, "sale_price": 15995, "discount": 0, "brand": "Nike", "description": "Featuring soft, lightweight cushioning, the Air Jordan 10 Retro offers performance-inspired comfort with iconic Air Jordan detailing.", "rating": "4.7", "reviews": "223", "product_name_stringindexer_transform": 254.0, "product_id_stringindexer_transform": 135.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 305.0, "rating_stringindexer_transform": 11.0, "reviews_stringindexer_transform": 34.0}, {"product_name": "Air Jordan 12 Retro", "product_id": "130690-017", "listing_price": 0, "sale_price": 15995, "discount": 0, "brand": "Nike", "description": "An all-time favourite among players and sneakerheads, the Air Jordan 12 Retro features full-length Zoom Air cushioning and full-grain leather styled with distinct radial stitch lines.", "rating": "4.5", "reviews": "24", "product_name_stringindexer_transform": 46.0, "product_id_stringindexer_transform": 12.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 54.0, "rating_stringindexer_transform": 1.0, "reviews_stringindexer_transform": 23.0}, {"product_name": "Nike Air Max 270 React", "product_id": "CT1264-101", "listing_price": 0, "sale_price": 12995, "discount": 0, "brand": "Nike", "description": "Nike's first lifestyle Air Max meets the softest, smoothest, most resilient foam yet in the Nike Air Max 270 React. The design draws inspiration from the Air Max pantheon, showcasing Nike's greatest innovation with its large window and fresh array of colours.", "rating": "4", "reviews": "1", "product_name_stringindexer_transform": 3.0, "product_id_stringindexer_transform": 269.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 75.0, "rating_stringindexer_transform": 2.0, "reviews_stringindexer_transform": 0.0}, {"product_name": "Nike Air Zoom Winflo 6", "product_id": "AQ7497-300", "listing_price": 0, "sale_price": 7995, "discount": 0, "brand": "Nike", "description": "In a fluid design that speaks the language of fast, the Nike Air Zoom Winflo 6 has less bulk and a more sculpted profile than previous versions. It has 2 cushioning units for targeted responsiveness in the forefoot and heel. Up top, mesh in the upper provides breathability.", "rating": "5", "reviews": "3", "product_name_stringindexer_transform": 37.0, "product_id_stringindexer_transform": 350.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 285.0, "rating_stringindexer_transform": 0.0, "reviews_stringindexer_transform": 2.0}, {"product_name": "Nike Air Max 97", "product_id": "CT4526-100", "listing_price": 0, "sale_price": 15995, "discount": 0, "brand": "Nike", "description": "Remastered from the OG that shook up the running world, the Nike Air Max 97 elevates the classic design. Memorial Day Parade White and fresh Sky Blue tint the sole. Flex your summertime vibes and float the streets in style.", "rating": "5", "reviews": "1", "product_name_stringindexer_transform": 1.0, "product_id_stringindexer_transform": 346.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 268.0, "rating_stringindexer_transform": 0.0, "reviews_stringindexer_transform": 0.0}, {"product_name": "Nike MX-720-818", "product_id": "CI3871-300", "listing_price": 0, "sale_price": 15995, "discount": 0, "brand": "Nike", "description": "The Nike MX-720-818 uses materials inspired by space suits for a futuristic take on classic Air Max DNA.", "rating": "4.4", "reviews": "5", "product_name_stringindexer_transform": 72.0, "product_id_stringindexer_transform": 341.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 103.0, "rating_stringindexer_transform": 3.0, "reviews_stringindexer_transform": 3.0}, {"product_name": "Nike React Element 55", "product_id": "BQ2728-012", "listing_price": 0, "sale_price": 11995, "discount": 0, "brand": "Nike", "description": "The Nike React Element 55 Women's Shoe borrows design lines from heritage Nike runners like the Internationalist, adds reflective graphics and then places it all on Nike React technology.", "rating": "3.9", "reviews": "17", "product_name_stringindexer_transform": 85.0, "product_id_stringindexer_transform": 345.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 135.0, "rating_stringindexer_transform": 12.0, "reviews_stringindexer_transform": 16.0}, {"product_name": "Nike ZoomX Vista Grind", "product_id": "CT8919-700", "listing_price": 0, "sale_price": 13995, "discount": 0, "brand": "Nike", "description": "The Nike ZoomX Vista Grind brings you to a bold new place both rebellious and refined. It's comfort you can see and feel in a brand new silhouette.", "rating": "4.5", "reviews": "2", "product_name_stringindexer_transform": 234.0, "product_id_stringindexer_transform": 143.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 95.0, "rating_stringindexer_transform": 1.0, "reviews_stringindexer_transform": 1.0}, {"product_name": "PG 4 EP", "product_id": "CD5082-001", "listing_price": 0, "sale_price": 8995, "discount": 0, "brand": "Nike", "description": "Paul George is the rare high-percentage shooter who's also a coach's dream on D. Designed for his unrivalled 2-way game, the PG 4 EP unveils a new cushioning system that's lightweight, articulated and responsive, ideal for players like PG who go hard every play.", "rating": "4.5", "reviews": "2", "product_name_stringindexer_transform": 212.0, "product_id_stringindexer_transform": 158.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 247.0, "rating_stringindexer_transform": 1.0, "reviews_stringindexer_transform": 1.0}, {"product_name": "Nike Air Zoom Pegasus 36", "product_id": "BV5739-500", "listing_price": 10995, "sale_price": 7697, "discount": 0, "brand": "Nike", "description": "The iconic Nike Air Zoom Pegasus 36 returns with more perforations for more cooling. An engineered mesh and synthetic upper strategically targets breathability across high-heat areas. A slimmer heel collar and tongue reduce bulk without compromising comfort, while exposed Flywire cables give you a snug fit at higher speeds.", "rating": "4.7", "reviews": "3", "product_name_stringindexer_transform": 6.0, "product_id_stringindexer_transform": 165.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 264.0, "rating_stringindexer_transform": 11.0, "reviews_stringindexer_transform": 2.0}, {"product_name": "Nike Air Force 1 '07 LV8", "product_id": "CD0887-201", "listing_price": 0, "sale_price": 7995, "discount": 0, "brand": "Nike", "description": "The radiance lives on in the Nike Air Force 1 '07, the b-ball OG that puts a fresh, outdoorsy spin on what you know best: soft suedes, bold colours and the perfect amount of flash to make you shine.", "rating": "5", "reviews": "3", "product_name_stringindexer_transform": 10.0, "product_id_stringindexer_transform": 279.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 118.0, "rating_stringindexer_transform": 0.0, "reviews_stringindexer_transform": 2.0}, {"product_name": "Nike Air VaporMax Flyknit 3", "product_id": "AJ6900-102", "listing_price": 0, "sale_price": 16995, "discount": 0, "brand": "Nike", "description": "Be bouncy and buoyant in the Nike Air VaporMax Flyknit 3. The upper features flowing 2-tone lines of breathable, stretchable Flyknit construction for unique, street-ready style. Revolutionary VaporMax technology keeps a spring in your step with toe-to-heel cushioning.", "rating": "3.7", "reviews": "50", "product_name_stringindexer_transform": 61.0, "product_id_stringindexer_transform": 348.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 123.0, "rating_stringindexer_transform": 8.0, "reviews_stringindexer_transform": 39.0}, {"product_name": "Nike Air Max Verona", "product_id": "CI9842-500", "listing_price": 0, "sale_price": 9995, "discount": 0, "brand": "Nike", "description": "Designed with every woman in mind, the mixed-material upper features a plush collar, flashy colours and unique stitching patterns. Nike Air cushioning combines with the lifted foam heel for a modern touch, adding comfort and style to your journey.", "rating": "5", "reviews": "2", "product_name_stringindexer_transform": 206.0, "product_id_stringindexer_transform": 206.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 164.0, "rating_stringindexer_transform": 0.0, "reviews_stringindexer_transform": 1.0}, {"product_name": "Nike Air Force 1 Shadow", "product_id": "CI0919-100", "listing_price": 0, "sale_price": 8995, "discount": 0, "brand": "Nike", "description": "The Nike Air Force 1 Shadow pays homage to the women who are setting an example for the next generation by being forces of change in their community. This sneaker reflects this ethos in its design with double the Swoosh, double the height and double the force.", "rating": "4.8", "reviews": "20", "product_name_stringindexer_transform": 105.0, "product_id_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 65.0, "rating_stringindexer_transform": 6.0, "reviews_stringindexer_transform": 17.0}, {"product_name": "Nike Air Tailwind 79", "product_id": "487754-303", "listing_price": 0, "sale_price": 7995, "discount": 0, "brand": "Nike", "description": "Making its debut in 1978 for the Honolulu Marathon, the Nike Air Tailwind was a revolution in cushioning. Now, a racing icon returns with the Nike Air Tailwind 79, featuring nearly original materials and colours, plus the Nike Air unit that made it a winner.", "rating": "3.9", "reviews": "17", "product_name_stringindexer_transform": 257.0, "product_id_stringindexer_transform": 245.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 260.0, "rating_stringindexer_transform": 12.0, "reviews_stringindexer_transform": 16.0}, {"product_name": "Nike TiempoX Lunar Legend VII Pro TF", "product_id": "AH7249-118", "listing_price": 8995, "sale_price": 7197, "discount": 0, "brand": "Nike", "description": "The Nike TiempoX Lunar Legend VII Pro Turf Football Boot features lightweight foam cushioning and a premium leather construction for a flexible fit and dominating touch when playing on turf pitches.", "rating": "3", "reviews": "1", "product_name_stringindexer_transform": 47.0, "product_id_stringindexer_transform": 47.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 52.0, "rating_stringindexer_transform": 10.0, "reviews_stringindexer_transform": 0.0}, {"product_name": "Nike Air Max Plus III", "product_id": "CJ9684-001", "listing_price": 15995, "sale_price": 11197, "discount": 0, "brand": "Nike", "description": "The Nike Air Max Plus III combines ultra-comfortable Tuned Air Technology with an energetic silhouette made famous by its predecessors. The III updates the look with TPU details fused to the upper while paying homage to the iconic colour fade.", "rating": "5", "reviews": "2", "product_name_stringindexer_transform": 71.0, "product_id_stringindexer_transform": 115.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 220.0, "rating_stringindexer_transform": 0.0, "reviews_stringindexer_transform": 1.0}, {"product_name": "Nike Zoom 2K", "product_id": "AO0354-108", "listing_price": 0, "sale_price": 6995, "discount": 0, "brand": "Nike", "description": "Inspired by running silhouettes from the early 2000s, the Nike Zoom 2K is reimagining the golden age of running sneakers. A classic Zoom bag takes it back to where it began, while the rubber wings that wrap the outsole push the design into the future.", "rating": "4.9", "reviews": "8", "product_name_stringindexer_transform": 167.0, "product_id_stringindexer_transform": 257.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 83.0, "rating_stringindexer_transform": 19.0, "reviews_stringindexer_transform": 7.0}, {"product_name": "Nike Zoom Pegasus Turbo 2", "product_id": "AT2863-100", "listing_price": 0, "sale_price": 15995, "discount": 0, "brand": "Nike", "description": "The Nike Zoom Pegasus Turbo 2 is updated with a feather-light upper, while innovative foam brings revolutionary responsiveness to your long-distance training.", "rating": "3.1", "reviews": "54", "product_name_stringindexer_transform": 5.0, "product_id_stringindexer_transform": 304.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 5.0, "rating_stringindexer_transform": 21.0, "reviews_stringindexer_transform": 44.0}, {"product_name": "Nike Kawa Shower", "product_id": "832528-001", "listing_price": 0, "sale_price": 1595, "discount": 0, "brand": "Nike", "description": "The Nike Kawa Shower Men's Slide is designed to help feet recover after competition. A textured Solarsoft footbed and flexible foam outsole offer lightweight comfort.", "rating": "4.5", "reviews": "6", "product_name_stringindexer_transform": 217.0, "product_id_stringindexer_transform": 117.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 321.0, "rating_stringindexer_transform": 1.0, "reviews_stringindexer_transform": 5.0}, {"product_name": "Nike React Infinity Run Flyknit", "product_id": "CD4371-001", "listing_price": 0, "sale_price": 13995, "discount": 0, "brand": "Nike", "description": "With the Nike Air Max 90, a legendary shoe gets a luxe material treatment and brash colour palette with a history all of its own. Here, the Air Max 90 silhouette is clad in premium all-over suede with ballistic mesh accents to keep it breathable. This vibrant palette of saturated colours was made famous in the original Viotech release, which launched exclusively in Japan in the early 2000s. The head-turners have another classic to admire.", "rating": "4.6", "reviews": "68", "product_name_stringindexer_transform": 51.0, "product_id_stringindexer_transform": 155.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 0.0, "rating_stringindexer_transform": 7.0, "reviews_stringindexer_transform": 40.0}, {"product_name": "Air Jordan XXXIII", "product_id": "AQ8830-016", "listing_price": 18995, "sale_price": 15197, "discount": 0, "brand": "Nike", "description": "The Air Jordan XXXIII rewrites the story of an iconic basketball shoe. Its revolutionary closure system secures you for flight, while new FlightSpeed technology is tuned for optimal energy return.", "rating": "4.1", "reviews": "17", "product_name_stringindexer_transform": 182.0, "product_id_stringindexer_transform": 101.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 274.0, "rating_stringindexer_transform": 9.0, "reviews_stringindexer_transform": 16.0}, {"product_name": "Nike Odyssey React", "product_id": "AO9819-001", "listing_price": 11995, "sale_price": 9637, "discount": 0, "brand": "Nike", "description": "The Nike Odyssey React Men's Running Shoe provides crazy comfort that lasts as long as you can run. Its Nike React foam cushioning is responsive yet lightweight, durable yet soft. This attraction of opposites creates a sensation that not only enhances the feeling of moving forwards, but makes running feel fun, too.\u00c2\u00a0The upper of the Nike Odyssey React is built with a lightweight, breathable fabric instead of the premium Flyknit featured on the Nike Epic React.", "rating": "4.4", "reviews": "27", "product_name_stringindexer_transform": 101.0, "product_id_stringindexer_transform": 307.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 77.0, "rating_stringindexer_transform": 3.0, "reviews_stringindexer_transform": 31.0}, {"product_name": "Nike Metcon 5", "product_id": "AQ1189-009", "listing_price": 0, "sale_price": 10995, "discount": 0, "brand": "Nike", "description": "The Nike Metcon 5 is our most tuned Metcon yet. This means specific stability for heavy lifting, traction made for speed and durability where you need it. It even includes a Hyperlift insert that's compatible with all prior versions of the Metcon. Meet your secret weapon for weight-lifting and high-impact training.", "rating": "3.7", "reviews": "31", "product_name_stringindexer_transform": 7.0, "product_id_stringindexer_transform": 16.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 12.0, "rating_stringindexer_transform": 8.0, "reviews_stringindexer_transform": 21.0}, {"product_name": "LeBron 7", "product_id": "CU5133-600", "listing_price": 16995, "sale_price": 13597, "discount": 0, "brand": "Nike", "description": "First debuted on the hardwood during one of the King's epic December showdowns, the LeBron 7 returns in familiar festive hues to celebrate the game and the season. Featuring the same supple Team Red upper and black accents as the original iteration, this limited-edition sneaker is expertly engineered for the street and arrives complete with the unmistakable Air iconic to the model.", "rating": "4.4", "reviews": "7", "product_name_stringindexer_transform": 137.0, "product_id_stringindexer_transform": 255.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 137.0, "rating_stringindexer_transform": 3.0, "reviews_stringindexer_transform": 10.0}, {"product_name": "Nike Blazer Low QS Flyleather with at least 50% leather fibre", "product_id": "CI5546-100", "listing_price": 0, "sale_price": 6495, "discount": 0, "brand": "Nike", "description": "Inspired by basketball, the Nike Blazer Low QS Flyleather features an innovative Flyleather upper for a premium look and bold graphics by artist Steven Harrington.", "rating": "2", "reviews": "2", "product_name_stringindexer_transform": 116.0, "product_id_stringindexer_transform": 226.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 267.0, "rating_stringindexer_transform": 20.0, "reviews_stringindexer_transform": 1.0}, {"product_name": "Nike SB Dunk High Pro", "product_id": "BQ6826-003", "listing_price": 0, "sale_price": 8995, "discount": 0, "brand": "Nike", "description": "The Nike SB Dunk High Pro pairs iconic Dunk style with a high-top design for a fresh look. A Zoom Air unit in the heel and a padded tongue create a comfortable fit that's made to skate.", "rating": "4.8", "reviews": "4", "product_name_stringindexer_transform": 58.0, "product_id_stringindexer_transform": 5.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 11.0, "rating_stringindexer_transform": 6.0, "reviews_stringindexer_transform": 4.0}, {"product_name": "Nike Air Max 90 FlyEase", "product_id": "CU0814-102", "listing_price": 0, "sale_price": 9995, "discount": 0, "brand": "Nike", "description": "Nike Sportswear's first collaboration by the Hatfield brothers, the Nike Air Max 90 FlyEase combines the timelessness of Tinker's original design with Tobie's FlyEase technology. The heel collapses when you step in then snaps back into place, providing quick, easy access to one of history's most iconic sneakers.", "rating": "4", "reviews": "1", "product_name_stringindexer_transform": 148.0, "product_id_stringindexer_transform": 195.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 80.0, "rating_stringindexer_transform": 2.0, "reviews_stringindexer_transform": 0.0}, {"product_name": "Nike Metcon 5 AMP", "product_id": "CD3395-006", "listing_price": 0, "sale_price": 11995, "discount": 0, "brand": "Nike", "description": "The Nike Metcon 5 AMP arms you with stability for heavy lifting and traction for sprints during high-impact training. It combines breathability and durability to be your secret weapon in the gym.", "rating": "5", "reviews": "2", "product_name_stringindexer_transform": 4.0, "product_id_stringindexer_transform": 33.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 1.0, "rating_stringindexer_transform": 0.0, "reviews_stringindexer_transform": 1.0}, {"product_name": "Nike M2K Tekno", "product_id": "AV4789-104", "listing_price": 8995, "sale_price": 7197, "discount": 0, "brand": "Nike", "description": "Drawing inspiration from the Monarch franchise, the Nike M2K Tekno combines real and synthetic leathers with textile for a layered look.", "rating": "4.4", "reviews": "7", "product_name_stringindexer_transform": 13.0, "product_id_stringindexer_transform": 214.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 269.0, "rating_stringindexer_transform": 3.0, "reviews_stringindexer_transform": 10.0}, {"product_name": "Nike React Kenny 55", "product_id": "CJ3312-001", "listing_price": 0, "sale_price": 12995, "discount": 0, "brand": "Nike", "description": "The Nike React Kenny 55 lets you rep the classic and the cutting edge at once. The lines are borrowed from OG Nike running shoes like the Internationalist, rooting you to sneaker heritage, while responsive React cushioning adds modern comfort that feels unbelievably soft. Its 2-tone marble print speaks to the duality of the real world. 1 part yin, 1 part yang. Everything in perfect balance.", "rating": "5", "reviews": "1", "product_name_stringindexer_transform": 208.0, "product_id_stringindexer_transform": 335.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 78.0, "rating_stringindexer_transform": 0.0, "reviews_stringindexer_transform": 0.0}, {"product_name": "Nike Air VaporMax 2019", "product_id": "AR6631-004", "listing_price": 15995, "sale_price": 12797, "discount": 0, "brand": "Nike", "description": "Designed for running but adopted by the street, the Nike Air VaporMax 2019 features the lightest, most flexible Air Max cushioning to date. A stretch woven material wraps your foot for lightweight support and stability, while an external reinforcement in the heel secures the back of your foot.", "rating": "3.8", "reviews": "24", "product_name_stringindexer_transform": 41.0, "product_id_stringindexer_transform": 102.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 15.0, "rating_stringindexer_transform": 14.0, "reviews_stringindexer_transform": 23.0}, {"product_name": "Nike React Element 55", "product_id": "BQ6166-003", "listing_price": 11995, "sale_price": 7197, "discount": 0, "brand": "Nike", "description": "The Nike React Element 55 Shoe borrows design lines from heritage runners like the Nike Internationalist and then places it all on Nike React technology.", "rating": "3.7", "reviews": "31", "product_name_stringindexer_transform": 85.0, "product_id_stringindexer_transform": 332.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 181.0, "rating_stringindexer_transform": 8.0, "reviews_stringindexer_transform": 21.0}, {"product_name": "Nike Air Force 1 Low Retro", "product_id": "CQ0492-001", "listing_price": 0, "sale_price": 10995, "discount": 0, "brand": "Nike", "description": "The legend lives on in the Nike Air Force 1 '07 Men's Shoe, a modern take on the iconic AF-1 that blends classic style and fresh details.", "rating": "4.5", "reviews": "2", "product_name_stringindexer_transform": 237.0, "product_id_stringindexer_transform": 122.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 263.0, "rating_stringindexer_transform": 1.0, "reviews_stringindexer_transform": 1.0}, {"product_name": "NikeCourt Zoom Cage 3", "product_id": "918193-700", "listing_price": 0, "sale_price": 13495, "discount": 0, "brand": "Nike", "description": "The NikeCourt Zoom Cage 3 offers zoned durability with a lightweight, pliable overlay that moves with you. A Zoom Air unit in the heel delivers a low-profile ride with responsive cushioning.", "rating": "3.6", "reviews": "20", "product_name_stringindexer_transform": 171.0, "product_id_stringindexer_transform": 267.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 90.0, "rating_stringindexer_transform": 15.0, "reviews_stringindexer_transform": 17.0}, {"product_name": "Nike Metcon Sport", "product_id": "AQ7489-008", "listing_price": 0, "sale_price": 7995, "discount": 0, "brand": "Nike", "description": "The Nike Metcon Sport is designed for heavy weightlifting like all Metcons, but is updated for increased agility during explosive movements and speed drills.", "rating": "3.6", "reviews": "14", "product_name_stringindexer_transform": 115.0, "product_id_stringindexer_transform": 232.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 144.0, "rating_stringindexer_transform": 15.0, "reviews_stringindexer_transform": 20.0}, {"product_name": "Jordan Mars 270", "product_id": "CD7070-009", "listing_price": 0, "sale_price": 14995, "discount": 0, "brand": "Nike", "description": "Drawing inspiration from four classic Air Jordans, the Jordan Mars 270 is a modern-day remix that offers a heavy dose of heritage, plus an enormous Max Air unit and springy foam for non-stop comfort.", "rating": "4.6", "reviews": "15", "product_name_stringindexer_transform": 242.0, "product_id_stringindexer_transform": 54.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 88.0, "rating_stringindexer_transform": 7.0, "reviews_stringindexer_transform": 19.0}, {"product_name": "Nike Air Zoom Vomero 14", "product_id": "AH7857-009", "listing_price": 0, "sale_price": 11995, "discount": 0, "brand": "Nike", "description": "The Nike Air Zoom Vomero 14 takes responsive cushioning to the next level. A full-length cushioning unit works with Nike React technology to deliver a super-snappy, smooth ride. Up top, the sleek design feels durable and supports your stride through every mile.", "rating": "4.2", "reviews": "23", "product_name_stringindexer_transform": 54.0, "product_id_stringindexer_transform": 221.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 316.0, "rating_stringindexer_transform": 5.0, "reviews_stringindexer_transform": 18.0}, {"product_name": "Nike Zoom Fly", "product_id": "880848-005", "listing_price": 0, "sale_price": 14495, "discount": 0, "brand": "Nike", "description": "Built with a carbon-infused nylon plate inspired by the VaporFly 4%\u00e2\u20ac\u201dour most efficient marathon shoe ever\u00e2\u20ac\u201dthe Nike Zoom Fly Men's Running Shoe is the perfect response to the demands of your toughest tempo runs, long runs and race days.", "rating": "4.3", "reviews": "105", "product_name_stringindexer_transform": 128.0, "product_id_stringindexer_transform": 362.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 134.0, "rating_stringindexer_transform": 4.0, "reviews_stringindexer_transform": 52.0}, {"product_name": "Nike Zoom Fly 3", "product_id": "AT8240-003", "listing_price": 0, "sale_price": 13995, "discount": 0, "brand": "Nike", "description": "Inspired by the Vaporfly, the Nike Zoom Fly 3 gives distance runners race-day comfort and durability. The power of a carbon-fibre plate keeps you in the running mile after mile.", "rating": "4", "reviews": "30", "product_name_stringindexer_transform": 77.0, "product_id_stringindexer_transform": 179.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 35.0, "rating_stringindexer_transform": 2.0, "reviews_stringindexer_transform": 25.0}, {"product_name": "Nike Air Zoom Pegasus 35", "product_id": "942851-002", "listing_price": 0, "sale_price": 10995, "discount": 0, "brand": "Nike", "description": "The Nike Air Zoom Pegasus 35 is built for runners at every level, whether you're a seasoned veteran or just starting out.\u00c2\u00a0It features a breathable mesh upper with an out-turned collar for Achilles comfort. Down below, the cushioning has been updated with full-length Zoom Air for the first time ever, to deliver a smoother, more natural stride.", "rating": "3.9", "reviews": "61", "product_name_stringindexer_transform": 256.0, "product_id_stringindexer_transform": 285.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 286.0, "rating_stringindexer_transform": 12.0, "reviews_stringindexer_transform": 28.0}, {"product_name": "Nike Air Zoom Pegasus 36 Trail", "product_id": "AR5677-200", "listing_price": 0, "sale_price": 10995, "discount": 0, "brand": "Nike", "description": "An icon trades pavement for path with the Nike Air Zoom Pegasus 36 Trail. A perforated mesh upper adds breathability, as double Zoom Air units underfoot cushion your stride. Opposing lugs on the outsole optimise traction on your uphill climbs.", "rating": "4.6", "reviews": "12", "product_name_stringindexer_transform": 23.0, "product_id_stringindexer_transform": 220.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 158.0, "rating_stringindexer_transform": 7.0, "reviews_stringindexer_transform": 8.0}, {"product_name": "Nike Phantom Vision Club Dynamic Fit FG", "product_id": "AJ6959-717", "listing_price": 5995, "sale_price": 4497, "discount": 0, "brand": "Nike", "description": "The Nike Phantom Vision Club Dynamic Fit FG brings the fierce precision of street play to the pitch. A foot-hugging Dynamic Fit collar combines with targeted texture for precision to create a boot for the finishers, the providers and the battlers of tomorrow's game.", "rating": "5", "reviews": "1", "product_name_stringindexer_transform": 104.0, "product_id_stringindexer_transform": 14.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 38.0, "rating_stringindexer_transform": 0.0, "reviews_stringindexer_transform": 0.0}, {"product_name": "Nike Air Monarch IV", "product_id": "415445-102", "listing_price": 0, "sale_price": 5295, "discount": 0, "brand": "Nike", "description": "The Nike Air Monarch IV Lifestyle/Gym Shoe delivers lightweight cushioning and durable support with a Phylon midsole and a leather upper. Flex grooves provide natural flexibility with every step.", "rating": "4.1", "reviews": "94", "product_name_stringindexer_transform": 172.0, "product_id_stringindexer_transform": 354.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 139.0, "rating_stringindexer_transform": 9.0, "reviews_stringindexer_transform": 41.0}, {"product_name": "Zoom Freak 1", "product_id": "BQ5422-200", "listing_price": 0, "sale_price": 9995, "discount": 0, "brand": "Nike", "description": "Get your freak on in Giannis Antetokounmpo's debut signature shoe, Nike's first-ever for the international basketball sensation. The Zoom Freak 1 has the extra-responsive cushioning, forefoot stability and multi-directional traction needed to complement his freakishly athletic game.", "rating": "4.2", "reviews": "30", "product_name_stringindexer_transform": 266.0, "product_id_stringindexer_transform": 331.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 213.0, "rating_stringindexer_transform": 5.0, "reviews_stringindexer_transform": 25.0}, {"product_name": "Nike Mercurial Superfly 7 Academy IC", "product_id": "AT7975-606", "listing_price": 0, "sale_price": 8495, "discount": 0, "brand": "Nike", "description": "The soft upper of the Nike Mercurial Superfly 7 Academy IC wraps your foot for a second-skin fit, while the rubber outsole helps supercharge traction on the court or street.", "rating": "5", "reviews": "1", "product_name_stringindexer_transform": 38.0, "product_id_stringindexer_transform": 15.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 6.0, "rating_stringindexer_transform": 0.0, "reviews_stringindexer_transform": 0.0}, {"product_name": "Air Jordan 1 Low", "product_id": "553558-125", "listing_price": 0, "sale_price": 8995, "discount": 0, "brand": "Nike", "description": "Inspired by the original that debuted in 1985, the Air Jordan 1 Low offers a clean, classic look that's familiar yet always fresh. It's made for casual mode, with an iconic design that goes with everything and never goes out of style.", "rating": "4.6", "reviews": "34", "product_name_stringindexer_transform": 60.0, "product_id_stringindexer_transform": 37.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 20.0, "rating_stringindexer_transform": 7.0, "reviews_stringindexer_transform": 13.0}, {"product_name": "Nike Mercurial Vapor 13 Elite FG", "product_id": "AQ4176-049", "listing_price": 0, "sale_price": 21995, "discount": 0, "brand": "Nike", "description": "Building on the 360-degree Flyknit innovation of the 12, the Nike Mercurial Vapor 13 Elite FG adds a Nike Aerowtrac zone to the forefoot and a slightly stiffer chassis to help supercharge traction. Inside, an insole with NikeGrip technology provides maximum interior traction underfoot and lightweight cushioning.", "rating": "3.5", "reviews": "4", "product_name_stringindexer_transform": 109.0, "product_id_stringindexer_transform": 32.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 39.0, "rating_stringindexer_transform": 13.0, "reviews_stringindexer_transform": 4.0}, {"product_name": "Nike Air VaporMax 360", "product_id": "CK2718-003", "listing_price": 0, "sale_price": 18995, "discount": 0, "brand": "Nike", "description": "Featuring a full-length foam midsole and VaporMax Air unit, the Nike Air VaporMax 360 gives you remarkable underfoot comfort with bold 2000s style inspired by the Air Max 360.", "rating": "4.1", "reviews": "10", "product_name_stringindexer_transform": 9.0, "product_id_stringindexer_transform": 237.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 61.0, "rating_stringindexer_transform": 9.0, "reviews_stringindexer_transform": 6.0}, {"product_name": "Nike Air Max 720", "product_id": "AO2924-401", "listing_price": 15995, "sale_price": 12797, "discount": 0, "brand": "Nike", "description": "The Nike Air Max 720 goes bigger than ever before with Nike's tallest Air unit yet, offering more air underfoot for unprecedented, all-day comfort. Has Air Max gone too far? We hope so.", "rating": "4.2", "reviews": "62", "product_name_stringindexer_transform": 76.0, "product_id_stringindexer_transform": 306.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 232.0, "rating_stringindexer_transform": 5.0, "reviews_stringindexer_transform": 37.0}, {"product_name": "Nike Zoom KD12", "product_id": "AR4229-003", "listing_price": 0, "sale_price": 12995, "discount": 0, "brand": "Nike", "description": "Kevin Durant always looks relaxed\u00e2\u20ac\u201duntil he attacks. His game is reserved yet explosive, difficult to guard and impossible to stop. The KD12 was built for his dominance and endless energy all game long, with the latest innovation in Nike Zoom Air technology.", "rating": "4.6", "reviews": "18", "product_name_stringindexer_transform": 16.0, "product_id_stringindexer_transform": 43.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 2.0, "rating_stringindexer_transform": 7.0, "reviews_stringindexer_transform": 9.0}, {"product_name": "Nike Free X Metcon 2", "product_id": "AQ8306-407", "listing_price": 9995, "sale_price": 7997, "discount": 0, "brand": "Nike", "description": "The Nike Free X Metcon will take you from a short run to your gym workout. Superior breathability and comfort combined with durability and response make this stable trainer perfect for even the most ambitious of fitness goals.", "rating": "3.4", "reviews": "23", "product_name_stringindexer_transform": 102.0, "product_id_stringindexer_transform": 162.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 257.0, "rating_stringindexer_transform": 17.0, "reviews_stringindexer_transform": 18.0}, {"product_name": "Nike Air Max 90", "product_id": "CD0881-104", "listing_price": 0, "sale_price": 9995, "discount": 0, "brand": "Nike", "description": "Clean lines, versatile and timeless\u00e2\u20ac\u201dthe people's shoe returns with the Nike Air Max 90. Featuring the same iconic Waffle sole, stitched overlays and classic TPU accents you've come to love, it lets you walk among the pantheon of Air.", "rating": "4.7", "reviews": "9", "product_name_stringindexer_transform": 0.0, "product_id_stringindexer_transform": 294.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 3.0, "rating_stringindexer_transform": 11.0, "reviews_stringindexer_transform": 12.0}, {"product_name": "Air Jordan 4 Retro SE", "product_id": "CT5342-007", "listing_price": 0, "sale_price": 18995, "discount": 0, "brand": "Nike", "description": "As fresh as its first release, the Air Jordan 4 Retro remakes Michael Jordan's 4th signature shoe for today's streetwear savants. Suede and textile materials provide lightweight durability and support, while Nike Air cushioning offers comfort with every step.", "rating": "4.8", "reviews": "11", "product_name_stringindexer_transform": 163.0, "product_id_stringindexer_transform": 212.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 282.0, "rating_stringindexer_transform": 6.0, "reviews_stringindexer_transform": 11.0}, {"product_name": "Nike SB Zoom Stefan Janoski Canvas RM Premium", "product_id": "AQ7878-003", "listing_price": 0, "sale_price": 7995, "discount": 0, "brand": "Nike", "description": "The Nike SB Zoom Stefan Janoski Canvas RM Premium pairs a minimal look with a modern fit. It has been updated with a new, plush sockliner and a flexible outsole for better boardfeel right out of the box.", "rating": "1", "reviews": "1", "product_name_stringindexer_transform": 25.0, "product_id_stringindexer_transform": 22.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 24.0, "rating_stringindexer_transform": 16.0, "reviews_stringindexer_transform": 0.0}, {"product_name": "Nike Zoom Rival Fly", "product_id": "CD7288-001", "listing_price": 7995, "sale_price": 6397, "discount": 0, "brand": "Nike", "description": "Inspired by Japan's Ekiden relay runners, the Nike Zoom Rival Fly features a futuristic look with a Zoom Air unit in the forefoot that gives you responsive propulsion. Flex grooves underneath optimise toe-off and soft foam cushions your stride. The mesh and synthetic upper blends strength and breathability.", "rating": "5", "reviews": "1", "product_name_stringindexer_transform": 183.0, "product_id_stringindexer_transform": 321.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 256.0, "rating_stringindexer_transform": 0.0, "reviews_stringindexer_transform": 0.0}, {"product_name": "Nike Pegasus 36 FlyEase (Extra Wide)", "product_id": "BV0612-001", "listing_price": 0, "sale_price": 9995, "discount": 0, "brand": "Nike", "description": "The Nike Air Zoom Pegasus 36 FlyEase (Extra-Wide) maintains everything you love about the Pegasus and adds a zip for effortless on and off. The no-tie lacing system adjusts easily for a secure feel as you tackle your miles.", "rating": "3", "reviews": "4", "product_name_stringindexer_transform": 161.0, "product_id_stringindexer_transform": 236.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 222.0, "rating_stringindexer_transform": 10.0, "reviews_stringindexer_transform": 4.0}, {"product_name": "Nike ISPA Air Max 720", "product_id": "CD2182-001", "listing_price": 17995, "sale_price": 14397, "discount": 0, "brand": "Nike", "description": "Utilising the latest innovations and Nike's ISPA project\u00e2\u20ac\u201dwhich touts a philosophy of improvise, scavenge, protect and adapt\u00e2\u20ac\u201dthe Nike ISPA Air Max 720 delivers smooth cushioning. It features an extra-large air unit, providing support along with innovative details inspired by modern life in the city.", "rating": "3", "reviews": "4", "product_name_stringindexer_transform": 258.0, "product_id_stringindexer_transform": 284.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 211.0, "rating_stringindexer_transform": 10.0, "reviews_stringindexer_transform": 4.0}, {"product_name": "Nike Epic Phantom React Flyknit", "product_id": "BV0417-401", "listing_price": 12995, "sale_price": 7797, "discount": 0, "brand": "Nike", "description": "\"Soft to the touch, the Nike Epic Phantom React Flyknit is lace-free for a slip-on style that gets you up and running in no time. A snug, secure, sock-like fit within a breathable Flyknit upper feels as though the Phantom \"\"disappears\"\" as you run.\"", "rating": "4.4", "reviews": "12", "product_name_stringindexer_transform": 93.0, "product_id_stringindexer_transform": 254.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 207.0, "rating_stringindexer_transform": 3.0, "reviews_stringindexer_transform": 8.0}, {"product_name": "Nike Air Zoom Pegasus 36", "product_id": "AQ2203-003", "listing_price": 0, "sale_price": 9995, "discount": 0, "brand": "Nike", "description": "The iconic Nike Air Zoom Pegasus 36 returns with more perforations and engineered mesh in the upper, which strategically target breathability across high-heat areas. A slimmer heel collar and tongue reduce bulk without compromising comfort, while exposed Flywire cables give you a snug fit at higher speeds.", "rating": "3.6", "reviews": "23", "product_name_stringindexer_transform": 6.0, "product_id_stringindexer_transform": 215.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 279.0, "rating_stringindexer_transform": 15.0, "reviews_stringindexer_transform": 18.0}, {"product_name": "Jordan Aerospace 720", "product_id": "BV5502-600", "listing_price": 0, "sale_price": 16995, "discount": 0, "brand": "Nike", "description": "With more Air underfoot, the Jordan Aerospace 720 delivers next-generation comfort with signature Jordan heritage.", "rating": "5", "reviews": "1", "product_name_stringindexer_transform": 160.0, "product_id_stringindexer_transform": 136.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 298.0, "rating_stringindexer_transform": 0.0, "reviews_stringindexer_transform": 0.0}, {"product_name": "Nike Air Max Plus III", "product_id": "CD7005-001", "listing_price": 0, "sale_price": 15995, "discount": 0, "brand": "Nike", "description": "Featuring the same Tuned Air technology that originally put it in the sneaker history books, the Nike Air Max Plus III updates the look with TPU fused to the upper while paying homage to the iconic colour fade.", "rating": "5", "reviews": "1", "product_name_stringindexer_transform": 71.0, "product_id_stringindexer_transform": 177.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 287.0, "rating_stringindexer_transform": 0.0, "reviews_stringindexer_transform": 0.0}, {"product_name": "Jordan Hydro 8", "product_id": "CD2803-001", "listing_price": 0, "sale_price": 3995, "discount": 0, "brand": "Nike", "description": "Made for athletes to relax in pre- and post-matches, the Jordan Hydro 8 works as an everyday, anytime slide. It offers the plush cushioning of a Solarsoft foam footbed and an adjustable strap.", "rating": "4", "reviews": "1", "product_name_stringindexer_transform": 138.0, "product_id_stringindexer_transform": 111.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 216.0, "rating_stringindexer_transform": 2.0, "reviews_stringindexer_transform": 0.0}, {"product_name": "Nike x Undercover React", "product_id": "CJ6971-001", "listing_price": 16995, "sale_price": 13597, "discount": 0, "brand": "Nike", "description": "Jun Takahashi's vision of chaos and balance comes to life in the modern age. The Nike x Undercover React pairs a classic welly with several technologies to create a shoe unlike any other.", "rating": "3.7", "reviews": "3", "product_name_stringindexer_transform": 240.0, "product_id_stringindexer_transform": 107.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 238.0, "rating_stringindexer_transform": 8.0, "reviews_stringindexer_transform": 2.0}, {"product_name": "Nike Air Max 98", "product_id": "640744-016", "listing_price": 16995, "sale_price": 10197, "discount": 0, "brand": "Nike", "description": "The Air Max 98 rode the wave of its legendary predecessor, debuting with full-length visible Air and fluid design lines. Now it returns, sporting the same signature look and a new run of colours.", "rating": "4.1", "reviews": "9", "product_name_stringindexer_transform": 8.0, "product_id_stringindexer_transform": 342.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 235.0, "rating_stringindexer_transform": 9.0, "reviews_stringindexer_transform": 12.0}, {"product_name": "Nike Air Max 200", "product_id": "AQ2568-100", "listing_price": 9995, "sale_price": 5997, "discount": 0, "brand": "Nike", "description": "With exceptional cushioning and modern detailing, the Nike Air Max 200 radiates cool while providing extreme comfort. Its design is inspired by patterns of energy radiating from the earth\u00e2\u20ac\u201dlike the flow of lava and the ocean's rhythmic waves.", "rating": "4.5", "reviews": "13", "product_name_stringindexer_transform": 94.0, "product_id_stringindexer_transform": 121.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 125.0, "rating_stringindexer_transform": 1.0, "reviews_stringindexer_transform": 15.0}, {"product_name": "Nike Air Max 90", "product_id": "CT2007-100", "listing_price": 0, "sale_price": 9995, "discount": 0, "brand": "Nike", "description": "\"The Nike Air Max 90 honours the OG with a revamped design that replicates the initial 1990 release. A \"\"clean slate\"\" colourway celebrates the shoe's 30th anniversary with the iconic Waffle sole.\"", "rating": "5", "reviews": "1", "product_name_stringindexer_transform": 0.0, "product_id_stringindexer_transform": 148.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 179.0, "rating_stringindexer_transform": 0.0, "reviews_stringindexer_transform": 0.0}, {"product_name": "Nike Air Zoom Terra Kiger 6", "product_id": "CJ0219-400", "listing_price": 0, "sale_price": 10995, "discount": 0, "brand": "Nike", "description": "The Nike Air Zoom Terra Kiger 6 is built to take on wet and rocky trails. Lightweight in design, it features a sleeker look with a woven heel for a secure fit and feel.", "rating": "5", "reviews": "2", "product_name_stringindexer_transform": 90.0, "product_id_stringindexer_transform": 283.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 69.0, "rating_stringindexer_transform": 0.0, "reviews_stringindexer_transform": 1.0}, {"product_name": "Nike Air Max 97 Utility", "product_id": "BQ5615-002", "listing_price": 15995, "sale_price": 11197, "discount": 0, "brand": "Nike", "description": "The Nike Air Max 97 Utility puts a cold-weather spin on a classic style. Synthetic panels, engineered rubber and reflective design touches let you feel secure when hitting the streets.", "rating": "5", "reviews": "1", "product_name_stringindexer_transform": 159.0, "product_id_stringindexer_transform": 318.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 173.0, "rating_stringindexer_transform": 0.0, "reviews_stringindexer_transform": 0.0}, {"product_name": "Jordan Jumpman 2020 PF", "product_id": "BQ3448-400", "listing_price": 0, "sale_price": 8995, "discount": 0, "brand": "Nike", "description": "The Jordan Jumpman 2020 PF delivers lightweight support for dynamic play on the court. A textile upper and secure midfoot webbing keep you moving freely during possessions.", "rating": "5", "reviews": "2", "product_name_stringindexer_transform": 154.0, "product_id_stringindexer_transform": 62.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 128.0, "rating_stringindexer_transform": 0.0, "reviews_stringindexer_transform": 1.0}, {"product_name": "Nike ACG React Terra Gobe", "product_id": "BV6344-001", "listing_price": 12995, "sale_price": 7797, "discount": 0, "brand": "Nike", "description": "The Nike ACG React Terra Gobe combines rugged durability with ACG style to get you where you need to go in comfort. The textile and synthetic upper is breathable and durable, and Nike React technology in the midsole provides an extremely smooth and comfortable ride.", "rating": "3.7", "reviews": "19", "product_name_stringindexer_transform": 200.0, "product_id_stringindexer_transform": 128.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 328.0, "rating_stringindexer_transform": 8.0, "reviews_stringindexer_transform": 14.0}, {"product_name": "Nike Air Force 1 '07 Essential", "product_id": "AO2132-401", "listing_price": 7995, "sale_price": 5597, "discount": 0, "brand": "Nike", "description": "Hoops in the park, Sunday BBQs and sunshine. The radiance lives on in the Nike Air Force 1 '07 Essential, the b-ball OG that puts a fresh spin on what you know best: crisp leather, bold colours and the perfect amount of flash to make you shine.", "rating": "4.4", "reviews": "5", "product_name_stringindexer_transform": 165.0, "product_id_stringindexer_transform": 320.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 270.0, "rating_stringindexer_transform": 3.0, "reviews_stringindexer_transform": 3.0}, {"product_name": "Nike Joyride Dual Run", "product_id": "CD4363-103", "listing_price": 0, "sale_price": 10995, "discount": 0, "brand": "Nike", "description": "The Nike Joyride Dual Run is designed to help make running feel easier and give your legs a day off. Tiny foam beads underfoot contour to your foot for cushioning that stands up to your mileage.", "rating": "4.8", "reviews": "5", "product_name_stringindexer_transform": 63.0, "product_id_stringindexer_transform": 247.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 239.0, "rating_stringindexer_transform": 6.0, "reviews_stringindexer_transform": 3.0}, {"product_name": "Jordan Proto-React Z", "product_id": "CI3794-600", "listing_price": 13995, "sale_price": 11197, "discount": 0, "brand": "Nike", "description": "Inspired by spacesuits, the Jordan Proto-React Z has a futuristic look with a fit and feel made for all-day wear. Responsive cushioning gives you more bounce with less weight, while an aeronautics-inspired shroud and snug bootie help keep you strapped in.", "rating": "4.6", "reviews": "5", "product_name_stringindexer_transform": 48.0, "product_id_stringindexer_transform": 17.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 57.0, "rating_stringindexer_transform": 7.0, "reviews_stringindexer_transform": 3.0}, {"product_name": "NikeCourt Air Zoom Vapor X", "product_id": "AA8030-108", "listing_price": 0, "sale_price": 14995, "discount": 0, "brand": "Nike", "description": "The NikeCourt Air Zoom Vapor X has an updated Dynamic Fit system with a full-length foot frame to provide ultimate lateral control. Its new generative outsole combined with a Zoom Air unit provides a lightweight, responsive feel on the court.", "rating": "3.3", "reviews": "13", "product_name_stringindexer_transform": 43.0, "product_id_stringindexer_transform": 317.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 217.0, "rating_stringindexer_transform": 25.0, "reviews_stringindexer_transform": 15.0}, {"product_name": "LeBron 17", "product_id": "BQ3177-100", "listing_price": 0, "sale_price": 16995, "discount": 0, "brand": "Nike", "description": "The LeBron 17 harnesses LeBron's strength and speed with containment and support for all-court domination. It features a lightweight mix of knit and heat-moulded yarns that gives each one a durable look and feel. Combined cushioning provides LeBron with the impact support and responsive energy return he needs to power through the long season.", "rating": "4.5", "reviews": "47", "product_name_stringindexer_transform": 87.0, "product_id_stringindexer_transform": 41.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 48.0, "rating_stringindexer_transform": 1.0, "reviews_stringindexer_transform": 30.0}, {"product_name": "Nike Benassi", "product_id": "343881-412", "listing_price": 0, "sale_price": 2495, "discount": 0, "brand": "Nike", "description": "The Nike Benassi Women's Slide features a lined upper with a bold logo for plush comfort and an athletic look. A foam midsole and outsole provide lightweight impact protection.", "rating": "4.3", "reviews": "12", "product_name_stringindexer_transform": 17.0, "product_id_stringindexer_transform": 190.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 248.0, "rating_stringindexer_transform": 4.0, "reviews_stringindexer_transform": 8.0}, {"product_name": "Nike Air Max Dia Icon Clash", "product_id": "AQ4312-107", "listing_price": 8995, "sale_price": 5397, "discount": 0, "brand": "Nike", "description": "The Nike Air Max Dia Icon Clash delivers a lifted look and airy aesthetic in a sleek shape. The minimal upper modernises the look, while a Max Air unit, surrounded by clear TPU, is amplified even further by an exaggerated midsole for a boost of style.", "rating": "4.6", "reviews": "23", "product_name_stringindexer_transform": 232.0, "product_id_stringindexer_transform": 358.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 240.0, "rating_stringindexer_transform": 7.0, "reviews_stringindexer_transform": 18.0}, {"product_name": "Air Jordan XXXIV PF", "product_id": "BQ3381-600", "listing_price": 0, "sale_price": 14995, "discount": 0, "brand": "Nike", "description": "The Air Jordan XXXIV PF continues the legacy of a cultural icon. Light, responsive and sculpted with aerodynamic precision, it combines a boldly unconventional midsole with herringbone traction to merge innovative and iconic design elements.", "rating": "5", "reviews": "2", "product_name_stringindexer_transform": 103.0, "product_id_stringindexer_transform": 42.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 19.0, "rating_stringindexer_transform": 0.0, "reviews_stringindexer_transform": 1.0}, {"product_name": "Nike Air Zoom Winflo 5", "product_id": "AA7406-006", "listing_price": 7995, "sale_price": 6397, "discount": 0, "brand": "Nike", "description": "The Nike Air Zoom Winflo 5 Men's Running Shoe provides a responsive ride and durable, multi-surface traction underfoot. Up top, engineered mesh delivers support and breathability where you need them, while an inner sleeve gives you a comfortable, sock-like fit as you hit your stride.", "rating": "3", "reviews": "6", "product_name_stringindexer_transform": 170.0, "product_id_stringindexer_transform": 171.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 251.0, "rating_stringindexer_transform": 10.0, "reviews_stringindexer_transform": 5.0}, {"product_name": "Nike Air Max 90", "product_id": "CD0917-300", "listing_price": 11995, "sale_price": 7197, "discount": 0, "brand": "Nike", "description": "With the Nike Air Max 90, a legendary shoe gets a luxe material treatment and brash colour palette with a history all of its own. Here, the Air Max 90 silhouette is clad in premium all-over suede with ballistic mesh accents to keep it breathable. This vibrant palette of saturated colours was made famous in the original Viotech release, which launched exclusively in Japan in the early 2000s. The head-turners have another classic to admire.", "rating": "3.2", "reviews": "5", "product_name_stringindexer_transform": 0.0, "product_id_stringindexer_transform": 326.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 0.0, "rating_stringindexer_transform": 26.0, "reviews_stringindexer_transform": 3.0}, {"product_name": "PG 3 NASA", "product_id": "CI2666-400", "listing_price": 9995, "sale_price": 7997, "discount": 0, "brand": "Nike", "description": "Paul George's moon shot took him from Palmdale to basketball stardom, and now he's heading to new heights. This space-themed version of the PG 3 offers sensational traction, springy responsiveness and lightweight containment for seamless moves between offence and defence.", "rating": "3.7", "reviews": "11", "product_name_stringindexer_transform": 78.0, "product_id_stringindexer_transform": 7.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 59.0, "rating_stringindexer_transform": 8.0, "reviews_stringindexer_transform": 11.0}, {"product_name": "Nike React Sertu", "product_id": "AT5301-003", "listing_price": 0, "sale_price": 12995, "discount": 0, "brand": "Nike", "description": "Emerging from The 10th, a new label that crosses tried-and-true workwear with Nike innovation, the Nike React Sertu blends handcrafted features with modern, technical elements. Borrowing elements from traditional moccasins and adding a touch of military-inspired detailing, it mixes utility with wearability, bringing a bold new look to the streets.", "rating": "5", "reviews": "2", "product_name_stringindexer_transform": 189.0, "product_id_stringindexer_transform": 109.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 97.0, "rating_stringindexer_transform": 0.0, "reviews_stringindexer_transform": 1.0}, {"product_name": "Nike React Element 55 SE", "product_id": "CD2153-001", "listing_price": 0, "sale_price": 10995, "discount": 0, "brand": "Nike", "description": "The Nike React Element 55 SE borrows design lines from heritage runners like the Nike Internationalist, adds premium details and places it all on Nike React technology.", "rating": "5", "reviews": "1", "product_name_stringindexer_transform": 2.0, "product_id_stringindexer_transform": 97.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 309.0, "rating_stringindexer_transform": 0.0, "reviews_stringindexer_transform": 0.0}, {"product_name": "Nike SB Zoom Stefan Janoski Mid RM", "product_id": "AT7324-001", "listing_price": 7995, "sale_price": 6397, "discount": 0, "brand": "Nike", "description": "The Nike SB Zoom Stefan Janoski Mid RM pairs a minimal look with a modern fit. It has been updated with a new, plush sockliner and a flexible midsole for better boardfeel right out of the box.", "rating": "5", "reviews": "1", "product_name_stringindexer_transform": 30.0, "product_id_stringindexer_transform": 39.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 29.0, "rating_stringindexer_transform": 0.0, "reviews_stringindexer_transform": 0.0}, {"product_name": "Nike Air Max Alpha Savage", "product_id": "AT3378-471", "listing_price": 0, "sale_price": 8995, "discount": 0, "brand": "Nike", "description": "The Nike Air Max Alpha Savage invokes Air Max style, stability and comfort in a modern design. Webbing integrates with the laces for midfoot containment, while Max Air cushioning delivers responsive comfort during your most intense workouts.", "rating": "4.2", "reviews": "5", "product_name_stringindexer_transform": 132.0, "product_id_stringindexer_transform": 70.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 296.0, "rating_stringindexer_transform": 5.0, "reviews_stringindexer_transform": 3.0}, {"product_name": "Nike React Vision", "product_id": "CD4373-001", "listing_price": 0, "sale_price": 10995, "discount": 0, "brand": "Nike", "description": "The Nike React Vision is a story of surreal comfort. Layered textures, shapes and vivid colours are combined in a design influenced by the exaggerated world of our dreams, while React foam and an ultra-plush tongue provide surreal comfort. DIMSIX on the tongue tab rises high off the collar to add just a touch of Nike's own origin story.", "rating": "4.7", "reviews": "3", "product_name_stringindexer_transform": 65.0, "product_id_stringindexer_transform": 64.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 66.0, "rating_stringindexer_transform": 11.0, "reviews_stringindexer_transform": 2.0}, {"product_name": "Jordan Trunner NXT React", "product_id": "AV1201-600", "listing_price": 0, "sale_price": 11995, "discount": 0, "brand": "Nike", "description": "Ready for the toughest workouts, the Jordan Trunner NXT features incredibly responsive cushioning and a breathable, lightweight upper.", "rating": "5", "reviews": "3", "product_name_stringindexer_transform": 174.0, "product_id_stringindexer_transform": 151.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 271.0, "rating_stringindexer_transform": 0.0, "reviews_stringindexer_transform": 2.0}, {"product_name": "Kyrie Low 2", "product_id": "AV6337-003", "listing_price": 0, "sale_price": 9495, "discount": 0, "brand": "Nike", "description": "Kyrie's ability to make quick, sharp cuts while handling the ball gives his game an unrivalled edge. Loaded with responsive cushioning, the Kyrie Low 2 features a curved outsole and traction that wraps up the sides, ideal for quick players who continually work the angles to break down the defence.", "rating": "4.5", "reviews": "4", "product_name_stringindexer_transform": 185.0, "product_id_stringindexer_transform": 208.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 93.0, "rating_stringindexer_transform": 1.0, "reviews_stringindexer_transform": 4.0}, {"product_name": "Nike Zoom Pegasus Turbo 2", "product_id": "CN6928-300", "listing_price": 0, "sale_price": 15995, "discount": 0, "brand": "Nike", "description": "The Nike Zoom Pegasus Turbo 2 Hakone is updated with a feather-light upper, while energy-returning foam brings revolutionary responsiveness to your long distance training.", "rating": "4", "reviews": "4", "product_name_stringindexer_transform": 5.0, "product_id_stringindexer_transform": 104.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 196.0, "rating_stringindexer_transform": 2.0, "reviews_stringindexer_transform": 4.0}, {"product_name": "Nike React Infinity Run Flyknit", "product_id": "CD4372-004", "listing_price": 0, "sale_price": 13995, "discount": 0, "brand": "Nike", "description": "With the Nike Air Max 90, a legendary shoe gets a luxe material treatment and brash colour palette with a history all of its own. Here, the Air Max 90 silhouette is clad in premium all-over suede with ballistic mesh accents to keep it breathable. This vibrant palette of saturated colours was made famous in the original Viotech release, which launched exclusively in Japan in the early 2000s. The head-turners have another classic to admire.", "rating": "4.2", "reviews": "29", "product_name_stringindexer_transform": 51.0, "product_id_stringindexer_transform": 84.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 0.0, "rating_stringindexer_transform": 5.0, "reviews_stringindexer_transform": 51.0}, {"product_name": "Nike Tiempo Legend 8 Academy MG", "product_id": "AT5292-606", "listing_price": 0, "sale_price": 6495, "discount": 0, "brand": "Nike", "description": "The Nike Tiempo Legend 8 Academy MG takes the legendary touch of calfskin leather and adds a versatile multi-ground plate for traction on natural- and artificial-grass surfaces.", "rating": "2", "reviews": "1", "product_name_stringindexer_transform": 24.0, "product_id_stringindexer_transform": 302.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 9.0, "rating_stringindexer_transform": 20.0, "reviews_stringindexer_transform": 0.0}, {"product_name": "Kyrie 5", "product_id": "AQ2456-007", "listing_price": 0, "sale_price": 8495, "discount": 0, "brand": "Nike", "description": "Responsive and supportive, the Kyrie 5 is made with a soft midsole for responsive cushioning and a curved outsole for multi-directional traction.", "rating": "5", "reviews": "3", "product_name_stringindexer_transform": 184.0, "product_id_stringindexer_transform": 216.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 153.0, "rating_stringindexer_transform": 0.0, "reviews_stringindexer_transform": 2.0}, {"product_name": "Nike Air Force 1 '07", "product_id": "315122-001", "listing_price": 0, "sale_price": 7295, "discount": 0, "brand": "Nike", "description": "Hoops in the park, Sunday BBQs and sunshine. The radiance lives on in the Nike Air Force 1 '07, the b-ball OG that puts a fresh spin on what you know best: crisp leather in an all-black colourway for a statement look on and off the court.", "rating": "4.5", "reviews": "78", "product_name_stringindexer_transform": 106.0, "product_id_stringindexer_transform": 287.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 126.0, "rating_stringindexer_transform": 1.0, "reviews_stringindexer_transform": 36.0}, {"product_name": "LeBron Soldier 13 SFG", "product_id": "AR4225-003", "listing_price": 11995, "sale_price": 9597, "discount": 0, "brand": "Nike", "description": "LeBron works hard in the offseason, getting stronger and fine-tuning his already devastating skills. Inspired by his dedication and commitment to inclusivity, the Soldier 13 SFG combines LeBron-tested cushioning, containment and support with a wide, flexible collar and lace-free closure that lets all players get in and out of the shoe with ease.", "rating": "4.2", "reviews": "6", "product_name_stringindexer_transform": 33.0, "product_id_stringindexer_transform": 305.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 60.0, "rating_stringindexer_transform": 5.0, "reviews_stringindexer_transform": 5.0}, {"product_name": "Nike Phantom Vision 2 Elite Dynamic Fit FG", "product_id": "CD4161-606", "listing_price": 0, "sale_price": 22995, "discount": 0, "brand": "Nike", "description": "The Nike Phantom Vision 2 Elite Dynamic Fit FG brings a new level of fierce precision to the field. A foot-hugging inner sleeve is concealed in a textured Flyknit outer layer to create a boot for the finishers, the providers and the battlers of tomorrow's game.", "rating": "5", "reviews": "1", "product_name_stringindexer_transform": 34.0, "product_id_stringindexer_transform": 31.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 10.0, "rating_stringindexer_transform": 0.0, "reviews_stringindexer_transform": 0.0}, {"product_name": "Nike Air Skarn", "product_id": "CD2189-002", "listing_price": 9995, "sale_price": 6997, "discount": 0, "brand": "Nike", "description": "Hiking shoes don't need to be big and bulky, and the Nike Air Skarn proves it. Originally launched in 1997, this reintroduction of a classic is lightweight, comfortable and tougher than it looks.", "rating": "4.5", "reviews": "2", "product_name_stringindexer_transform": 126.0, "product_id_stringindexer_transform": 187.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 111.0, "rating_stringindexer_transform": 1.0, "reviews_stringindexer_transform": 1.0}, {"product_name": "Nike Air Max 270 SE", "product_id": "CD6615-100", "listing_price": 0, "sale_price": 13995, "discount": 0, "brand": "Nike", "description": "The Nike Air Max 270 SE is inspired by 2 icons of Air: the Air Max 180 and the Air Max 93. It features Nike's biggest heel Air unit yet for a super-soft ride that feels as comfortable as it looks.", "rating": "5", "reviews": "1", "product_name_stringindexer_transform": 124.0, "product_id_stringindexer_transform": 274.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 191.0, "rating_stringindexer_transform": 0.0, "reviews_stringindexer_transform": 0.0}, {"product_name": "Nike SB Blazer Low XT", "product_id": "864348-019", "listing_price": 7995, "sale_price": 6397, "discount": 0, "brand": "Nike", "description": "The Nike SB Blazer Low XT Men's Skateboarding Shoe retools the classic profile for extra-tough sessions, adding lightweight impact protection.", "rating": "5", "reviews": "2", "product_name_stringindexer_transform": 140.0, "product_id_stringindexer_transform": 55.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 311.0, "rating_stringindexer_transform": 0.0, "reviews_stringindexer_transform": 1.0}, {"product_name": "Nike Huarache Type", "product_id": "BQ5102-400", "listing_price": 10995, "sale_price": 6597, "discount": 0, "brand": "Nike", "description": "Part of the N354 family that nods to Steve Prefontaine's fastest mile, the Nike Huarache Type is based on one of the most legendary sneakers from Nike's All Conditions Gear line-up, the Nike Mowabb. Using an adjustable approach to the Huarache system, this shoe is an exploration of fit and comfort.", "rating": "4.5", "reviews": "2", "product_name_stringindexer_transform": 210.0, "product_id_stringindexer_transform": 222.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 291.0, "rating_stringindexer_transform": 1.0, "reviews_stringindexer_transform": 1.0}, {"product_name": "Nike Zoom Vomero 5 SE SP", "product_id": "CI1694-300", "listing_price": 13995, "sale_price": 11197, "discount": 0, "brand": "Nike", "description": "The Nike Zoom Vomero 5 SE SP wraps your foot in breathable support. A combination of durable synthetic leather and breathable mesh stands ready for the rigours of your day. Soft foam and Zoom Air cushioning deliver lightweight comfort for a smooth ride.", "rating": "5", "reviews": "1", "product_name_stringindexer_transform": 192.0, "product_id_stringindexer_transform": 181.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 200.0, "rating_stringindexer_transform": 0.0, "reviews_stringindexer_transform": 0.0}, {"product_name": "Nike Benassi JDI", "product_id": "631261-035", "listing_price": 0, "sale_price": 2795, "discount": 0, "brand": "Nike", "description": "The Nike Benassi JDI Slide features a soft foam midsole and plush, jersey fabric lining the strap. Its heritage logo adds the perfect amount of flash.", "rating": "3", "reviews": "5", "product_name_stringindexer_transform": 164.0, "product_id_stringindexer_transform": 298.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 276.0, "rating_stringindexer_transform": 10.0, "reviews_stringindexer_transform": 3.0}, {"product_name": "Kyrie 6 'Enlightenment'", "product_id": "BQ4630-500", "listing_price": 10995, "sale_price": 8797, "discount": 0, "brand": "Nike", "description": "In spiritual circles, the colour purple represents enlightenment. It speaks to being fully connected to your spiritual mind by tapping into an inner source of potential that was otherwise undiscovered. The Kyrie 6 'Enlightenment' plays up the unseen spirituality theme with an all-seeing eye graphic on the side of the upper and a purple colour scheme.", "rating": "4.4", "reviews": "10", "product_name_stringindexer_transform": 86.0, "product_id_stringindexer_transform": 1.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 13.0, "rating_stringindexer_transform": 3.0, "reviews_stringindexer_transform": 6.0}, {"product_name": "Nike Tiempo Legend 8 Academy IC", "product_id": "AT6099-606", "listing_price": 0, "sale_price": 6495, "discount": 0, "brand": "Nike", "description": "The Nike Tiempo Legend 8 Academy IC takes the legendary touch of calfskin leather and adds cushioning that equips you for the court or the streets. A mesh tongue and collar lining add breathability and street style.", "rating": "5", "reviews": "1", "product_name_stringindexer_transform": 27.0, "product_id_stringindexer_transform": 8.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 45.0, "rating_stringindexer_transform": 0.0, "reviews_stringindexer_transform": 0.0}, {"product_name": "Nike React Presto Premium", "product_id": "CN7664-800", "listing_price": 0, "sale_price": 10995, "discount": 0, "brand": "Nike", "description": "The Nike React Presto Premium features an innovative React foam midsole that delivers a futuristic look and bouncy, lightweight feel for all-day comfort with a whole lot of personality.", "rating": "5", "reviews": "1", "product_name_stringindexer_transform": 151.0, "product_id_stringindexer_transform": 49.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 157.0, "rating_stringindexer_transform": 0.0, "reviews_stringindexer_transform": 0.0}, {"product_name": "Zoom Freak 1 'Employee of the Month'", "product_id": "CD4962-001", "listing_price": 0, "sale_price": 9995, "discount": 0, "brand": "Nike", "description": "Get your freak on in Giannis Antetokounmpo's debut signature shoe, Nike's first ever for the international basketball sensation. The Zoom Freak 1 has the extra-responsive cushioning, forefoot lockdown and multi-directional traction needed to complement his freakishly athletic game.", "rating": "5", "reviews": "1", "product_name_stringindexer_transform": 216.0, "product_id_stringindexer_transform": 144.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 255.0, "rating_stringindexer_transform": 0.0, "reviews_stringindexer_transform": 0.0}, {"product_name": "Nike ZoomX Vaporfly NEXT%", "product_id": "AO4568-600", "listing_price": 0, "sale_price": 19995, "discount": 0, "brand": "Nike", "description": "The Nike ZoomX Vaporfly NEXT% clears your path to record-breaking speed with a lighter design and faster feel than before. With more cushioning underfoot and reduced weight up top, the result is unprecedented energy return and comfort.", "rating": "4.7", "reviews": "45", "product_name_stringindexer_transform": 55.0, "product_id_stringindexer_transform": 20.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 22.0, "rating_stringindexer_transform": 11.0, "reviews_stringindexer_transform": 22.0}, {"product_name": "Nike SB Check", "product_id": "705265-006", "listing_price": 0, "sale_price": 5495, "discount": 0, "brand": "Nike", "description": "Crafted from soft suede, the Nike SB Check is reinforced in key areas for the durability you need to skate all day long.", "rating": "5", "reviews": "1", "product_name_stringindexer_transform": 117.0, "product_id_stringindexer_transform": 91.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 194.0, "rating_stringindexer_transform": 0.0, "reviews_stringindexer_transform": 0.0}, {"product_name": "Nike Air Zoom Structure 22", "product_id": "AA1636-406", "listing_price": 9995, "sale_price": 6997, "discount": 0, "brand": "Nike", "description": "The Nike Air Zoom Structure 22 Men's Running Shoe looks fast and feels secure. Engineered mesh, a heel overlay and dynamic support throughout the midfoot all work together to provide a smooth, stable ride.", "rating": "3.6", "reviews": "10", "product_name_stringindexer_transform": 49.0, "product_id_stringindexer_transform": 250.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 159.0, "rating_stringindexer_transform": 15.0, "reviews_stringindexer_transform": 6.0}, {"product_name": "Nike Drop-Type Mid", "product_id": "BQ5190-101", "listing_price": 6995, "sale_price": 4897, "discount": 0, "brand": "Nike", "description": "Part of the N354 family that nods to Steve Prefontaine's fastest mile, the Nike Drop-Type Mid is inspired by classic tennis shoes in the NikeCourt family. With distinct design lines that borrow from the All Court 2, it puts a raw, experimental edge on an iconic look.", "rating": "5", "reviews": "1", "product_name_stringindexer_transform": 202.0, "product_id_stringindexer_transform": 167.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 120.0, "rating_stringindexer_transform": 0.0, "reviews_stringindexer_transform": 0.0}, {"product_name": "Nike iSPA React", "product_id": "CT2692-002", "listing_price": 0, "sale_price": 13995, "discount": 0, "brand": "Nike", "description": "Utilising the latest innovations and Nike's new iSPA project\u00e2\u20ac\u201dwhich touts a philosophy of improvise, scavenge, protect and adapt\u00e2\u20ac\u201dthe Nike iSPA React takes experimental expression and runs with it. Its low-top design features a tape-like upper nodding to the power of improvisation in the face of adversity.", "rating": "4.6", "reviews": "14", "product_name_stringindexer_transform": 141.0, "product_id_stringindexer_transform": 83.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 130.0, "rating_stringindexer_transform": 7.0, "reviews_stringindexer_transform": 20.0}, {"product_name": "NikeCourt Air Zoom Zero", "product_id": "AA8018-101", "listing_price": 0, "sale_price": 11995, "discount": 0, "brand": "Nike", "description": "Featuring the first full-length Zoom Air unit in NikeCourt history, the NikeCourt Air Zoom Zero delivers exceptional responsiveness and great court feel. Its snug-fitting upper and webbed lacing system offer second-skin-like comfort and lockdown.", "rating": "4.3", "reviews": "10", "product_name_stringindexer_transform": 70.0, "product_id_stringindexer_transform": 133.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 304.0, "rating_stringindexer_transform": 4.0, "reviews_stringindexer_transform": 6.0}, {"product_name": "Nike Air Force Max II", "product_id": "AV6243-400", "listing_price": 0, "sale_price": 13995, "discount": 0, "brand": "Nike", "description": "The game has gone small, so bigs have to be faster, more agile and more versatile to stay relevant. Keeping pace with ever-evolving player needs, the Nike Air Force Max II provides the responsive cushioning that allows big players to keep crashing the boards and banging in the post, while helping them stay light and quick on the break.", "rating": "4.5", "reviews": "2", "product_name_stringindexer_transform": 271.0, "product_id_stringindexer_transform": 80.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 91.0, "rating_stringindexer_transform": 1.0, "reviews_stringindexer_transform": 1.0}, {"product_name": "Nike Air Max 97 SE", "product_id": "AQ4126-100", "listing_price": 15995, "sale_price": 12797, "discount": 0, "brand": "Nike", "description": "The Nike Air Max 97 shook up the running world with its revolutionary full-length Nike Air unit. The Nike Air Max 97 SE Men's Shoe refreshes the original design with new colours and materials.", "rating": "4.5", "reviews": "2", "product_name_stringindexer_transform": 229.0, "product_id_stringindexer_transform": 197.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 228.0, "rating_stringindexer_transform": 1.0, "reviews_stringindexer_transform": 1.0}, {"product_name": "NikeCourt Air Zoom Resistance", "product_id": "918194-003", "listing_price": 6995, "sale_price": 5597, "discount": 0, "brand": "Nike", "description": "The NikeCourt Air Zoom Resistance delivers lightweight durability on the hard court with a performance leather upper.", "rating": "2.5", "reviews": "6", "product_name_stringindexer_transform": 181.0, "product_id_stringindexer_transform": 185.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 74.0, "rating_stringindexer_transform": 33.0, "reviews_stringindexer_transform": 5.0}, {"product_name": "Nike Mercurial Superfly 7 Elite MDS FG", "product_id": "BQ5469-703", "listing_price": 0, "sale_price": 24995, "discount": 0, "brand": "Nike", "description": "Dream of speed and play fast in the Nike Mercurial Superfly 7 Elite MDS FG. A streamlined upper combines with a Nike Aerowtrac zone for high-speed play and supercharged traction.", "rating": "5", "reviews": "1", "product_name_stringindexer_transform": 74.0, "product_id_stringindexer_transform": 9.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 49.0, "rating_stringindexer_transform": 0.0, "reviews_stringindexer_transform": 0.0}, {"product_name": "Nike Solarsoft", "product_id": "488161-602", "listing_price": 0, "sale_price": 1595, "discount": 0, "brand": "Nike", "description": "Made with soft, pliable foam infused with grooves for superb airflow, the Nike Solarsoft Women's Flip Flop is a must-have in warm weather.", "rating": "3.8", "reviews": "5", "product_name_stringindexer_transform": 178.0, "product_id_stringindexer_transform": 67.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 178.0, "rating_stringindexer_transform": 14.0, "reviews_stringindexer_transform": 3.0}, {"product_name": "Air Jordan 11 Retro Low", "product_id": "528895-003", "listing_price": 16995, "sale_price": 11897, "discount": 0, "brand": "Nike", "description": "Since bursting onto the basketball scene in 1996, the Air Jordan 11 Retro Low Men's Shoe has been one of the most beloved Jordan designs ever. Signature details and Nike Air cushioning combine for the ultimate fusion of style and comfort.", "rating": "4.4", "reviews": "25", "product_name_stringindexer_transform": 221.0, "product_id_stringindexer_transform": 325.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 167.0, "rating_stringindexer_transform": 3.0, "reviews_stringindexer_transform": 24.0}, {"product_name": "Nike Zoom Fly 3 Premium", "product_id": "CD4570-300", "listing_price": 0, "sale_price": 14995, "discount": 0, "brand": "Nike", "description": "Inspired by the Vaporfly, the Nike Zoom Fly 3 Premium gives distance runners race-day comfort and durability. The power of a carbon-fibre plate keeps you in the running mile after mile.", "rating": "5", "reviews": "3", "product_name_stringindexer_transform": 21.0, "product_id_stringindexer_transform": 322.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 140.0, "rating_stringindexer_transform": 0.0, "reviews_stringindexer_transform": 2.0}, {"product_name": "Nike Zoom Gravity", "product_id": "BQ3203-007", "listing_price": 7995, "sale_price": 6397, "discount": 0, "brand": "Nike", "description": "Designed to make fast go faster, the Nike Zoom Gravity is built to take you from quick tempo runs to winning races. Snappy forefoot responsiveness and grippy, multi-surface traction combine to optimise your stride.", "rating": "3.7", "reviews": "18", "product_name_stringindexer_transform": 42.0, "product_id_stringindexer_transform": 249.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 262.0, "rating_stringindexer_transform": 8.0, "reviews_stringindexer_transform": 9.0}, {"product_name": "Nike Air Max 720 BETRUE", "product_id": "CJ5472-900", "listing_price": 0, "sale_price": 15995, "discount": 0, "brand": "Nike", "description": "Designed in collaboration with Gilbert Baker, the Nike Air Max 720 BETRUE features a rainbow-coloured upper inspired by, and in celebration of, the LGBTQ community.", "rating": "5", "reviews": "1", "product_name_stringindexer_transform": 75.0, "product_id_stringindexer_transform": 40.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 8.0, "rating_stringindexer_transform": 0.0, "reviews_stringindexer_transform": 0.0}, {"product_name": "Nike Air Force 1 Mid '07", "product_id": "315123-111", "listing_price": 0, "sale_price": 7595, "discount": 0, "brand": "Nike", "description": "The legend lives on in the Nike Air Force 1 Mid '07 Men's Shoe, a modern take on the icon that blends classic style and fresh, crisp details.", "rating": "4.5", "reviews": "13", "product_name_stringindexer_transform": 99.0, "product_id_stringindexer_transform": 134.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 176.0, "rating_stringindexer_transform": 1.0, "reviews_stringindexer_transform": 15.0}, {"product_name": "Nike Air Max 2017", "product_id": "849559-004", "listing_price": 0, "sale_price": 15995, "discount": 0, "brand": "Nike", "description": "The Nike Air Max 2017 Men's Shoe features a seamless Flymesh upper for support and breathability. Iconic Max Air cushioning provides a lightweight, smooth feel with each step, whether you're running your three-miler or running your day.", "rating": "2.9", "reviews": "71", "product_name_stringindexer_transform": 79.0, "product_id_stringindexer_transform": 316.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 193.0, "rating_stringindexer_transform": 24.0, "reviews_stringindexer_transform": 46.0}, {"product_name": "Nike EXP-X14 SE", "product_id": "AO3095-100", "listing_price": 0, "sale_price": 11995, "discount": 0, "brand": "Nike", "description": "\"Drawing inspiration from Nike running shoes such as the Nike Zoom Vaporfly Elite, the Nike EXP-X14 SE Men's Shoe races off the track and onto the street with a fast design and shape. Nike React technology delivers lightweight durability and a smooth feel, while the layered upper showcases Flywire cables and a bold \"\"Just Do It\"\" tagline.\"", "rating": "5", "reviews": "2", "product_name_stringindexer_transform": 244.0, "product_id_stringindexer_transform": 310.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 294.0, "rating_stringindexer_transform": 0.0, "reviews_stringindexer_transform": 1.0}, {"product_name": "Nike x Undercover Air Max 720", "product_id": "CN2408-001", "listing_price": 0, "sale_price": 16995, "discount": 0, "brand": "Nike", "description": "The Nike x Undercover Air Max 720 brings Jun Takahashi's vision of chaos and balance to Air. 360 degrees of cushioning and a breathable design capture Takahashi's view of the future of fashion.", "rating": "4", "reviews": "3", "product_name_stringindexer_transform": 251.0, "product_id_stringindexer_transform": 230.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 171.0, "rating_stringindexer_transform": 2.0, "reviews_stringindexer_transform": 2.0}, {"product_name": "Air Jordan 13 Retro", "product_id": "414571-030", "listing_price": 0, "sale_price": 15995, "discount": 0, "brand": "Nike", "description": "Featuring a panther-inspired design that takes after Michael Jordan's on-court presence, the Air Jordan 13 Retro is based on the OG model and has the same responsive cushioning and premium materials that made it famous in the '90s.", "rating": "3.9", "reviews": "34", "product_name_stringindexer_transform": 36.0, "product_id_stringindexer_transform": 4.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 30.0, "rating_stringindexer_transform": 12.0, "reviews_stringindexer_transform": 13.0}, {"product_name": "Nike Cortez '72 S.D.", "product_id": "CJ2586-100", "listing_price": 7995, "sale_price": 4797, "discount": 0, "brand": "Nike", "description": "\"Inspired by Phil Knight's \"\"Shoe Dog\"\"", "rating": " the Nike Cortez '72 S.D. returns to the OG design with zigzag edges", "reviews": " an exposed foam tongue and minimalist leather. Why? Because you don't change what works.\"", "product_name_stringindexer_transform": 187.0, "product_id_stringindexer_transform": 313.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 146.0, "rating_stringindexer_transform": 27.0, "reviews_stringindexer_transform": 35.0}, {"product_name": "Nike Xarr", "product_id": "BQ5240-200", "listing_price": 12995, "sale_price": 9097, "discount": 0, "brand": "Nike", "description": "The Nike Xarr sets you up to take on the elements in style. It's crafted with a water-resistant leather upper to help keep you dry and a rubber outsole to combat the season's wet conditions. With intricate detailing and a stylised tongue cover, it's a fresh new look with lots of attitude.", "rating": "4.8", "reviews": "4", "product_name_stringindexer_transform": 114.0, "product_id_stringindexer_transform": 99.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 206.0, "rating_stringindexer_transform": 6.0, "reviews_stringindexer_transform": 4.0}, {"product_name": "Nike Air Force 1 GORE-TEX \u00c2\u00ae", "product_id": "CK2630-700", "listing_price": 12995, "sale_price": 9097, "discount": 0, "brand": "Nike", "description": "The Nike Air Force 1 GORE-TEX \u00c2\u00ae retools the classic Air Force 1 with a street-approved design that meets the standards of GORE-TEX \u00c2\u00ae waterproof technology. It features water-wicking flat laces, a GORE-TEX \u00c2\u00ae bootie and GORE-TEX \u00c2\u00ae branding on the heel.", "rating": "4.1", "reviews": "18", "product_name_stringindexer_transform": 62.0, "product_id_stringindexer_transform": 252.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 62.0, "rating_stringindexer_transform": 9.0, "reviews_stringindexer_transform": 9.0}, {"product_name": "Kyrie 6 EP 'Chinese New Year'", "product_id": "CD5029-001", "listing_price": 0, "sale_price": 10995, "discount": 0, "brand": "Nike", "description": "According to the four-year cycle of the Chinese zodiac, the year of the mouse represents growth. Through the folk-art tradition of Jianzhi (paper cutting), the Kyrie 6 'Chinese New Year' honours major breakthroughs in Nike innovation with a graphic on the tongue. A watercolour-themed print completes the art-inspired CNY theme.", "rating": "5", "reviews": "1", "product_name_stringindexer_transform": 198.0, "product_id_stringindexer_transform": 68.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 209.0, "rating_stringindexer_transform": 0.0, "reviews_stringindexer_transform": 0.0}, {"product_name": "Nike Zoom KD12", "product_id": "CK1195-101", "listing_price": 0, "sale_price": 12995, "discount": 0, "brand": "Nike", "description": "Kevin Durant always looks relaxed\u00e2\u20ac\u201duntil he attacks. His game is reserved yet explosive, difficult to guard and impossible to stop. The KD12 was built for his dominance and endless energy all game long, with the latest innovation in Nike Zoom Air technology.", "rating": "5", "reviews": "1", "product_name_stringindexer_transform": 16.0, "product_id_stringindexer_transform": 293.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 2.0, "rating_stringindexer_transform": 0.0, "reviews_stringindexer_transform": 0.0}, {"product_name": "Nike Epic React Flyknit 2", "product_id": "BQ8928-011", "listing_price": 12995, "sale_price": 10397, "discount": 0, "brand": "Nike", "description": "The Nike Epic React Flyknit 2 takes a step up from its predecessor with smooth, lightweight performance and a bold look. An updated Flyknit upper contours to your foot with a minimal, supportive design. Underfoot, durable Nike React technology defies the odds by being both soft and responsive, for comfort that lasts as long as you can run.", "rating": "4.1", "reviews": "72", "product_name_stringindexer_transform": 52.0, "product_id_stringindexer_transform": 349.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 50.0, "rating_stringindexer_transform": 9.0, "reviews_stringindexer_transform": 42.0}, {"product_name": "Nike MX-720-818", "product_id": "BV5841-800", "listing_price": 0, "sale_price": 15995, "discount": 0, "brand": "Nike", "description": "Disrupt the universe in your Nike MX-720-818. Featuring materials inspired by spacesuits and quilted stitching on the upper, it takes the largest Air unit to date and blends it with the futuristic look of the final frontier. Mesh on the upper keeps your feet cool while the clear sole features the black and grey reminiscent of deep space.", "rating": "4", "reviews": "1", "product_name_stringindexer_transform": 72.0, "product_id_stringindexer_transform": 248.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 332.0, "rating_stringindexer_transform": 2.0, "reviews_stringindexer_transform": 0.0}, {"product_name": "Nike Air Streak Lite", "product_id": "CD4387-100", "listing_price": 0, "sale_price": 8995, "discount": 0, "brand": "Nike", "description": "The Nike Air Streak Lite puts minimalist style back into the spotlight. Originally created by Nike's first Japanese creation team in 1995, this lightweight, sleek silhouette pushes footwear to a different space.", "rating": "5", "reviews": "1", "product_name_stringindexer_transform": 122.0, "product_id_stringindexer_transform": 292.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 323.0, "rating_stringindexer_transform": 0.0, "reviews_stringindexer_transform": 0.0}, {"product_name": "Nike SB Zoom Stefan Janoski Canvas RM Premium", "product_id": "AQ7878-003", "listing_price": 0, "sale_price": 7995, "discount": 0, "brand": "Nike", "description": "The Nike SB Zoom Stefan Janoski Canvas RM Premium pairs a minimal look with a modern fit. It has been updated with a new, plush sockliner and a flexible outsole for better boardfeel right out of the box.", "rating": "1", "reviews": "1", "product_name_stringindexer_transform": 25.0, "product_id_stringindexer_transform": 22.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 24.0, "rating_stringindexer_transform": 16.0, "reviews_stringindexer_transform": 0.0}, {"product_name": "Nike Wildhorse 6", "product_id": "BV7106-400", "listing_price": 0, "sale_price": 9995, "discount": 0, "brand": "Nike", "description": "The Nike Wildhorse 6 keeps it stable, secure and lightweight on the trail. An updated outsole delivers the traction you need, while a foam midsole keeps you cushioned on your run.", "rating": "4.7", "reviews": "3", "product_name_stringindexer_transform": 91.0, "product_id_stringindexer_transform": 243.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 26.0, "rating_stringindexer_transform": 11.0, "reviews_stringindexer_transform": 2.0}, {"product_name": "Nike Air Zoom Pegasus 36", "product_id": "AQ2210-002", "listing_price": 0, "sale_price": 9995, "discount": 0, "brand": "Nike", "description": "The iconic Nike Air Zoom Pegasus 36 returns with more perforations and engineered mesh in the upper for targeted breathability across high-heat areas. A slimmer heel collar and tongue reduce bulk without compromising comfort, while exposed Flywire cables give you a snug fit at higher speeds.", "rating": "4.4", "reviews": "19", "product_name_stringindexer_transform": 6.0, "product_id_stringindexer_transform": 106.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 204.0, "rating_stringindexer_transform": 3.0, "reviews_stringindexer_transform": 14.0}, {"product_name": "Nike Air Zoom Wildhorse 5", "product_id": "AQ2222-200", "listing_price": 0, "sale_price": 8995, "discount": 0, "brand": "Nike", "description": "Built specifically for trails, the Nike Air Zoom Wildhorse 5 keeps you galloping over rough terrain in breathable, multi-layer fabric. A rock plate helps shield your foot, while a Zoom Air heel unit cushions your stride on and off the path.", "rating": "5", "reviews": "6", "product_name_stringindexer_transform": 158.0, "product_id_stringindexer_transform": 129.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 283.0, "rating_stringindexer_transform": 0.0, "reviews_stringindexer_transform": 5.0}, {"product_name": "Nike Air Max 720 Waves", "product_id": "BQ4430-400", "listing_price": 15995, "sale_price": 11197, "discount": 0, "brand": "Nike", "description": "Bring a new point of view to off-court culture in your Nike Air Max 720 Waves. Its low-profile stance showcases Nike's tallest Air unit to date while its D/MS/X design mixes culture with sport, letting you enter a fresh dimension of hoops style with unparalleled comfort.", "rating": "5", "reviews": "4", "product_name_stringindexer_transform": 230.0, "product_id_stringindexer_transform": 277.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 293.0, "rating_stringindexer_transform": 0.0, "reviews_stringindexer_transform": 4.0}, {"product_name": "Nike Benassi JDI BETRUE", "product_id": "CD2717-001", "listing_price": 0, "sale_price": 4495, "discount": 0, "brand": "Nike", "description": "The Nike Benassi JDI BETRUE Slide creates lightweight comfort in a classic design, while the soft foam sole cushions your every step.", "rating": "4.3", "reviews": "3", "product_name_stringindexer_transform": 39.0, "product_id_stringindexer_transform": 23.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 27.0, "rating_stringindexer_transform": 4.0, "reviews_stringindexer_transform": 2.0}, {"product_name": "Kyrie 4", "product_id": "943806-602", "listing_price": 0, "sale_price": 10995, "discount": 0, "brand": "Nike", "description": "The Kyrie 4 Men's Basketball Shoe is ultra-flexible, responsive and supportive. It's designed for Kyrie Irving's sudden changes of direction and smooth yet rapid playing style.", "rating": "4.1", "reviews": "19", "product_name_stringindexer_transform": 56.0, "product_id_stringindexer_transform": 11.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 21.0, "rating_stringindexer_transform": 9.0, "reviews_stringindexer_transform": 14.0}, {"product_name": "Air Jordan 5 Retro", "product_id": "CN2932-100", "listing_price": 0, "sale_price": 18995, "discount": 0, "brand": "Nike", "description": "The Air Jordan 5 Retro brings back the original that was inspired by WWII fighter planes, featuring a mid-top profile and synthetic leather. An inner-sleeve creates a snug, comfortable feel.", "rating": "4.6", "reviews": "8", "product_name_stringindexer_transform": 15.0, "product_id_stringindexer_transform": 36.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 46.0, "rating_stringindexer_transform": 7.0, "reviews_stringindexer_transform": 7.0}, {"product_name": "Nike Drop-Type Premium", "product_id": "CN6916-100", "listing_price": 0, "sale_price": 6995, "discount": 0, "brand": "Nike", "description": "The Nike Drop-Type Premium is inspired by classic tennis shoes in the NikeCourt family. Part of the N354 family that nods to Steve Prefontaine's fastest mile, it offers distinct design lines that borrow from the All Court 2.", "rating": "4", "reviews": "6", "product_name_stringindexer_transform": 235.0, "product_id_stringindexer_transform": 140.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 259.0, "rating_stringindexer_transform": 2.0, "reviews_stringindexer_transform": 5.0}, {"product_name": "Nike React Metcon", "product_id": "BQ6044-100", "listing_price": 0, "sale_price": 12995, "discount": 0, "brand": "Nike", "description": "The Nike React Metcon takes the stability and traction from the training original and pairs it with Nike's most comfortable cushioning. Tackle high-impact and lifting workouts with a light, breathable upper and durable grip to keep you going.", "rating": "3.9", "reviews": "10", "product_name_stringindexer_transform": 11.0, "product_id_stringindexer_transform": 34.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 4.0, "rating_stringindexer_transform": 12.0, "reviews_stringindexer_transform": 6.0}, {"product_name": "Nike Joyride Dual Run", "product_id": "CD4365-003", "listing_price": 10995, "sale_price": 7697, "discount": 0, "brand": "Nike", "description": "The Nike Joyride Dual Run blazes its own route. Tiny foam beads underfoot combined with traditional cushioning in the forefoot give an incredibly smooth feel that contours to your foot.", "rating": "4.3", "reviews": "3", "product_name_stringindexer_transform": 63.0, "product_id_stringindexer_transform": 145.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 154.0, "rating_stringindexer_transform": 4.0, "reviews_stringindexer_transform": 2.0}, {"product_name": "Nike Classic Cortez", "product_id": "749571-154", "listing_price": 0, "sale_price": 6595, "discount": 0, "brand": "Nike", "description": "The Nike Classic Cortez Shoe is Nike's original running shoe, designed by Bill Bowerman and released in 1972. This version features a leather and synthetic leather construction for added durability.", "rating": "4.2", "reviews": "5", "product_name_stringindexer_transform": 12.0, "product_id_stringindexer_transform": 303.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 236.0, "rating_stringindexer_transform": 5.0, "reviews_stringindexer_transform": 3.0}, {"product_name": "Nike React Element 55 Premium", "product_id": "CI3835-002", "listing_price": 11995, "sale_price": 7197, "discount": 0, "brand": "Nike", "description": "The Nike React Element 55 borrows design lines from heritage runners like the Nike Internationalist, then places it all on Nike React technology.", "rating": "5", "reviews": "1", "product_name_stringindexer_transform": 80.0, "product_id_stringindexer_transform": 241.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 166.0, "rating_stringindexer_transform": 0.0, "reviews_stringindexer_transform": 0.0}, {"product_name": "Nike Joyride CC", "product_id": "AO1742-004", "listing_price": 11995, "sale_price": 8397, "discount": 0, "brand": "Nike", "description": "Lounge wherever you go and let the Nike Joyride CC take you into a new world of cosy by placing your feet directly on the soft cushioning of its innovative bead-pods. Bold colour-blocking and exaggerated textures add unrivalled depth to your fun, edgy attitude.", "rating": "5", "reviews": "4", "product_name_stringindexer_transform": 260.0, "product_id_stringindexer_transform": 256.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 241.0, "rating_stringindexer_transform": 0.0, "reviews_stringindexer_transform": 4.0}, {"product_name": "Nike Zoom Fly Flyknit", "product_id": "AR4561-200", "listing_price": 0, "sale_price": 15995, "discount": 0, "brand": "Nike", "description": "Nike Zoom Fly Flyknit Men's Running Shoe is built for record-breaking speed. The Flyknit upper delivers ultra-lightweight support that fits like a glove.", "rating": "4.2", "reviews": "42", "product_name_stringindexer_transform": 238.0, "product_id_stringindexer_transform": 353.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 101.0, "rating_stringindexer_transform": 5.0, "reviews_stringindexer_transform": 49.0}, {"product_name": "Nike Air Max Tailwind IV SP", "product_id": "BV1357-003", "listing_price": 15995, "sale_price": 9597, "discount": 0, "brand": "Nike", "description": "The Nike Air Max Tailwind IV SP gives a new look to the '90s classic. Max Air units give you comfort and style that last.", "rating": "3", "reviews": "5", "product_name_stringindexer_transform": 263.0, "product_id_stringindexer_transform": 58.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 116.0, "rating_stringindexer_transform": 10.0, "reviews_stringindexer_transform": 3.0}, {"product_name": "Jordan Proto-Lyte", "product_id": "AT3381-008", "listing_price": 7995, "sale_price": 6397, "discount": 0, "brand": "Nike", "description": "Featuring soft foam cushioning and lightweight, woven fabric in the upper, the Jordan Proto-Lyte is made for all-day, bouncy comfort.", "rating": "2.4", "reviews": "5", "product_name_stringindexer_transform": 211.0, "product_id_stringindexer_transform": 264.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 119.0, "rating_stringindexer_transform": 30.0, "reviews_stringindexer_transform": 3.0}, {"product_name": "Nike Mercurial Superfly 7 Academy TF", "product_id": "AT7978-414", "listing_price": 8495, "sale_price": 5947, "discount": 0, "brand": "Nike", "description": "The soft upper of the Nike Mercurial Superfly 7 Academy TF Shoe wraps your foot for a second-skin fit, while the rubber outsole helps supercharge traction on turf.", "rating": "5", "reviews": "1", "product_name_stringindexer_transform": 110.0, "product_id_stringindexer_transform": 2.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 32.0, "rating_stringindexer_transform": 0.0, "reviews_stringindexer_transform": 0.0}, {"product_name": "Nike x Hawkins High Cortez", "product_id": "CJ6106-100", "listing_price": 0, "sale_price": 9995, "discount": 0, "brand": "Nike", "description": "\"Nodding to Hawkins High from the hit TV show \"\"Stranger Things\"\"", "rating": " the Nike x Hawkins High Cortez combines premium materials laid out using the Tiger Pride green and orange with hidden details and show references throughout", "reviews": " including three distinct \"\"Stranger Things\"\" pins.\"", "product_name_stringindexer_transform": 152.0, "product_id_stringindexer_transform": 73.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 273.0, "rating_stringindexer_transform": 34.0, "reviews_stringindexer_transform": 54.0}, {"product_name": "Nike Air Max 2090", "product_id": "CT7695-401", "listing_price": 0, "sale_price": 11995, "discount": 0, "brand": "Nike", "description": "Bring the past into the future with the Nike Air Max 2090, a bold look inspired by the DNA of the iconic Air Max 90. Brand-new Nike Air cushioning underfoot adds unparalleled comfort while transparent fabric on the upper is blended with timeless OG features for an edgy, modernised look.", "rating": "4.8", "reviews": "4", "product_name_stringindexer_transform": 14.0, "product_id_stringindexer_transform": 244.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 302.0, "rating_stringindexer_transform": 6.0, "reviews_stringindexer_transform": 4.0}, {"product_name": "Nike Phantom Vision Academy Dynamic Fit MG", "product_id": "AO3258-080", "listing_price": 8495, "sale_price": 5947, "discount": 0, "brand": "Nike", "description": "The Nike Phantom Vision Academy Dynamic Fit MG brings the fierce precision of street play to the pitch. A foot-hugging sleeve has a custom feel and the Ghost Laces system tights with 1 pull and is hidden for a bigger striking surface.", "rating": "4", "reviews": "5", "product_name_stringindexer_transform": 107.0, "product_id_stringindexer_transform": 29.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 58.0, "rating_stringindexer_transform": 2.0, "reviews_stringindexer_transform": 3.0}, {"product_name": "NikeCourt Air Max Vapor Wing MS", "product_id": "BQ0129-106", "listing_price": 0, "sale_price": 6495, "discount": 0, "brand": "Nike", "description": "The NikeCourt Air Max Vapor Wing MS is the perfect pairing of style and comfort for your match. Translucent textile shows off the technology within, while rubber on the toe increases durability. An Air Max unit provides legendary, lightweight cushioning.", "rating": "3.5", "reviews": "2", "product_name_stringindexer_transform": 32.0, "product_id_stringindexer_transform": 21.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 70.0, "rating_stringindexer_transform": 13.0, "reviews_stringindexer_transform": 1.0}, {"product_name": "LeBron x John Elliott Icon", "product_id": "AQ0114-101", "listing_price": 0, "sale_price": 19995, "discount": 0, "brand": "Nike", "description": "The LeBron x John Elliott Icon brings the clean and layered approach of a lifestyle shoe to a hardwood classic. Cushioning from the LeBron 8 combines with court-inspired details and translucent materials as a tribute to Elliott's favourite shoe in the series. The result: Power, unleashed.", "rating": "4.8", "reviews": "6", "product_name_stringindexer_transform": 134.0, "product_id_stringindexer_transform": 258.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 317.0, "rating_stringindexer_transform": 6.0, "reviews_stringindexer_transform": 5.0}, {"product_name": "Nike Air Max 270 Flyknit", "product_id": "AO1023-005", "listing_price": 0, "sale_price": 15995, "discount": 0, "brand": "Nike", "description": "Feel the Air, both above and below, with the Nike Air Max 270 Flyknit Men's Shoe. It features Nike's biggest heel Air unit yet, plus an ultra-breathable Flyknit upper that helps keep you cool when the temperatures rise. Classic colour combinations nod to iconic Air Max models of the past, delivering a modern, streamlined look that's rooted in Nike sneaker heritage.", "rating": "4.4", "reviews": "10", "product_name_stringindexer_transform": 207.0, "product_id_stringindexer_transform": 309.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 86.0, "rating_stringindexer_transform": 3.0, "reviews_stringindexer_transform": 6.0}, {"product_name": "Air Jordan 13 Retro Chinese New Year", "product_id": "CW4409-100", "listing_price": 0, "sale_price": 19995, "discount": 0, "brand": "Nike", "description": "\"Michael Jordan's stealthy creativity on the court earned him the nickname \"\"Black Cat\"\". The Air Jordan 13 Retro is based on the OG model and has responsive cushioning and premium materials. This version features special details to honour the Chinese New Year.\"", "rating": "5", "reviews": "1", "product_name_stringindexer_transform": 168.0, "product_id_stringindexer_transform": 234.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 162.0, "rating_stringindexer_transform": 0.0, "reviews_stringindexer_transform": 0.0}, {"product_name": "Nike Zoom Pegasus Turbo Shield", "product_id": "BQ1896-002", "listing_price": 17995, "sale_price": 12597, "discount": 0, "brand": "Nike", "description": "The Nike Zoom Pegasus Turbo Shield delivers your favourite lightweight running shoe in a smart, weatherised design, so you can continue training in confidence despite those dark and rainy months.", "rating": "4.1", "reviews": "11", "product_name_stringindexer_transform": 69.0, "product_id_stringindexer_transform": 207.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 36.0, "rating_stringindexer_transform": 9.0, "reviews_stringindexer_transform": 11.0}, {"product_name": "Nike Air Wildwood ACG", "product_id": "AO3116-004", "listing_price": 8995, "sale_price": 5397, "discount": 0, "brand": "Nike", "description": "From rain and mud to sunny afternoons, the Wildwood debuted in 1989 as a direct descendent of the Nike Escape. With design influence from the Pegasus, it was designed as an off-road sneaker meant to take you through rough terrain. The special sawtooth Waffle outsole was further proof that conquering bad weather didn't mean drabness.", "rating": "3.4", "reviews": "7", "product_name_stringindexer_transform": 156.0, "product_id_stringindexer_transform": 315.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 308.0, "rating_stringindexer_transform": 17.0, "reviews_stringindexer_transform": 10.0}, {"product_name": "LeBron 16 Low", "product_id": "CI2668-004", "listing_price": 13995, "sale_price": 11197, "discount": 0, "brand": "Nike", "description": "LeBron is unstoppable on the court and just as influential off of it. The year 2003, LeBron's rookie season and a pivotal year in culture, inspires the LeBron 16 Low. It is powered by Max Air and Zoom Air cushioning technologies, and embodies his clout and versatility.", "rating": "4.7", "reviews": "17", "product_name_stringindexer_transform": 127.0, "product_id_stringindexer_transform": 51.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 175.0, "rating_stringindexer_transform": 11.0, "reviews_stringindexer_transform": 16.0}, {"product_name": "Air Jordan 14 Retro", "product_id": "487471-003", "listing_price": 17995, "sale_price": 14397, "discount": 0, "brand": "Nike", "description": "The Air Jordan 14 Retro has class, comfort and the singular look of the original, with heritage-inspired colours, full-grain leather and responsive Zoom Air cushioning.", "rating": "4.2", "reviews": "12", "product_name_stringindexer_transform": 118.0, "product_id_stringindexer_transform": 299.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 127.0, "rating_stringindexer_transform": 5.0, "reviews_stringindexer_transform": 8.0}, {"product_name": "Nike Free RN Flyknit 3.0", "product_id": "AQ5708-201", "listing_price": 10995, "sale_price": 6597, "discount": 0, "brand": "Nike", "description": "Never worry about laces in the Nike Free RN Flyknit 3.0. This remix leaves them out\u00e2\u20ac\u201dletting you slip in quickly and hit your stride even faster. Supportive yarns join stretchy Flyknit for a lightweight upper that feels like a second skin. Heel-to-toe grooves in outsole move and bend with every stride.", "rating": "4.1", "reviews": "13", "product_name_stringindexer_transform": 82.0, "product_id_stringindexer_transform": 199.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 334.0, "rating_stringindexer_transform": 9.0, "reviews_stringindexer_transform": 15.0}, {"product_name": "Nike SB Air Max Stefan Janoski 2", "product_id": "AQ7477-009", "listing_price": 0, "sale_price": 9995, "discount": 0, "brand": "Nike", "description": "The Nike SB Air Max Stefan Janoski 2 hugs your foot with a breathable textile upper. A Max Air unit in the heel cushions every step, while a flat rubber outsole optimises grip when you're on your board.", "rating": "2.6", "reviews": "11", "product_name_stringindexer_transform": 57.0, "product_id_stringindexer_transform": 26.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 67.0, "rating_stringindexer_transform": 23.0, "reviews_stringindexer_transform": 11.0}, {"product_name": "Nike Air Zoom Pegasus 36 Trail", "product_id": "AR5676-401", "listing_price": 0, "sale_price": 10995, "discount": 0, "brand": "Nike", "description": "An icon hits the paths less travelled in the Nike Air Zoom Pegasus 36 Trail. Perforated mesh upper offers breathable comfort, and double Zoom Air units cushion your stride. Outsole lugs optimise traction when running uphill.", "rating": "4.2", "reviews": "9", "product_name_stringindexer_transform": 23.0, "product_id_stringindexer_transform": 66.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 180.0, "rating_stringindexer_transform": 5.0, "reviews_stringindexer_transform": 12.0}, {"product_name": "Nike Tiempo Legend 8 Club IC", "product_id": "AT6110-004", "listing_price": 4495, "sale_price": 3147, "discount": 0, "brand": "Nike", "description": "The Nike Tiempo Legend 8 Club IC takes the touch of textured synthetic leather and adds a grippy rubber outsole for multi-directional traction.", "rating": "2", "reviews": "1", "product_name_stringindexer_transform": 92.0, "product_id_stringindexer_transform": 6.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 28.0, "rating_stringindexer_transform": 20.0, "reviews_stringindexer_transform": 0.0}, {"product_name": "Nike Flex TR 9", "product_id": "AQ7491-008", "listing_price": 0, "sale_price": 5495, "discount": 0, "brand": "Nike", "description": "Designed for low-impact workouts and circuit training, the Nike Flex TR 9 pairs a breathable mesh and synthetic upper with a supportive platform designed for flexibility and traction.", "rating": "2.9", "reviews": "8", "product_name_stringindexer_transform": 268.0, "product_id_stringindexer_transform": 138.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 142.0, "rating_stringindexer_transform": 24.0, "reviews_stringindexer_transform": 7.0}, {"product_name": "Nike Epic Phantom React", "product_id": "CI1291-400", "listing_price": 13995, "sale_price": 8397, "discount": 0, "brand": "Nike", "description": "\"Soft to the touch, the Nike Epic Phantom React lets go of laces for a slip-on style that gets you up and running in no time. A snug, secure, sock-like fit within a breathable Flyknit and synthetic upper feels as though the Phantom \"\"disappears\"\" as you run.\"", "rating": "5", "reviews": "3", "product_name_stringindexer_transform": 95.0, "product_id_stringindexer_transform": 112.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 53.0, "rating_stringindexer_transform": 0.0, "reviews_stringindexer_transform": 2.0}, {"product_name": "Nike Metcon 5 AMP", "product_id": "CN5455-160", "listing_price": 0, "sale_price": 11995, "discount": 0, "brand": "Nike", "description": "The Nike Metcon 5 AMP arms you with stability for heavy lifting and traction for sprints during high-impact training. It combines breathability and durability to be your secret weapon in the gym.", "rating": "4.5", "reviews": "2", "product_name_stringindexer_transform": 4.0, "product_id_stringindexer_transform": 44.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 1.0, "rating_stringindexer_transform": 1.0, "reviews_stringindexer_transform": 1.0}, {"product_name": "Nike SB Air Zoom Bruin Edge", "product_id": "CD5036-100", "listing_price": 0, "sale_price": 7995, "discount": 0, "brand": "Nike", "description": "The Nike SB Air Zoom Bruin Edge puts a DIY spin on an iconic skate shoe. Frayed stitching, exposed foam and a mix of materials create a patched look that's built to perform. Stencils are included so you can take the DIY look to the next level.", "rating": "5", "reviews": "1", "product_name_stringindexer_transform": 53.0, "product_id_stringindexer_transform": 18.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 44.0, "rating_stringindexer_transform": 0.0, "reviews_stringindexer_transform": 0.0}, {"product_name": "Nike x Undercover React Presto", "product_id": "CU3459-200", "listing_price": 0, "sale_price": 15995, "discount": 0, "brand": "Nike", "description": "Jun Takahashi's vision of chaos and balance continues with the Nike x Undercover React Presto. An OG Presto design uses new details that pay homage to last season's collaboration, the React Boot.", "rating": "5", "reviews": "1", "product_name_stringindexer_transform": 245.0, "product_id_stringindexer_transform": 311.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 288.0, "rating_stringindexer_transform": 0.0, "reviews_stringindexer_transform": 0.0}, {"product_name": "Nike Signal D/MS/X", "product_id": "AT5303-100", "listing_price": 10995, "sale_price": 7697, "discount": 0, "brand": "Nike", "description": "Inspired by the chopping, cutting and rebuilding of custom cars and bikes, the Nike Signal D/MS/X overturns the idea of sportswear with style and attitude. With layered materials and intricate detailing, it uses innovations in an irreverent way that's more aesthetic than athletic.", "rating": "2.7", "reviews": "3", "product_name_stringindexer_transform": 225.0, "product_id_stringindexer_transform": 240.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 215.0, "rating_stringindexer_transform": 18.0, "reviews_stringindexer_transform": 2.0}, {"product_name": "Nike Air Max 720 (OBJ)", "product_id": "CK2531-001", "listing_price": 16995, "sale_price": 13597, "discount": 0, "brand": "Nike", "description": "Disrupt the atmosphere and let your light shine in the Nike Air Max 720 (OBJ), featuring Nike's tallest Air unit yet. Its colours take inspiration from the natural world, a counterpoint to the shoe's futuristic look.", "rating": "5", "reviews": "5", "product_name_stringindexer_transform": 205.0, "product_id_stringindexer_transform": 90.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 149.0, "rating_stringindexer_transform": 0.0, "reviews_stringindexer_transform": 3.0}, {"product_name": "Nike Vandalised LX", "product_id": "BQ3611-100", "listing_price": 10995, "sale_price": 8797, "discount": 0, "brand": "Nike", "description": "The Nike Vandalised LX hacks Nike DNA for a totally new spin on the original 1984 Nike Vandal, a basketball classic. Rearranging all the components creates a bold new look with asymmetrical details.", "rating": "5", "reviews": "1", "product_name_stringindexer_transform": 139.0, "product_id_stringindexer_transform": 79.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 281.0, "rating_stringindexer_transform": 0.0, "reviews_stringindexer_transform": 0.0}, {"product_name": "Nike Flex RN 2019", "product_id": "AQ7487-201", "listing_price": 0, "sale_price": 6995, "discount": 0, "brand": "Nike", "description": "With a stretchable knit in the upper, the Nike Flex RN 2019 makes every run comfortable as it expands and contracts along with your foot. Dual-density foam gives you cushioned comfort for pounding out the miles, while grooves in the outsole provide flexibility from heel to toe.", "rating": "3.8", "reviews": "6", "product_name_stringindexer_transform": 40.0, "product_id_stringindexer_transform": 78.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 324.0, "rating_stringindexer_transform": 14.0, "reviews_stringindexer_transform": 5.0}, {"product_name": "Nike Free RN 5.0", "product_id": "AQ1289-003", "listing_price": 7995, "sale_price": 5597, "discount": 0, "brand": "Nike", "description": "Ideal for runs up to 3 miles, the Nike Free RN 5.0 returns to its roots as a natural motion shoe. An updated flex groove pattern and modified midsole foam provides more flexibility than its predecessor, creating a barefoot sensation with every step. At the upper, breathable and stretchy mesh moves with your foot, while synthetic suede overlays provide stable support.", "rating": "3.9", "reviews": "25", "product_name_stringindexer_transform": 88.0, "product_id_stringindexer_transform": 239.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 214.0, "rating_stringindexer_transform": 12.0, "reviews_stringindexer_transform": 24.0}, {"product_name": "NikeCourt Air Max Vapor Wing MS", "product_id": "BQ0129-106", "listing_price": 0, "sale_price": 6495, "discount": 0, "brand": "Nike", "description": "The NikeCourt Air Max Vapor Wing MS is the perfect pairing of style and comfort for your match. Translucent textile shows off the technology within, while rubber on the toe increases durability. An Air Max unit provides legendary, lightweight cushioning.", "rating": "3.5", "reviews": "2", "product_name_stringindexer_transform": 32.0, "product_id_stringindexer_transform": 21.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 70.0, "rating_stringindexer_transform": 13.0, "reviews_stringindexer_transform": 1.0}, {"product_name": "Nike Air Max 90 NS SE", "product_id": "881105-800", "listing_price": 9995, "sale_price": 7997, "discount": 0, "brand": "Nike", "description": "The Nike Air Max 90 SE Women's Shoe combines classic design lines with rich materials for an elevated look that's true to the original.", "rating": "5", "reviews": "2", "product_name_stringindexer_transform": 246.0, "product_id_stringindexer_transform": 180.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 99.0, "rating_stringindexer_transform": 0.0, "reviews_stringindexer_transform": 1.0}, {"product_name": "Nike React Vision", "product_id": "CI7523-002", "listing_price": 0, "sale_price": 10995, "discount": 0, "brand": "Nike", "description": "The Nike React Vision is a story of surreal comfort. Layered textures, shapes and vivid colours are combined in a design influenced by the exaggerated world of our dreams, while React foam and an ultra-plush tongue provide surreal comfort. DIMSIX on the tongue tab rises high off the collar to add just a touch of Nike's own origin story.", "rating": "4.3", "reviews": "3", "product_name_stringindexer_transform": 65.0, "product_id_stringindexer_transform": 205.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 66.0, "rating_stringindexer_transform": 4.0, "reviews_stringindexer_transform": 2.0}, {"product_name": "Nike Air Max 2090", "product_id": "CT7698-600", "listing_price": 0, "sale_price": 11995, "discount": 0, "brand": "Nike", "description": "Bring the past into the future with the Nike Air Max 2090, a bold look inspired by the DNA of the iconic Air Max 90. Brand-new Nike Air cushioning underfoot adds unparalleled comfort while transparent knit and vibrantly coloured textiles on the upper blend with timeless OG features for an edgy, modernised look.", "rating": "5", "reviews": "2", "product_name_stringindexer_transform": 14.0, "product_id_stringindexer_transform": 161.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 203.0, "rating_stringindexer_transform": 0.0, "reviews_stringindexer_transform": 1.0}, {"product_name": "Nike Air Max Dia Winter", "product_id": "BQ9665-301", "listing_price": 0, "sale_price": 10995, "discount": 0, "brand": "Nike", "description": "Designed specifically for a woman's foot, the Nike Air Max Dia Winter delivers a lifted and airy aesthetic in a sleek shape. The minimal upper modernises the look, while a Max Air unit is amplified even further by an exaggerated midsole for a boost of style.", "rating": "4.4", "reviews": "5", "product_name_stringindexer_transform": 175.0, "product_id_stringindexer_transform": 100.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 330.0, "rating_stringindexer_transform": 3.0, "reviews_stringindexer_transform": 3.0}, {"product_name": "Nike Zoom Pegasus Turbo 2", "product_id": "BV7766-100", "listing_price": 15995, "sale_price": 12797, "discount": 0, "brand": "Nike", "description": "The Nike Zoom Pegasus Turbo 2 is updated with a feather-light upper, while innovative foam brings revolutionary responsiveness to your long-distance training.", "rating": "2.7", "reviews": "3", "product_name_stringindexer_transform": 5.0, "product_id_stringindexer_transform": 330.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 5.0, "rating_stringindexer_transform": 18.0, "reviews_stringindexer_transform": 2.0}, {"product_name": "Nike SB Shane", "product_id": "BV0657-400", "listing_price": 0, "sale_price": 6495, "discount": 0, "brand": "Nike", "description": "Shane O'Neill put the same attention to detail into every aspect of his signature shoe as he does in his almost otherworldly skating. From the low-key perforated ventilation at the toe, to the double lacing option and the no-break-in remastered sole, the Nike SB Shane gets all the details right.", "rating": "4.7", "reviews": "3", "product_name_stringindexer_transform": 20.0, "product_id_stringindexer_transform": 35.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 41.0, "rating_stringindexer_transform": 11.0, "reviews_stringindexer_transform": 2.0}, {"product_name": "Nike Air VaporMax 360", "product_id": "CK2719-400", "listing_price": 0, "sale_price": 18995, "discount": 0, "brand": "Nike", "description": "Featuring a full-length foam midsole and VaporMax Air unit, the Nike Air VaporMax 360 gives you remarkable underfoot comfort with bold 2000s style inspired by the Air Max 360.", "rating": "2.2", "reviews": "5", "product_name_stringindexer_transform": 9.0, "product_id_stringindexer_transform": 192.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 61.0, "rating_stringindexer_transform": 37.0, "reviews_stringindexer_transform": 3.0}, {"product_name": "Nike Air Max FF 720", "product_id": "AO3189-600", "listing_price": 18995, "sale_price": 13297, "discount": 0, "brand": "Nike", "description": "Part shoe, part sandal, the Nike Air Max FF 720 takes you into a new realm of Air. Built specifically for a woman's foot, it features premium leather on heightened foam for bold versatility and unbelievable comfort. Cinch it up with its unique drawcord system and make the streets your runway.", "rating": "3.5", "reviews": "6", "product_name_stringindexer_transform": 150.0, "product_id_stringindexer_transform": 272.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 221.0, "rating_stringindexer_transform": 13.0, "reviews_stringindexer_transform": 5.0}, {"product_name": "Jordan Proto-Max 720", "product_id": "BQ6623-070", "listing_price": 15995, "sale_price": 12797, "discount": 0, "brand": "Nike", "description": "Inspired by outer space flight, the Jordan Proto-Max 720 provides all-day comfort with a future-forward look. An outer shroud covers the sock-like bootie construction, while Nike Air cushions every step.", "rating": "4.4", "reviews": "18", "product_name_stringindexer_transform": 100.0, "product_id_stringindexer_transform": 38.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 43.0, "rating_stringindexer_transform": 3.0, "reviews_stringindexer_transform": 9.0}, {"product_name": "Nike Joyride Run Flyknit", "product_id": "AQ2731-500", "listing_price": 14995, "sale_price": 11997, "discount": 0, "brand": "Nike", "description": "The Nike Joyride Run Flyknit is designed to help make running feel easier and give your legs a day off. Tiny foam beads underfoot contour to your foot for cushioning that stands up to your mileage.", "rating": "4.4", "reviews": "26", "product_name_stringindexer_transform": 50.0, "product_id_stringindexer_transform": 108.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 34.0, "rating_stringindexer_transform": 3.0, "reviews_stringindexer_transform": 27.0}, {"product_name": "Nike Odyssey React Flyknit 2", "product_id": "AH1016-602", "listing_price": 9995, "sale_price": 5997, "discount": 0, "brand": "Nike", "description": "The Nike Odyssey React Flyknit 2 Women's Running Shoe delivers a strategic combination of lightweight Flyknit and synthetic material for support just where you need it. Underfoot, Nike React cushioning delivers a soft, springy ride for a route that begs to be crushed.", "rating": "3.4", "reviews": "26", "product_name_stringindexer_transform": 67.0, "product_id_stringindexer_transform": 290.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 314.0, "rating_stringindexer_transform": 17.0, "reviews_stringindexer_transform": 27.0}, {"product_name": "Nike React Element 55 SE", "product_id": "CN3591-002", "listing_price": 0, "sale_price": 11995, "discount": 0, "brand": "Nike", "description": "The Nike React Element 55 SE borrows design lines from heritage runners like the Nike Internationalist, adds reflective graphics and combines it with Nike React technology for a smooth ride.", "rating": "5", "reviews": "1", "product_name_stringindexer_transform": 2.0, "product_id_stringindexer_transform": 132.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 246.0, "rating_stringindexer_transform": 0.0, "reviews_stringindexer_transform": 0.0}, {"product_name": "Nike Air Max Dia LX", "product_id": "CI1214-004", "listing_price": 9995, "sale_price": 7997, "discount": 0, "brand": "Nike", "description": "Designed specifically for a woman's foot, the Nike Air Max Dia LX delivers a lifted and airy aesthetic in a new, sleek shape. The minimal upper modernises your look, while the Max Air unit, surrounded by clear plastic, elevates your style.", "rating": "1", "reviews": "1", "product_name_stringindexer_transform": 153.0, "product_id_stringindexer_transform": 191.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 150.0, "rating_stringindexer_transform": 16.0, "reviews_stringindexer_transform": 0.0}, {"product_name": "Nike Metcon 5", "product_id": "AQ1189-009", "listing_price": 0, "sale_price": 10995, "discount": 0, "brand": "Nike", "description": "The Nike Metcon 5 is our most tuned Metcon yet. This means specific stability for heavy lifting, traction made for speed and durability where you need it. It even includes a Hyperlift insert that's compatible with all prior versions of the Metcon. Meet your secret weapon for weight-lifting and high-impact training.", "rating": "3.7", "reviews": "31", "product_name_stringindexer_transform": 7.0, "product_id_stringindexer_transform": 16.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 12.0, "rating_stringindexer_transform": 8.0, "reviews_stringindexer_transform": 21.0}, {"product_name": "Nike Benassi", "product_id": "343880-090", "listing_price": 0, "sale_price": 2495, "discount": 0, "brand": "Nike", "description": "The Nike Benassi Slide features a lined upper with a bold logo for plush comfort and an athletic look. A foam midsole and outsole provide lightweight impact protection.", "rating": "4.1", "reviews": "33", "product_name_stringindexer_transform": 17.0, "product_id_stringindexer_transform": 235.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 275.0, "rating_stringindexer_transform": 9.0, "reviews_stringindexer_transform": 26.0}, {"product_name": "Nike Zoom KD12 'YouTube'", "product_id": "CQ7731-900", "listing_price": 12995, "sale_price": 10397, "discount": 0, "brand": "Nike", "description": "Breaking new ground for athletes, KD provides unprecedented access to his life through his YouTube channel. It's this type of authentic connection that KD wanted to create with his fans when he first partnered with YouTube in 2017. In celebration of his channel, the KD12 'YouTube' features co-branded graphic hits on the tongue and heel that celebrate two icons coming together to change the game.", "rating": "4.6", "reviews": "5", "product_name_stringindexer_transform": 130.0, "product_id_stringindexer_transform": 296.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 79.0, "rating_stringindexer_transform": 7.0, "reviews_stringindexer_transform": 3.0}, {"product_name": "Nike Air Force 1 React", "product_id": "CD4366-002", "listing_price": 0, "sale_price": 9995, "discount": 0, "brand": "Nike", "description": "\"Refresh your look and step into a new AF-1 world with the Nike Air Force 1 React. It fuses modern design with iconic b-ball style for a big, bold look. The oversized Swoosh, large \"\"AIR\"\" on the midsole and new sole pattern let you express your modern world while Nike React technology adds exceptional underfoot comfort.\"", "rating": "4.8", "reviews": "4", "product_name_stringindexer_transform": 203.0, "product_id_stringindexer_transform": 186.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 161.0, "rating_stringindexer_transform": 6.0, "reviews_stringindexer_transform": 4.0}, {"product_name": "Nike Air Max 90", "product_id": "CI5646-200", "listing_price": 11995, "sale_price": 9597, "discount": 0, "brand": "Nike", "description": "The Nike Air Max 90 stays true to its OG running roots with the iconic Waffle sole. Details and colours nod to the classic Lahar Escape Boot, delivering a vintage look from the wild.", "rating": "4.8", "reviews": "5", "product_name_stringindexer_transform": 0.0, "product_id_stringindexer_transform": 87.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 172.0, "rating_stringindexer_transform": 6.0, "reviews_stringindexer_transform": 3.0}, {"product_name": "Nike Air Zoom Pegasus 36", "product_id": "CD4573-001", "listing_price": 0, "sale_price": 10995, "discount": 0, "brand": "Nike", "description": "The iconic Nike Air Zoom Pegasus 36 returns with more perforations and mesh in the upper for targeted breathability across high-heat areas. A slimmer heel collar and tongue reduces bulk without compromising comfort, while exposed cables give you a snug fit at higher speeds.", "rating": "5", "reviews": "2", "product_name_stringindexer_transform": 6.0, "product_id_stringindexer_transform": 125.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 295.0, "rating_stringindexer_transform": 0.0, "reviews_stringindexer_transform": 1.0}, {"product_name": "Nike Zoom Fly 3", "product_id": "AT8241-002", "listing_price": 0, "sale_price": 13995, "discount": 0, "brand": "Nike", "description": "Inspired by the Vaporfly, the Nike Zoom Fly 3 gives distance runners race-day comfort and durability. The power of a carbon-fibre plate and responsive cushioning keeps you in the running mile after mile.", "rating": "4.8", "reviews": "12", "product_name_stringindexer_transform": 77.0, "product_id_stringindexer_transform": 52.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 71.0, "rating_stringindexer_transform": 6.0, "reviews_stringindexer_transform": 8.0}, {"product_name": "Nike Air Force 1 Shadow", "product_id": "CI0919-100", "listing_price": 0, "sale_price": 8995, "discount": 0, "brand": "Nike", "description": "The Nike Air Force 1 Shadow pays homage to the women who are setting an example for the next generation by being forces of change in their community. This sneaker reflects this ethos in its design with double the Swoosh, double the height and double the force.", "rating": "4.8", "reviews": "20", "product_name_stringindexer_transform": 105.0, "product_id_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 65.0, "rating_stringindexer_transform": 6.0, "reviews_stringindexer_transform": 17.0}, {"product_name": "Nike Air Max Tailwind IV", "product_id": "AQ2567-002", "listing_price": 13995, "sale_price": 8397, "discount": 0, "brand": "Nike", "description": "The Nike Air Max Tailwind IV gives a new look to the '90s classic. Max Air units give you comfort and style that last.", "rating": "5", "reviews": "1", "product_name_stringindexer_transform": 239.0, "product_id_stringindexer_transform": 82.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 155.0, "rating_stringindexer_transform": 0.0, "reviews_stringindexer_transform": 0.0}, {"product_name": "Nike Potential 3", "product_id": "844127-108", "listing_price": 0, "sale_price": 4495, "discount": 0, "brand": "Nike", "description": "The Nike Potential 3 Unisex Cricket Shoe delivers lightweight cushioning and superb grip on the field with a Phylon midsole and rubber outsole.", "rating": "5", "reviews": "1", "product_name_stringindexer_transform": 45.0, "product_id_stringindexer_transform": 19.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 31.0, "rating_stringindexer_transform": 0.0, "reviews_stringindexer_transform": 0.0}, {"product_name": "Nike x Olivia Kim Air Max 98", "product_id": "CK3309-001", "listing_price": 15995, "sale_price": 11197, "discount": 0, "brand": "Nike", "description": "NYC in the '90s\u00e2\u20ac\u201dif you spent much time in one of the many neighbourhoods, you'd hear SUVs driving around bumping Jamaican dancehall music at full blast. The Nike x Olivia Kim Air Max 98 celebrates the music and culture of NYC as remembered by designer Olivia. The fresh red-yellow-green take on the iconic Air Max 98 captures the vibrancy of the city's Rastafarian community.", "rating": "4.5", "reviews": "2", "product_name_stringindexer_transform": 231.0, "product_id_stringindexer_transform": 60.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 300.0, "rating_stringindexer_transform": 1.0, "reviews_stringindexer_transform": 1.0}, {"product_name": "NikeCourt Royale", "product_id": "749747-010", "listing_price": 4495, "sale_price": 3597, "discount": 0, "brand": "Nike", "description": "Taking inspiration from the archives, the NikeCourt Royale Men's Shoe brings retro tennis style in a modern package for everyday comfort.", "rating": "1.5", "reviews": "2", "product_name_stringindexer_transform": 255.0, "product_id_stringindexer_transform": 156.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 121.0, "rating_stringindexer_transform": 31.0, "reviews_stringindexer_transform": 1.0}, {"product_name": "Nike Air Huarache", "product_id": "634835-108", "listing_price": 0, "sale_price": 8995, "discount": 0, "brand": "Nike", "description": "Designed to stretch with your foot, the Nike Air Huarache Women's Shoe has remained a sneaker staple since its 1991 debut, when it changed the face of running footwear forever.", "rating": "4.5", "reviews": "63", "product_name_stringindexer_transform": 219.0, "product_id_stringindexer_transform": 114.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 333.0, "rating_stringindexer_transform": 1.0, "reviews_stringindexer_transform": 32.0}, {"product_name": "Nike Phantom Venom Academy FG", "product_id": "AO0566-606", "listing_price": 0, "sale_price": 7495, "discount": 0, "brand": "Nike", "description": "The Nike Phantom Venom Academy FG is engineered for powerful, precise strikes that win games. Ridges on the instep create spin to control the flight of the ball, while the firm-ground plate provides the traction needed to unleash at any moment.", "rating": "2.8", "reviews": "5", "product_name_stringindexer_transform": 108.0, "product_id_stringindexer_transform": 3.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 68.0, "rating_stringindexer_transform": 22.0, "reviews_stringindexer_transform": 3.0}, {"product_name": "Nike Phantom Vision 2 Elite Dynamic Fit FG", "product_id": "CD4161-606", "listing_price": 0, "sale_price": 22995, "discount": 0, "brand": "Nike", "description": "The Nike Phantom Vision 2 Elite Dynamic Fit FG brings a new level of fierce precision to the field. A foot-hugging inner sleeve is concealed in a textured Flyknit outer layer to create a boot for the finishers, the providers and the battlers of tomorrow's game.", "rating": "5", "reviews": "1", "product_name_stringindexer_transform": 34.0, "product_id_stringindexer_transform": 31.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 10.0, "rating_stringindexer_transform": 0.0, "reviews_stringindexer_transform": 0.0}, {"product_name": "Nike Air Force 1 Mid '07", "product_id": "366731-100", "listing_price": 7895, "sale_price": 6317, "discount": 0, "brand": "Nike", "description": "The legend lives on in the Nike Air Force 1 Mid '07 Women's Shoe, a modern take on the icon that blends classic style and fresh, crisp details.", "rating": "3.8", "reviews": "4", "product_name_stringindexer_transform": 99.0, "product_id_stringindexer_transform": 198.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 185.0, "rating_stringindexer_transform": 14.0, "reviews_stringindexer_transform": 4.0}, {"product_name": "Nike Air Force 1 '07 Premium", "product_id": "BQ4424-700", "listing_price": 10995, "sale_price": 7697, "discount": 0, "brand": "Nike", "description": "The Nike Air Force 1 '07 Premium captures the iconic look of its 1982 predecessor, with full-length cushioning for comfort and premium detailing that honours the original. A rich mix of materials gives an eye-catching look that's ready to hit the streets.", "rating": "5", "reviews": "1", "product_name_stringindexer_transform": 222.0, "product_id_stringindexer_transform": 209.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 219.0, "rating_stringindexer_transform": 0.0, "reviews_stringindexer_transform": 0.0}, {"product_name": "Air Jordan 12 Retro", "product_id": "130690-017", "listing_price": 0, "sale_price": 15995, "discount": 0, "brand": "Nike", "description": "An all-time favourite among players and sneakerheads, the Air Jordan 12 Retro features full-length Zoom Air cushioning and full-grain leather styled with distinct radial stitch lines.", "rating": "4.5", "reviews": "24", "product_name_stringindexer_transform": 46.0, "product_id_stringindexer_transform": 12.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 54.0, "rating_stringindexer_transform": 1.0, "reviews_stringindexer_transform": 23.0}, {"product_name": "Nike Air Max 98 LX", "product_id": "AV4417-002", "listing_price": 15995, "sale_price": 12797, "discount": 0, "brand": "Nike", "description": "Always one step ahead, the Nike Air Max 98 LX features the OG design lines that were inspired by the walls of the Grand Canyon while stepping into the future with a colourful medley of recycled materials on the upper. The fluid, textured look and full-length Nike Air cushioning set you apart as you turn waste into style.", "rating": "4.5", "reviews": "6", "product_name_stringindexer_transform": 270.0, "product_id_stringindexer_transform": 295.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 165.0, "rating_stringindexer_transform": 1.0, "reviews_stringindexer_transform": 5.0}, {"product_name": "Nike Phantom Venom Academy TF", "product_id": "AO0571-606", "listing_price": 0, "sale_price": 7495, "discount": 0, "brand": "Nike", "description": "The Nike Phantom Venom Academy TF is engineered for powerful, precise strikes that win games. Ridges on the instep help create spin to control the flight of the ball. The sole provides the turf traction needed to unleash at any moment.", "rating": "5", "reviews": "1", "product_name_stringindexer_transform": 18.0, "product_id_stringindexer_transform": 13.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 7.0, "rating_stringindexer_transform": 0.0, "reviews_stringindexer_transform": 0.0}, {"product_name": "Nike SB Dunk High Pro", "product_id": "BQ6826-003", "listing_price": 0, "sale_price": 8995, "discount": 0, "brand": "Nike", "description": "The Nike SB Dunk High Pro pairs iconic Dunk style with a high-top design for a fresh look. A Zoom Air unit in the heel and a padded tongue create a comfortable fit that's made to skate.", "rating": "4.8", "reviews": "4", "product_name_stringindexer_transform": 58.0, "product_id_stringindexer_transform": 5.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 11.0, "rating_stringindexer_transform": 6.0, "reviews_stringindexer_transform": 4.0}, {"product_name": "Nike Phantom Vision Academy Dynamic Fit MG", "product_id": "AO3258-080", "listing_price": 8495, "sale_price": 5947, "discount": 0, "brand": "Nike", "description": "The Nike Phantom Vision Academy Dynamic Fit MG brings the fierce precision of street play to the pitch. A foot-hugging sleeve has a custom feel and the Ghost Laces system tights with 1 pull and is hidden for a bigger striking surface.", "rating": "4", "reviews": "5", "product_name_stringindexer_transform": 107.0, "product_id_stringindexer_transform": 29.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 58.0, "rating_stringindexer_transform": 2.0, "reviews_stringindexer_transform": 3.0}, {"product_name": "Nike Air Max 270 React", "product_id": "AT6174-004", "listing_price": 12995, "sale_price": 7797, "discount": 0, "brand": "Nike", "description": "The bold silhouette of Nike Air lifts the Nike Air Max 270 React to new heights, while the Nike React foam midsole delivers exceptional cushioning. Imagine all-day comfort with unstoppable style.", "rating": "4.2", "reviews": "30", "product_name_stringindexer_transform": 3.0, "product_id_stringindexer_transform": 280.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 33.0, "rating_stringindexer_transform": 5.0, "reviews_stringindexer_transform": 25.0}, {"product_name": "Nike Tiempo Legend 8 Elite FG", "product_id": "AT5293-004", "listing_price": 0, "sale_price": 20995, "discount": 0, "brand": "Nike", "description": "The Nike Tiempo Legend 8 Elite FG takes the legendary touch of premium kangaroo leather and adds foot-hugging Quad-Fit mesh in the lining and a wrap-around Flyknit tongue that feels supportive under your arch.", "rating": "3.1", "reviews": "7", "product_name_stringindexer_transform": 66.0, "product_id_stringindexer_transform": 25.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 37.0, "rating_stringindexer_transform": 21.0, "reviews_stringindexer_transform": 10.0}, {"product_name": "Nike SB Zoom Stefan Janoski Canvas RM", "product_id": "AR7718-001", "listing_price": 0, "sale_price": 6995, "discount": 0, "brand": "Nike", "description": "The Nike SB Zoom Stefan Janoski Canvas RM pairs a minimal look with a modern fit. It has been updated with a new, plush sockliner and a flexible midsole for better boardfeel right out of the box.", "rating": "3.4", "reviews": "5", "product_name_stringindexer_transform": 96.0, "product_id_stringindexer_transform": 46.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 17.0, "rating_stringindexer_transform": 17.0, "reviews_stringindexer_transform": 3.0}, {"product_name": "Jordan 'Why Not?' Zer0.2 SE PF", "product_id": "AV4126-002", "listing_price": 0, "sale_price": 10995, "discount": 0, "brand": "Nike", "description": "Why not take the shot? Why not attack the full length of the court? Why not crash the boards and steal every ball and rain assists like water? The Jordan 'Why Not?' The Zer0.2 SE PF celebrates Russell Westbrook's calculated chaos by combining materials that work in lightweight harmony\u00e2\u20ac\u201dbecause, well, why not?", "rating": "3", "reviews": "2", "product_name_stringindexer_transform": 179.0, "product_id_stringindexer_transform": 183.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 233.0, "rating_stringindexer_transform": 10.0, "reviews_stringindexer_transform": 1.0}, {"product_name": "Nike Shox TL Nova SP", "product_id": "CK2085-002", "listing_price": 0, "sale_price": 14995, "discount": 0, "brand": "Nike", "description": "The 2003 icon returns with new upgrades. Fearless on the streets, the Nike Shox TL Nova takes mechanical cushioning to the next level. A modernised upper combines with Nike Shox columns for a new era.", "rating": "5", "reviews": "1", "product_name_stringindexer_transform": 135.0, "product_id_stringindexer_transform": 359.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 76.0, "rating_stringindexer_transform": 0.0, "reviews_stringindexer_transform": 0.0}, {"product_name": "Nike Air Max 90", "product_id": "CU0675-300", "listing_price": 13995, "sale_price": 9797, "discount": 0, "brand": "Nike", "description": "Redesigned for casual wear, the Nike Air Max 90 stays true to its '90s running roots with a rubber Waffle sole, stitched overlays and TPU plates. Hair-on leather and felted fabric colours combine with Max Air cushioning for a makeover that goes all out.", "rating": "5", "reviews": "1", "product_name_stringindexer_transform": 0.0, "product_id_stringindexer_transform": 196.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 124.0, "rating_stringindexer_transform": 0.0, "reviews_stringindexer_transform": 0.0}, {"product_name": "Nike Benassi JDI Floral", "product_id": "618919-031", "listing_price": 2995, "sale_price": 2397, "discount": 0, "brand": "Nike", "description": "The Nike Benassi JDI Floral Women's Slide is designed with a textured footbed and a lightweight foam midsole/outsole for a soothing, plush feel.", "rating": "4.1", "reviews": "8", "product_name_stringindexer_transform": 213.0, "product_id_stringindexer_transform": 126.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 147.0, "rating_stringindexer_transform": 9.0, "reviews_stringindexer_transform": 7.0}, {"product_name": "Nike Potential 3", "product_id": "844127-108", "listing_price": 0, "sale_price": 4495, "discount": 0, "brand": "Nike", "description": "The Nike Potential 3 Unisex Cricket Shoe delivers lightweight cushioning and superb grip on the field with a Phylon midsole and rubber outsole.", "rating": "5", "reviews": "1", "product_name_stringindexer_transform": 45.0, "product_id_stringindexer_transform": 19.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 31.0, "rating_stringindexer_transform": 0.0, "reviews_stringindexer_transform": 0.0}, {"product_name": "Nike Epic React Flyknit 2", "product_id": "BQ8927-102", "listing_price": 12995, "sale_price": 10397, "discount": 0, "brand": "Nike", "description": "The Nike Epic React Flyknit 2 takes a step up from its predecessor with smooth, lightweight performance and a bold look. An updated Flyknit upper contours to your foot with a minimal, supportive design. Underfoot, durable Nike React technology defies the odds by being both soft and responsive, for comfort that lasts as long as you can run.", "rating": "4.2", "reviews": "45", "product_name_stringindexer_transform": 52.0, "product_id_stringindexer_transform": 337.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 50.0, "rating_stringindexer_transform": 5.0, "reviews_stringindexer_transform": 22.0}, {"product_name": "Nike Phantom Vision Club Dynamic Fit FG", "product_id": "AJ6959-717", "listing_price": 5995, "sale_price": 4497, "discount": 0, "brand": "Nike", "description": "The Nike Phantom Vision Club Dynamic Fit FG brings the fierce precision of street play to the pitch. A foot-hugging Dynamic Fit collar combines with targeted texture for precision to create a boot for the finishers, the providers and the battlers of tomorrow's game.", "rating": "5", "reviews": "1", "product_name_stringindexer_transform": 104.0, "product_id_stringindexer_transform": 14.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 38.0, "rating_stringindexer_transform": 0.0, "reviews_stringindexer_transform": 0.0}, {"product_name": "Nike Air Max 97", "product_id": "921826-016", "listing_price": 16995, "sale_price": 11897, "discount": 0, "brand": "Nike", "description": "The Nike Air Max 97 Men's Shoe keeps the sneaker favourite going strong with the same design details that made it famous: water-ripple lines, reflective piping and full-length Max Air cushioning.", "rating": "4.3", "reviews": "17", "product_name_stringindexer_transform": 1.0, "product_id_stringindexer_transform": 193.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 258.0, "rating_stringindexer_transform": 4.0, "reviews_stringindexer_transform": 16.0}, {"product_name": "Nike x Olivia Kim Air Force 1 '07", "product_id": "CK3314-400", "listing_price": 0, "sale_price": 9995, "discount": 0, "brand": "Nike", "description": "Olivia Kim remembers NYC in the '90s. The city danced at all-night raves, and the fashion was bomb dot com. The Nike x Olivia Kim AF-1 '07 captures the outrageous '90s rave spirit with a blue corduroy upper and glow-in-the-dark details.", "rating": "5", "reviews": "1", "product_name_stringindexer_transform": 253.0, "product_id_stringindexer_transform": 334.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 277.0, "rating_stringindexer_transform": 0.0, "reviews_stringindexer_transform": 0.0}, {"product_name": "Nike TiempoX Lunar Legend VII Pro TF", "product_id": "AH7249-118", "listing_price": 8995, "sale_price": 7197, "discount": 0, "brand": "Nike", "description": "The Nike TiempoX Lunar Legend VII Pro Turf Football Boot features lightweight foam cushioning and a premium leather construction for a flexible fit and dominating touch when playing on turf pitches.", "rating": "3", "reviews": "1", "product_name_stringindexer_transform": 47.0, "product_id_stringindexer_transform": 47.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 52.0, "rating_stringindexer_transform": 10.0, "reviews_stringindexer_transform": 0.0}, {"product_name": "Nike M2K Tekno", "product_id": "BQ3378-002", "listing_price": 8995, "sale_price": 7197, "discount": 0, "brand": "Nike", "description": "The Nike M2K Tekno Shoe draws inspiration from the Monarch franchise and pushes it into today with a futuristic heel counter and plush tongue for additional comfort.", "rating": "3", "reviews": "1", "product_name_stringindexer_transform": 13.0, "product_id_stringindexer_transform": 228.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 107.0, "rating_stringindexer_transform": 10.0, "reviews_stringindexer_transform": 0.0}, {"product_name": "Nike Epic Phantom React Flyknit", "product_id": "BV0415-300", "listing_price": 12995, "sale_price": 7797, "discount": 0, "brand": "Nike", "description": "\"Soft to the touch, the Nike Epic Phantom React Flyknit is lace-free for a slip-on design that gets you up and out the door in no time. A snug, sock-like fit and breathable upper materials will make you feel as though the Phantom \"\"disappears\"\" as you run.\"", "rating": "4.9", "reviews": "17", "product_name_stringindexer_transform": 93.0, "product_id_stringindexer_transform": 164.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 92.0, "rating_stringindexer_transform": 19.0, "reviews_stringindexer_transform": 16.0}, {"product_name": "Nike SB Air Zoom Bruin Edge", "product_id": "CD5036-100", "listing_price": 0, "sale_price": 7995, "discount": 0, "brand": "Nike", "description": "The Nike SB Air Zoom Bruin Edge puts a DIY spin on an iconic skate shoe. Frayed stitching, exposed foam and a mix of materials create a patched look that's built to perform. Stencils are included so you can take the DIY look to the next level.", "rating": "5", "reviews": "1", "product_name_stringindexer_transform": 53.0, "product_id_stringindexer_transform": 18.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 44.0, "rating_stringindexer_transform": 0.0, "reviews_stringindexer_transform": 0.0}, {"product_name": "Nike Mercurial Superfly 7 Elite FG", "product_id": "AQ4174-049", "listing_price": 0, "sale_price": 22995, "discount": 0, "brand": "Nike", "description": "Building on the 360 innovation of the 6, the Nike Mercurial Superfly 7 Elite FG Boot adds a Nike Aerowtrac zone to the forefoot and a slightly stiffer chassis to help supercharge traction.", "rating": "4.3", "reviews": "8", "product_name_stringindexer_transform": 89.0, "product_id_stringindexer_transform": 48.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 14.0, "rating_stringindexer_transform": 4.0, "reviews_stringindexer_transform": 7.0}, {"product_name": "Nike Air Max 90 Essential", "product_id": "AJ1285-101", "listing_price": 0, "sale_price": 8995, "discount": 0, "brand": "Nike", "description": "The Nike Air Max 90 Essential Men's Shoe keeps the classic design lines of the 1990 original and the cushioning that made it famous.", "rating": "4", "reviews": "9", "product_name_stringindexer_transform": 173.0, "product_id_stringindexer_transform": 339.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 177.0, "rating_stringindexer_transform": 2.0, "reviews_stringindexer_transform": 12.0}, {"product_name": "Nike Air Zoom Pegasus 36 Premium Rise", "product_id": "AV6259-500", "listing_price": 10995, "sale_price": 6597, "discount": 0, "brand": "Nike", "description": "\"Breathability and inspiration come together in the Nike Air Zoom Pegasus 36 Premium Rise. A knit-in graphic repeating across the mesh and synthetic upper spells out \"\"Just Do It.\"\" in perforations. Strategically placed", "rating": " they cover zones where your foot releases the most heat.\"", "reviews": "5", "product_name_stringindexer_transform": 243.0, "product_id_stringindexer_transform": 93.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 129.0, "rating_stringindexer_transform": 28.0, "reviews_stringindexer_transform": 3.0}, {"product_name": "Nike Tiempo Legend 8 Academy MG", "product_id": "AT5292-004", "listing_price": 6495, "sale_price": 4547, "discount": 0, "brand": "Nike", "description": "The Nike Tiempo Legend 8 Academy MG takes the legendary touch of calfskin leather and adds a versatile multi-ground plate for traction on natural- and artificial-grass surfaces.", "rating": "2", "reviews": "1", "product_name_stringindexer_transform": 24.0, "product_id_stringindexer_transform": 288.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 9.0, "rating_stringindexer_transform": 20.0, "reviews_stringindexer_transform": 0.0}, {"product_name": "Nike Tanjun", "product_id": "812654-011", "listing_price": 4795, "sale_price": 3357, "discount": 0, "brand": "Nike", "description": "\"Named after the Japanese word for \"\"simplicity\"\"", "rating": " the Nike Tanjun Men's Shoe offers a streamlined", "reviews": " modern design for an elevated everyday look.\"", "product_name_stringindexer_transform": 35.0, "product_id_stringindexer_transform": 89.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 312.0, "rating_stringindexer_transform": 32.0, "reviews_stringindexer_transform": 53.0}, {"product_name": "Nike Air Max Triax 96 SP", "product_id": "CT5543-300", "listing_price": 0, "sale_price": 12995, "discount": 0, "brand": "Nike", "description": "First released in the late '90s, the Nike Air Max Triax 96 SP now returns as a cult classic. Featuring the same iconic shape and large-volume visible Air unit, it brings back the classic comfort and style you remember.", "rating": "4", "reviews": "1", "product_name_stringindexer_transform": 218.0, "product_id_stringindexer_transform": 163.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 138.0, "rating_stringindexer_transform": 2.0, "reviews_stringindexer_transform": 0.0}, {"product_name": "Nike Air Max 2090", "product_id": "CU9174-600", "listing_price": 0, "sale_price": 13995, "discount": 0, "brand": "Nike", "description": "Bring the past into the future with the Nike Air Max 2090, a bold look inspired by the DNA of the iconic Air Max 90. Brand-new Nike Air cushioning underfoot adds unparalleled comfort while transparent mesh and vibrantly coloured details on the upper are blended with timeless OG features for an edgy, modernised look.", "rating": "5", "reviews": "1", "product_name_stringindexer_transform": 14.0, "product_id_stringindexer_transform": 351.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 249.0, "rating_stringindexer_transform": 0.0, "reviews_stringindexer_transform": 0.0}, {"product_name": "Nike Zoom Pegasus Turbo Shield", "product_id": "CJ9712-001", "listing_price": 17995, "sale_price": 12597, "discount": 0, "brand": "Nike", "description": "The Nike Zoom Pegasus Turbo Shield delivers your favourite lightweight running shoe in a smart, weatherised design, so you can continue training in confidence despite those dark and rainy months.", "rating": "4.5", "reviews": "4", "product_name_stringindexer_transform": 69.0, "product_id_stringindexer_transform": 323.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 36.0, "rating_stringindexer_transform": 1.0, "reviews_stringindexer_transform": 4.0}, {"product_name": "Nike Air Max 720 SE", "product_id": "CD0683-600", "listing_price": 0, "sale_price": 15995, "discount": 0, "brand": "Nike", "description": "The Nike Air Max 720 goes bigger than ever before with Nike's tallest Air unit yet, which offers more air underfoot for unprecedented, all-day comfort. Details include bubble wrap accents and colours inspired by the natural world.", "rating": "3", "reviews": "1", "product_name_stringindexer_transform": 199.0, "product_id_stringindexer_transform": 116.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 318.0, "rating_stringindexer_transform": 10.0, "reviews_stringindexer_transform": 0.0}, {"product_name": "Nike Revolution 5 FlyEase", "product_id": "BQ3212-600", "listing_price": 0, "sale_price": 3695, "discount": 0, "brand": "Nike", "description": "Designed with a zip closure secured by a midfoot strap, the Nike Revolution 5 FlyEase lets you suit up for your run quickly and easily. Soft foam cushions your stride, while a minimalist design fits in just about anywhere.", "rating": "4.5", "reviews": "6", "product_name_stringindexer_transform": 129.0, "product_id_stringindexer_transform": 189.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 192.0, "rating_stringindexer_transform": 1.0, "reviews_stringindexer_transform": 5.0}, {"product_name": "Nike Classic Cortez", "product_id": "807471-101", "listing_price": 0, "sale_price": 6995, "discount": 0, "brand": "Nike", "description": "The Nike Classic Cortez Women's Shoe is Nike's original running shoe, designed by Bill Bowerman and released in 1972. This version features a leather and synthetic leather construction for added durability.", "rating": "4.5", "reviews": "34", "product_name_stringindexer_transform": 12.0, "product_id_stringindexer_transform": 238.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 23.0, "rating_stringindexer_transform": 1.0, "reviews_stringindexer_transform": 13.0}, {"product_name": "Nike Air Max 200", "product_id": "AT6175-100", "listing_price": 9995, "sale_price": 5997, "discount": 0, "brand": "Nike", "description": "Inspired by patterns of energy radiating from Earth\u00e2\u20ac\u201dlike the flow of lava and the rhythmic ocean waves\u00e2\u20ac\u201dthe Nike Air Max 200 boasts the largest Max Air unit to date. With exceptional cushioning and modern detailing, this shoe radiates cool while providing optimal comfort.", "rating": "4.6", "reviews": "16", "product_name_stringindexer_transform": 94.0, "product_id_stringindexer_transform": 328.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 254.0, "rating_stringindexer_transform": 7.0, "reviews_stringindexer_transform": 29.0}, {"product_name": "Nike Air Max 270", "product_id": "AH6789-023", "listing_price": 0, "sale_price": 13995, "discount": 0, "brand": "Nike", "description": "The Nike Air Max 270 is inspired by two icons of big Air: Air Max 180 and Air Max 93. It features Nike's biggest heel Air unit yet for a soft ride that feels as remarkable as it looks.", "rating": "3.9", "reviews": "63", "product_name_stringindexer_transform": 73.0, "product_id_stringindexer_transform": 260.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 136.0, "rating_stringindexer_transform": 12.0, "reviews_stringindexer_transform": 32.0}, {"product_name": "Nike SFB Gen 2 20cm (approx.)", "product_id": "922474-001", "listing_price": 0, "sale_price": 13995, "discount": 0, "brand": "Nike", "description": "Made from durable nylon canvas and synthetic leather, the Nike SFB Gen 2 20cm (approx.) is a lightweight tactical boot designed for speed and flexibility over rough terrain. Inspired by Nike Free technology, the flexible sole is equipped with an aggressive traction pattern for multi-surface grip and an internal rock shield to help prevent punctures.", "rating": "3.8", "reviews": "15", "product_name_stringindexer_transform": 31.0, "product_id_stringindexer_transform": 10.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 51.0, "rating_stringindexer_transform": 14.0, "reviews_stringindexer_transform": 19.0}, {"product_name": "Nike Air Max Dia", "product_id": "CI3898-200", "listing_price": 0, "sale_price": 8995, "discount": 0, "brand": "Nike", "description": "Designed specifically for a woman's foot, the Nike Air Max Dia delivers a lifted look, an airy aesthetic and a sleek shape. The minimal upper modernises the look, while the Max Air unit, surrounded by clear TPU, is amplified even further by an exaggerated midsole for a boost of style.", "rating": "5", "reviews": "3", "product_name_stringindexer_transform": 97.0, "product_id_stringindexer_transform": 69.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 145.0, "rating_stringindexer_transform": 0.0, "reviews_stringindexer_transform": 2.0}, {"product_name": "Nike Zoom Rise", "product_id": "BQ5467-101", "listing_price": 11995, "sale_price": 8397, "discount": 0, "brand": "Nike", "description": "Bounce like never before in the Zoom Rise, Nike Basketball's artfully crafted creation for the upwardly mobile. This mid-top provides containment and support up through the ankle, while an extra-large Nike Zoom Air unit under the ball of your foot redefines how responsive a shoe can be.", "rating": "4", "reviews": "2", "product_name_stringindexer_transform": 64.0, "product_id_stringindexer_transform": 27.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 16.0, "rating_stringindexer_transform": 2.0, "reviews_stringindexer_transform": 1.0}, {"product_name": "Air Jordan 1 Low", "product_id": "553558-125", "listing_price": 0, "sale_price": 8995, "discount": 0, "brand": "Nike", "description": "Inspired by the original that debuted in 1985, the Air Jordan 1 Low offers a clean, classic look that's familiar yet always fresh. It's made for casual mode, with an iconic design that goes with everything and never goes out of style.", "rating": "4.6", "reviews": "34", "product_name_stringindexer_transform": 60.0, "product_id_stringindexer_transform": 37.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 20.0, "rating_stringindexer_transform": 7.0, "reviews_stringindexer_transform": 13.0}, {"product_name": "Nike Air Max Bella TR 2", "product_id": "AQ7492-010", "listing_price": 0, "sale_price": 6495, "discount": 0, "brand": "Nike", "description": "The Nike Air Max Bella TR 2 is a versatile trainer for weight training and station workouts. It's crafted from breathable fabric and features comfortable cushioning underfoot with a flat outsole for stability during workout sessions.", "rating": "4.3", "reviews": "12", "product_name_stringindexer_transform": 204.0, "product_id_stringindexer_transform": 146.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 245.0, "rating_stringindexer_transform": 4.0, "reviews_stringindexer_transform": 8.0}, {"product_name": "Nike Air Zoom Terra Kiger 6", "product_id": "CJ0220-400", "listing_price": 0, "sale_price": 10995, "discount": 0, "brand": "Nike", "description": "The Nike Air Zoom Terra Kiger 6 is built to take on wet and rocky trails. Lightweight in design, it features a sleeker look with a woven heel for a secure fit and feel.", "rating": "5", "reviews": "2", "product_name_stringindexer_transform": 90.0, "product_id_stringindexer_transform": 139.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 69.0, "rating_stringindexer_transform": 0.0, "reviews_stringindexer_transform": 1.0}, {"product_name": "Jordan Proto-React Z", "product_id": "CI3794-600", "listing_price": 13995, "sale_price": 11197, "discount": 0, "brand": "Nike", "description": "Inspired by spacesuits, the Jordan Proto-React Z has a futuristic look with a fit and feel made for all-day wear. Responsive cushioning gives you more bounce with less weight, while an aeronautics-inspired shroud and snug bootie help keep you strapped in.", "rating": "4.6", "reviews": "5", "product_name_stringindexer_transform": 48.0, "product_id_stringindexer_transform": 17.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 57.0, "rating_stringindexer_transform": 7.0, "reviews_stringindexer_transform": 3.0}, {"product_name": "Nike Air Force 1 SP", "product_id": "CQ6566-700", "listing_price": 0, "sale_price": 12995, "discount": 0, "brand": "Nike", "description": "The Nike Air Force 1 SP adds a shiny metallic finish to the details that made the original an icon.", "rating": "4.7", "reviews": "3", "product_name_stringindexer_transform": 194.0, "product_id_stringindexer_transform": 363.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 114.0, "rating_stringindexer_transform": 11.0, "reviews_stringindexer_transform": 2.0}, {"product_name": "Nike Zoom Pegasus Turbo", "product_id": "AJ4115-060", "listing_price": 0, "sale_price": 15995, "discount": 0, "brand": "Nike", "description": "The Nike Zoom Pegasus Turbo is the Pegasus you know and love with major upgrades for speed. The featherlight upper looks as fast as it feels, while the revolutionary Nike ZoomX foam that was designed for elite Nike runners during the Breaking 2 attempt brings record-breaking speed and responsiveness to your daily training runs.", "rating": "3.6", "reviews": "20", "product_name_stringindexer_transform": 193.0, "product_id_stringindexer_transform": 149.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 331.0, "rating_stringindexer_transform": 15.0, "reviews_stringindexer_transform": 17.0}, {"product_name": "Nike Free RN 5.0", "product_id": "AQ1316-500", "listing_price": 7995, "sale_price": 4797, "discount": 0, "brand": "Nike", "description": "An ideal performer for runs of up to 3 miles, the Nike Free RN 5.0 returns to its roots as a running shoe. A stripped-down upper with single-layer mesh is stretchy to feel like a second skin. The lightweight midsole with less foam makes it easy to hit the ground running.", "rating": "4.2", "reviews": "13", "product_name_stringindexer_transform": 88.0, "product_id_stringindexer_transform": 131.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 115.0, "rating_stringindexer_transform": 5.0, "reviews_stringindexer_transform": 15.0}, {"product_name": "Nike Air VaporMax 2019 Premium", "product_id": "AT6817-300", "listing_price": 16995, "sale_price": 13597, "discount": 0, "brand": "Nike", "description": "The Nike Air VaporMax 2019 Premium Shoe wraps your foot in stretchy woven material that gives structure and support to your stride. Underfoot, the lightest, most flexible Air Max cushioning to date gives a super-bouncy sensation that rivals running on air. Metallic Silver accents spark a sense of style.", "rating": "5", "reviews": "1", "product_name_stringindexer_transform": 146.0, "product_id_stringindexer_transform": 65.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 212.0, "rating_stringindexer_transform": 0.0, "reviews_stringindexer_transform": 0.0}, {"product_name": "NikeCourt Air Zoom Vapor Cage 4", "product_id": "CD0431-107", "listing_price": 0, "sale_price": 12995, "discount": 0, "brand": "Nike", "description": "The NikeCourt Air Zoom Vapor Cage 4 is innovated to last. Rubber and flexible plastic are built to withstand your toughest matches while a unique lacing system keeps your laces hidden for extra durability.", "rating": "4.7", "reviews": "3", "product_name_stringindexer_transform": 249.0, "product_id_stringindexer_transform": 103.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 106.0, "rating_stringindexer_transform": 11.0, "reviews_stringindexer_transform": 2.0}, {"product_name": "Air Jordan 1 Nova XX", "product_id": "AV4052-116", "listing_price": 0, "sale_price": 10495, "discount": 0, "brand": "Nike", "description": "Featuring an internal 1/2 sleeve construction, the Air Jordan 1 Nova XX Shoe offers a snug fit without traditional laces. Underfoot, an Air-Sole unit at the heel provides lightweight cushioning that moves with you all day long.", "rating": "5", "reviews": "1", "product_name_stringindexer_transform": 131.0, "product_id_stringindexer_transform": 75.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 188.0, "rating_stringindexer_transform": 0.0, "reviews_stringindexer_transform": 0.0}, {"product_name": "Nike Flex RN 2019", "product_id": "AQ7483-001", "listing_price": 0, "sale_price": 6995, "discount": 0, "brand": "Nike", "description": "The stretchable knit upper of the Nike Flex RN 2019 wraps you in softness as it expands and contracts with your foot. Dual-density foam layers supply durable cushioned comfort, while grooves on the outsole give you heel-to-toe flexibility.", "rating": "4.5", "reviews": "2", "product_name_stringindexer_transform": 40.0, "product_id_stringindexer_transform": 142.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 163.0, "rating_stringindexer_transform": 1.0, "reviews_stringindexer_transform": 1.0}, {"product_name": "Nike Free X Metcon 2", "product_id": "CD8526-446", "listing_price": 0, "sale_price": 9995, "discount": 0, "brand": "Nike", "description": "With the Nike Air Max 90, a legendary shoe gets a luxe material treatment and brash colour palette with a history all of its own. Here, the Air Max 90 silhouette is clad in premium all-over suede with ballistic mesh accents to keep it breathable. This vibrant palette of saturated colours was made famous in the original Viotech release, which launched exclusively in Japan in the early 2000s. The head-turners have another classic to admire.", "rating": "3", "reviews": "7", "product_name_stringindexer_transform": 102.0, "product_id_stringindexer_transform": 324.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 0.0, "rating_stringindexer_transform": 10.0, "reviews_stringindexer_transform": 10.0}, {"product_name": "Nike Air Max Impact", "product_id": "CI1396-004", "listing_price": 0, "sale_price": 7995, "discount": 0, "brand": "Nike", "description": "The Nike Air Max Impact infuses bold, expressive details into a design that's a beast on the court. Responsive cushioning helps soften hard landings, while the moulded heel clip and dual-strap system combine for a lightweight, locked-in feel.", "rating": "5", "reviews": "1", "product_name_stringindexer_transform": 84.0, "product_id_stringindexer_transform": 336.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 18.0, "rating_stringindexer_transform": 0.0, "reviews_stringindexer_transform": 0.0}, {"product_name": "Nike Classic Cortez", "product_id": "807471-103", "listing_price": 0, "sale_price": 6995, "discount": 0, "brand": "Nike", "description": "The Nike Classic Cortez Women's Shoe is Nike's original running shoe, designed by Bill Bowerman and released in 1972. This version features a leather and synthetic leather construction for added durability.", "rating": "4.5", "reviews": "34", "product_name_stringindexer_transform": 12.0, "product_id_stringindexer_transform": 286.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 23.0, "rating_stringindexer_transform": 1.0, "reviews_stringindexer_transform": 13.0}, {"product_name": "Nike Air Max 90 Premium", "product_id": "CJ1794-600", "listing_price": 0, "sale_price": 11995, "discount": 0, "brand": "Nike", "description": "The Nike Air Max 90 Premium pays tribute to the steadfast Royal Mail workers in London. Nike Air cushioning provides comfort for all-day wear, while fabric and leather on the upper combine breathability with durability. Details like crowns on the laces and colours inspired by Royal Mail uniforms nod to those who deliver day in and day out.", "rating": "5", "reviews": "2", "product_name_stringindexer_transform": 83.0, "product_id_stringindexer_transform": 203.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 320.0, "rating_stringindexer_transform": 0.0, "reviews_stringindexer_transform": 1.0}, {"product_name": "Nike Renew Run", "product_id": "CK6360-001", "listing_price": 0, "sale_price": 6995, "discount": 0, "brand": "Nike", "description": "The Nike Renew Run keeps you moving with softer foam for a cushioned feel. Designed with the everyday runner in mind, this shoe delivers secure support and durable traction for comfort on the go.", "rating": "4.8", "reviews": "5", "product_name_stringindexer_transform": 98.0, "product_id_stringindexer_transform": 213.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 55.0, "rating_stringindexer_transform": 6.0, "reviews_stringindexer_transform": 3.0}, {"product_name": "Nike Air Max 270 Special Edition", "product_id": "CQ6549-001", "listing_price": 0, "sale_price": 14995, "discount": 0, "brand": "Nike", "description": "Find unstoppable comfort in the Nike Air Max 270. The eye-catching Max Air 270 unit and Nike React foam midsole deliver cushioning that moves with you. A soft and minimal collar contours to your heel for an amazing fit. A glow-in-the-dark colourway celebrates the New Year.", "rating": "5", "reviews": "1", "product_name_stringindexer_transform": 259.0, "product_id_stringindexer_transform": 343.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 169.0, "rating_stringindexer_transform": 0.0, "reviews_stringindexer_transform": 0.0}, {"product_name": "Nike Air Force 1 Sage Low", "product_id": "AR5339-002", "listing_price": 0, "sale_price": 8995, "discount": 0, "brand": "Nike", "description": "Taking both height and craft to new levels, the Nike Air Force 1 Sage Low features a platform midsole and a pared-down upper for a bold yet feminine look.", "rating": "4.5", "reviews": "36", "product_name_stringindexer_transform": 267.0, "product_id_stringindexer_transform": 356.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 307.0, "rating_stringindexer_transform": 1.0, "reviews_stringindexer_transform": 47.0}, {"product_name": "Nike Air Max Triax 96", "product_id": "CD2053-105", "listing_price": 0, "sale_price": 10995, "discount": 0, "brand": "Nike", "description": "More than 20 years after its initial release, the Nike Air Max Triax 96 returns as a cult classic. Featuring the same iconic shape and large-volume Air unit, it brings back the classic comfort and style you remember.", "rating": "5", "reviews": "2", "product_name_stringindexer_transform": 144.0, "product_id_stringindexer_transform": 352.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 151.0, "rating_stringindexer_transform": 0.0, "reviews_stringindexer_transform": 1.0}, {"product_name": "PG 3 NASA", "product_id": "CI2666-400", "listing_price": 9995, "sale_price": 7997, "discount": 0, "brand": "Nike", "description": "Paul George's moon shot took him from Palmdale to basketball stardom, and now he's heading to new heights. This space-themed version of the PG 3 offers sensational traction, springy responsiveness and lightweight containment for seamless moves between offence and defence.", "rating": "3.7", "reviews": "11", "product_name_stringindexer_transform": 78.0, "product_id_stringindexer_transform": 7.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 59.0, "rating_stringindexer_transform": 8.0, "reviews_stringindexer_transform": 11.0}, {"product_name": "Nike Free RN 5.0 AW", "product_id": "BV7775-100", "listing_price": 8995, "sale_price": 5397, "discount": 0, "brand": "Nike", "description": "An ideal performer for runs up to 3 miles, the Nike Free RN 5.0 AW returns to its roots as a motion shoe. A stripped-down upper with single-layer mesh stretches and moves with you. Less foam in the midsole makes it easy to hit the ground running.", "rating": "5", "reviews": "1", "product_name_stringindexer_transform": 157.0, "product_id_stringindexer_transform": 174.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 105.0, "rating_stringindexer_transform": 0.0, "reviews_stringindexer_transform": 0.0}, {"product_name": "Air Jordan 1 Jester XX Low Laced", "product_id": "CI7815-602", "listing_price": 0, "sale_price": 7995, "discount": 0, "brand": "Nike", "description": "The Air Jordan 1 Jester XX Low knows not to take things too seriously, except comfort. A real and synthetic leather upper is supportive where it counts, while the exaggerated midsole adds a little altitude with responsive cushioning.", "rating": "5", "reviews": "2", "product_name_stringindexer_transform": 248.0, "product_id_stringindexer_transform": 77.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 290.0, "rating_stringindexer_transform": 0.0, "reviews_stringindexer_transform": 1.0}, {"product_name": "Nike SB Zoom Stefan Janoski Canvas RM", "product_id": "AR7718-001", "listing_price": 0, "sale_price": 6995, "discount": 0, "brand": "Nike", "description": "The Nike SB Zoom Stefan Janoski Canvas RM pairs a minimal look with a modern fit. It has been updated with a new, plush sockliner and a flexible midsole for better boardfeel right out of the box.", "rating": "3.4", "reviews": "5", "product_name_stringindexer_transform": 96.0, "product_id_stringindexer_transform": 46.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 17.0, "rating_stringindexer_transform": 17.0, "reviews_stringindexer_transform": 3.0}, {"product_name": "Nike Tiempo Legend 8 Academy IC", "product_id": "AT6099-606", "listing_price": 0, "sale_price": 6495, "discount": 0, "brand": "Nike", "description": "The Nike Tiempo Legend 8 Academy IC takes the legendary touch of calfskin leather and adds cushioning that equips you for the court or the streets. A mesh tongue and collar lining add breathability and street style.", "rating": "5", "reviews": "1", "product_name_stringindexer_transform": 27.0, "product_id_stringindexer_transform": 8.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 45.0, "rating_stringindexer_transform": 0.0, "reviews_stringindexer_transform": 0.0}, {"product_name": "Nike SB Bruin High", "product_id": "923112-001", "listing_price": 7995, "sale_price": 5597, "discount": 0, "brand": "Nike", "description": "The first Nike SB shoe designed specifically for women, the Nike SB Bruin High is built for exceptional comfort and board control. With classic Bruin design lines and details, this is a fresh take on a time-honoured shoe.", "rating": "4.2", "reviews": "6", "product_name_stringindexer_transform": 59.0, "product_id_stringindexer_transform": 45.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 42.0, "rating_stringindexer_transform": 5.0, "reviews_stringindexer_transform": 5.0}, {"product_name": "PG 3", "product_id": "AO2607-401", "listing_price": 8995, "sale_price": 7197, "discount": 0, "brand": "Nike", "description": "Paul George's moon shot took him from Palmdale to basketball stardom, and now he's heading to new heights with clouds under his feet. Built on an outsole inspired by moon craters, the PG 3 combines sensational traction with responsive Zoom Air cushioning that helps you move seamlessly between offence and defence.", "rating": "4", "reviews": "19", "product_name_stringindexer_transform": 28.0, "product_id_stringindexer_transform": 24.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 63.0, "rating_stringindexer_transform": 2.0, "reviews_stringindexer_transform": 14.0}, {"product_name": "Nike Free TR Ultra", "product_id": "AO3424-001", "listing_price": 7995, "sale_price": 6397, "discount": 0, "brand": "Nike", "description": "The Nike Free TR Ultra is lightweight and flexible to be quick and adaptable for whatever workout you take on. The slip-on design has Flywire cables to securely hold your foot. Soft, flexible foam cushioning has a wider surface area for more stability.", "rating": "1", "reviews": "1", "product_name_stringindexer_transform": 196.0, "product_id_stringindexer_transform": 71.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 202.0, "rating_stringindexer_transform": 16.0, "reviews_stringindexer_transform": 0.0}, {"product_name": "Air Jordan 7 Retro", "product_id": "313358-006", "listing_price": 15995, "sale_price": 11197, "discount": 0, "brand": "Nike", "description": "The Air Jordan 7 Retro celebrates MJ's championship legacy with a reissue of his 7th game shoe, the one he famously wore to gold-medal glory.", "rating": "4.8", "reviews": "4", "product_name_stringindexer_transform": 81.0, "product_id_stringindexer_transform": 28.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 40.0, "rating_stringindexer_transform": 6.0, "reviews_stringindexer_transform": 4.0}, {"product_name": "Nike SFB Gen 2 20cm (approx.)", "product_id": "922474-001", "listing_price": 0, "sale_price": 13995, "discount": 0, "brand": "Nike", "description": "Made from durable nylon canvas and synthetic leather, the Nike SFB Gen 2 20cm (approx.) is a lightweight tactical boot designed for speed and flexibility over rough terrain. Inspired by Nike Free technology, the flexible sole is equipped with an aggressive traction pattern for multi-surface grip and an internal rock shield to help prevent punctures.", "rating": "3.8", "reviews": "15", "product_name_stringindexer_transform": 31.0, "product_id_stringindexer_transform": 10.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 51.0, "rating_stringindexer_transform": 14.0, "reviews_stringindexer_transform": 19.0}, {"product_name": "Nike Mercurial Superfly 7 Elite MDS FG", "product_id": "BQ5469-703", "listing_price": 0, "sale_price": 24995, "discount": 0, "brand": "Nike", "description": "Dream of speed and play fast in the Nike Mercurial Superfly 7 Elite MDS FG. A streamlined upper combines with a Nike Aerowtrac zone for high-speed play and supercharged traction.", "rating": "5", "reviews": "1", "product_name_stringindexer_transform": 74.0, "product_id_stringindexer_transform": 9.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 49.0, "rating_stringindexer_transform": 0.0, "reviews_stringindexer_transform": 0.0}, {"product_name": "Nike Epic Phantom React", "product_id": "CI1290-100", "listing_price": 13995, "sale_price": 8397, "discount": 0, "brand": "Nike", "description": "\"Soft to the touch, the Nike Epic Phantom React lets go of laces for a slip-on style that gets you up and running in no time. A snug, secure, sock-like fit within a breathable Flyknit and synthetic upper feels as though the Phantom \"\"disappears\"\" as you run.\"", "rating": "5", "reviews": "2", "product_name_stringindexer_transform": 95.0, "product_id_stringindexer_transform": 153.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 53.0, "rating_stringindexer_transform": 0.0, "reviews_stringindexer_transform": 1.0}, {"product_name": "Nike Air Huarache Ultra", "product_id": "885118-001", "listing_price": 8995, "sale_price": 7197, "discount": 0, "brand": "Nike", "description": "The Nike Air Huarache Ultra Women's Sandal helps keep your feet cool and comfortable on warmer days.", "rating": "4.6", "reviews": "12", "product_name_stringindexer_transform": 228.0, "product_id_stringindexer_transform": 182.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 160.0, "rating_stringindexer_transform": 7.0, "reviews_stringindexer_transform": 8.0}, {"product_name": "Nike Wildhorse 6", "product_id": "BV7099-400", "listing_price": 0, "sale_price": 9995, "discount": 0, "brand": "Nike", "description": "The Nike Wildhorse 6 keeps it stable, secure and lightweight on the trail. An updated outsole delivers the traction you need, while a foam midsole keeps you cushioned on your run.", "rating": "4.5", "reviews": "2", "product_name_stringindexer_transform": 91.0, "product_id_stringindexer_transform": 219.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 26.0, "rating_stringindexer_transform": 1.0, "reviews_stringindexer_transform": 1.0}, {"product_name": "Nike Benassi JDI BETRUE", "product_id": "CD2717-001", "listing_price": 0, "sale_price": 4495, "discount": 0, "brand": "Nike", "description": "The Nike Benassi JDI BETRUE Slide creates lightweight comfort in a classic design, while the soft foam sole cushions your every step.", "rating": "4.3", "reviews": "3", "product_name_stringindexer_transform": 39.0, "product_id_stringindexer_transform": 23.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 27.0, "rating_stringindexer_transform": 4.0, "reviews_stringindexer_transform": 2.0}, {"product_name": "Nike Zoom Rise", "product_id": "BQ5467-101", "listing_price": 11995, "sale_price": 8397, "discount": 0, "brand": "Nike", "description": "Bounce like never before in the Zoom Rise, Nike Basketball's artfully crafted creation for the upwardly mobile. This mid-top provides containment and support up through the ankle, while an extra-large Nike Zoom Air unit under the ball of your foot redefines how responsive a shoe can be.", "rating": "4", "reviews": "2", "product_name_stringindexer_transform": 64.0, "product_id_stringindexer_transform": 27.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 16.0, "rating_stringindexer_transform": 2.0, "reviews_stringindexer_transform": 1.0}, {"product_name": "Nike Tiempo Legend 8 Club IC", "product_id": "AT6110-004", "listing_price": 4495, "sale_price": 3147, "discount": 0, "brand": "Nike", "description": "The Nike Tiempo Legend 8 Club IC takes the touch of textured synthetic leather and adds a grippy rubber outsole for multi-directional traction.", "rating": "2", "reviews": "1", "product_name_stringindexer_transform": 92.0, "product_id_stringindexer_transform": 6.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 28.0, "rating_stringindexer_transform": 20.0, "reviews_stringindexer_transform": 0.0}, {"product_name": "Nike Air Max 2017", "product_id": "849560-001", "listing_price": 0, "sale_price": 15995, "discount": 0, "brand": "Nike", "description": "The Nike Air Max 2017 Women's Shoe features a seamless Flymesh upper for support and breathability. Iconic Max Air cushioning provides a lightweight, smooth feel with each step, whether you're running your three-miler or running your day.", "rating": "3.5", "reviews": "18", "product_name_stringindexer_transform": 79.0, "product_id_stringindexer_transform": 123.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 242.0, "rating_stringindexer_transform": 13.0, "reviews_stringindexer_transform": 9.0}, {"product_name": "Nike Flex RN 2018", "product_id": "AA7408-008", "listing_price": 7495, "sale_price": 5997, "discount": 0, "brand": "Nike", "description": "The Nike Flex RN 2018 Women's Running Shoe delivers a flexible fit with a lightweight knit construction to help your runs feel free and easy.", "rating": "3.2", "reviews": "15", "product_name_stringindexer_transform": 176.0, "product_id_stringindexer_transform": 57.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 250.0, "rating_stringindexer_transform": 26.0, "reviews_stringindexer_transform": 19.0}, {"product_name": "NikeCourt Royale AC", "product_id": "BQ9138-601", "listing_price": 4495, "sale_price": 3147, "discount": 0, "brand": "Nike", "description": "Winning in both style and comfort, the NikeCourt Royale AC is as easy to get on as it is to pair with your entire warm-weather wardrobe. A hidden gore strap keeps the canvas upper looking clean and classic while easing it on and off.", "rating": "5", "reviews": "1", "product_name_stringindexer_transform": 113.0, "product_id_stringindexer_transform": 118.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 265.0, "rating_stringindexer_transform": 0.0, "reviews_stringindexer_transform": 0.0}, {"product_name": "Jordan Air Latitude 720", "product_id": "AV5187-602", "listing_price": 15995, "sale_price": 12797, "discount": 0, "brand": "Nike", "description": "Boasting a bold 720 Air unit, the Jordan Air Latitude 720 offers 360 degrees of cushioning and then some. This attention-grabbing, AJ 8\u00e2\u20ac\u201cinspired shoe is a celebration of '90s Jordan heritage, big-time Air and street-ready comfort.", "rating": "5", "reviews": "1", "product_name_stringindexer_transform": 197.0, "product_id_stringindexer_transform": 344.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 98.0, "rating_stringindexer_transform": 0.0, "reviews_stringindexer_transform": 0.0}, {"product_name": "Nike Air Force 1 '07 SE", "product_id": "AA0287-002", "listing_price": 8495, "sale_price": 6797, "discount": 0, "brand": "Nike", "description": "The legend lives on in the Nike Air Force 1 '07 SE. This fresh take on an icon gives you classic style while playing up the AF-1's versatility with new colours and materials.", "rating": "3.6", "reviews": "5", "product_name_stringindexer_transform": 26.0, "product_id_stringindexer_transform": 200.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 326.0, "rating_stringindexer_transform": 15.0, "reviews_stringindexer_transform": 3.0}, {"product_name": "Nike Zoom Fly 3 Premium", "product_id": "BV7756-001", "listing_price": 14995, "sale_price": 10497, "discount": 0, "brand": "Nike", "description": "Inspired by the Vaporfly, the Nike Zoom Fly 3 gives distance runners race-day comfort and durability. The power of a carbon-fibre plate keeps you in the running mile after mile.", "rating": "5", "reviews": "1", "product_name_stringindexer_transform": 21.0, "product_id_stringindexer_transform": 273.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 35.0, "rating_stringindexer_transform": 0.0, "reviews_stringindexer_transform": 0.0}, {"product_name": "Nike Air VaporMax 2019", "product_id": "AR6632-603", "listing_price": 15995, "sale_price": 9597, "discount": 0, "brand": "Nike", "description": "Designed for running but adopted by the street, the Nike Air VaporMax 2019 features the lightest, most flexible Air Max cushioning to date. A stretch woven material wraps your foot for lightweight support and stability, while an external reinforcement in the heel secures the back of your foot.", "rating": "3.5", "reviews": "11", "product_name_stringindexer_transform": 41.0, "product_id_stringindexer_transform": 85.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 15.0, "rating_stringindexer_transform": 13.0, "reviews_stringindexer_transform": 11.0}, {"product_name": "Nike Air Zoom Structure 22", "product_id": "AA1640-002", "listing_price": 0, "sale_price": 9995, "discount": 0, "brand": "Nike", "description": "The Nike Air Zoom Structure 22 Women's Running Shoe looks fast and feels secure. Engineered mesh, a heel overlay and dynamic support throughout the midfoot all work together to provide a smooth, stable ride.", "rating": "4.3", "reviews": "14", "product_name_stringindexer_transform": 49.0, "product_id_stringindexer_transform": 347.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 237.0, "rating_stringindexer_transform": 4.0, "reviews_stringindexer_transform": 20.0}, {"product_name": "NikeCourt Air Zoom Vapor X", "product_id": "AA8027-109", "listing_price": 0, "sale_price": 14995, "discount": 0, "brand": "Nike", "description": "The NikeCourt Air Zoom Vapor X has an updated Dynamic Fit system with a full-length foot frame to provide ultimate control. Its new generative outsole combined with a Zoom Air unit provides a lightweight, responsive feel on the court.", "rating": "4", "reviews": "3", "product_name_stringindexer_transform": 43.0, "product_id_stringindexer_transform": 251.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 87.0, "rating_stringindexer_transform": 2.0, "reviews_stringindexer_transform": 2.0}, {"product_name": "LeBron Soldier 13 SFG", "product_id": "AR4225-100", "listing_price": 11995, "sale_price": 9597, "discount": 0, "brand": "Nike", "description": "LeBron works hard in the offseason, getting stronger and fine-tuning his already devastating skills. Inspired by his dedication and commitment to inclusivity, the Soldier 13 SFG combines LeBron-tested cushioning, containment and support with a wide, flexible collar and lace-free closure that lets all players get in and out of the shoe with ease.", "rating": "4.2", "reviews": "6", "product_name_stringindexer_transform": 33.0, "product_id_stringindexer_transform": 319.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 60.0, "rating_stringindexer_transform": 5.0, "reviews_stringindexer_transform": 5.0}, {"product_name": "Air Jordan 13 Retro", "product_id": "414571-030", "listing_price": 0, "sale_price": 15995, "discount": 0, "brand": "Nike", "description": "Featuring a panther-inspired design that takes after Michael Jordan's on-court presence, the Air Jordan 13 Retro is based on the OG model and has the same responsive cushioning and premium materials that made it famous in the '90s.", "rating": "3.9", "reviews": "34", "product_name_stringindexer_transform": 36.0, "product_id_stringindexer_transform": 4.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 30.0, "rating_stringindexer_transform": 12.0, "reviews_stringindexer_transform": 13.0}, {"product_name": "Nike React Element 55 Premium", "product_id": "CD6964-002", "listing_price": 11995, "sale_price": 7197, "discount": 0, "brand": "Nike", "description": "The Nike React Element 55 is a balanced blend of classic design and forward-looking innovation. Nike React foam delivers lightweight, bouncy comfort, while rubber outsole pods and an exaggerated outsole offer a cutting-edge look that begs a reaction.", "rating": "4", "reviews": "1", "product_name_stringindexer_transform": 80.0, "product_id_stringindexer_transform": 53.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 313.0, "rating_stringindexer_transform": 2.0, "reviews_stringindexer_transform": 0.0}, {"product_name": "Nike Air Max 97", "product_id": "CI7388-600", "listing_price": 0, "sale_price": 16995, "discount": 0, "brand": "Nike", "description": "The Nike Air Max 97 keeps a sneaker icon going strong with the same design details that made its reputation from the beginning: water-ripple lines, reflective piping and full-length Max Air cushioning.", "rating": "5", "reviews": "1", "product_name_stringindexer_transform": 1.0, "product_id_stringindexer_transform": 242.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 148.0, "rating_stringindexer_transform": 0.0, "reviews_stringindexer_transform": 0.0}, {"product_name": "Nike Air Force 1 GORE-TEX \u00c2\u00ae", "product_id": "CK2630-001", "listing_price": 12995, "sale_price": 10397, "discount": 0, "brand": "Nike", "description": "The Nike Air Force 1 GORE-TEX \u00c2\u00ae retools the classic Air Force 1 with a street-approved design that meets the standards of GORE-TEX \u00c2\u00ae waterproof technology. It features water-wicking flat laces, a GORE-TEX \u00c2\u00ae bootie and GORE-TEX \u00c2\u00ae branding on the heel.", "rating": "4.1", "reviews": "18", "product_name_stringindexer_transform": 62.0, "product_id_stringindexer_transform": 333.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 62.0, "rating_stringindexer_transform": 9.0, "reviews_stringindexer_transform": 9.0}, {"product_name": "Nike Phantom Venom Academy TF", "product_id": "AO0571-606", "listing_price": 0, "sale_price": 7495, "discount": 0, "brand": "Nike", "description": "The Nike Phantom Venom Academy TF is engineered for powerful, precise strikes that win games. Ridges on the instep help create spin to control the flight of the ball. The sole provides the turf traction needed to unleash at any moment.", "rating": "5", "reviews": "1", "product_name_stringindexer_transform": 18.0, "product_id_stringindexer_transform": 13.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 7.0, "rating_stringindexer_transform": 0.0, "reviews_stringindexer_transform": 0.0}, {"product_name": "Kyrie 4", "product_id": "943806-602", "listing_price": 0, "sale_price": 10995, "discount": 0, "brand": "Nike", "description": "The Kyrie 4 Men's Basketball Shoe is ultra-flexible, responsive and supportive. It's designed for Kyrie Irving's sudden changes of direction and smooth yet rapid playing style.", "rating": "4.1", "reviews": "19", "product_name_stringindexer_transform": 56.0, "product_id_stringindexer_transform": 11.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 21.0, "rating_stringindexer_transform": 9.0, "reviews_stringindexer_transform": 14.0}, {"product_name": "Nike React Metcon", "product_id": "BQ6046-010", "listing_price": 0, "sale_price": 12995, "discount": 0, "brand": "Nike", "description": "The Nike React Metcon takes the stability and traction from the training original and pairs it with Nike's most comfortable cushioning. Tackle high-impact and lifting workouts with a light, breathable upper and durable grip to keep you going.", "rating": "3.7", "reviews": "3", "product_name_stringindexer_transform": 11.0, "product_id_stringindexer_transform": 147.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 4.0, "rating_stringindexer_transform": 8.0, "reviews_stringindexer_transform": 2.0}, {"product_name": "Nike ZoomX Vista Grind SP", "product_id": "CT5770-300", "listing_price": 0, "sale_price": 14995, "discount": 0, "brand": "Nike", "description": "The Nike ZoomX Vista Grind SP is proof of the improbable, bringing you to a bold new place that's rebellious and forward thinking. Recycled foam from the Nike ZoomX family plus lightweight fabric and durable overlays come together to give the shoe a modern look and classic comfort.", "rating": "5", "reviews": "1", "product_name_stringindexer_transform": 252.0, "product_id_stringindexer_transform": 261.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 284.0, "rating_stringindexer_transform": 0.0, "reviews_stringindexer_transform": 0.0}, {"product_name": "Nike Air Max 270 React", "product_id": "CI3899-200", "listing_price": 0, "sale_price": 12995, "discount": 0, "brand": "Nike", "description": "The Nike Air Max 270 React uses lightweight, layered, no-sew materials to create a modern style that looks as good as it feels.", "rating": "4.3", "reviews": "6", "product_name_stringindexer_transform": 3.0, "product_id_stringindexer_transform": 204.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 224.0, "rating_stringindexer_transform": 4.0, "reviews_stringindexer_transform": 5.0}, {"product_name": "Nike Drop-Type", "product_id": "CQ0989-002", "listing_price": 0, "sale_price": 5995, "discount": 0, "brand": "Nike", "description": "With DIY attitude and classic tennis shoe appeal, the Nike Drop-Type puts a raw, experimental edge on an iconic look. Featuring distinct lines that borrow from the NikeCourt series, an exposed foam tongue and N354 branding, it lets your shoes do the talking.", "rating": "4", "reviews": "1", "product_name_stringindexer_transform": 169.0, "product_id_stringindexer_transform": 130.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 226.0, "rating_stringindexer_transform": 2.0, "reviews_stringindexer_transform": 0.0}, {"product_name": "Nike Blazer Low LE", "product_id": "AV9370-001", "listing_price": 6995, "sale_price": 5597, "discount": 0, "brand": "Nike", "description": "The Nike Blazer Low LE refines the old-school basketball icon with updated details.", "rating": "5", "reviews": "2", "product_name_stringindexer_transform": 191.0, "product_id_stringindexer_transform": 124.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 329.0, "rating_stringindexer_transform": 0.0, "reviews_stringindexer_transform": 1.0}, {"product_name": "Nike Zoom Pegasus Turbo 2 Rise", "product_id": "BV1134-001", "listing_price": 15995, "sale_price": 9597, "discount": 0, "brand": "Nike", "description": "The Nike Zoom Pegasus Turbo 2 Rise is updated with a featherlight upper, while innovative foam brings revolutionary responsiveness to your long-distance training.", "rating": "4", "reviews": "5", "product_name_stringindexer_transform": 226.0, "product_id_stringindexer_transform": 314.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 174.0, "rating_stringindexer_transform": 2.0, "reviews_stringindexer_transform": 3.0}, {"product_name": "Nike Air Max Dia SE", "product_id": "AR7410-603", "listing_price": 9995, "sale_price": 5997, "discount": 0, "brand": "Nike", "description": "The Nike Air Max Dia SE features sleek lines and a sheer upper that combine classic Air Max elements into a lightweight, comfy and versatile icon. Together with its smart toe-down profile and extra lift, the Nike Air Max Dia SE offers an ever-bigger expression of Nike Air.", "rating": "4.8", "reviews": "20", "product_name_stringindexer_transform": 190.0, "product_id_stringindexer_transform": 94.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 272.0, "rating_stringindexer_transform": 6.0, "reviews_stringindexer_transform": 17.0}, {"product_name": "Nike Tanjun", "product_id": "812655-011", "listing_price": 4995, "sale_price": 3997, "discount": 0, "brand": "Nike", "description": "Named after the Japanese word for simplicity, the Nike Tanjun Women's Shoe offers an elegant, modern design for an elevated everyday look.", "rating": "4", "reviews": "53", "product_name_stringindexer_transform": 35.0, "product_id_stringindexer_transform": 297.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 208.0, "rating_stringindexer_transform": 2.0, "reviews_stringindexer_transform": 48.0}, {"product_name": "Nike Air Max 90", "product_id": "325213-139", "listing_price": 9495, "sale_price": 7597, "discount": 0, "brand": "Nike", "description": "The Nike Air Max 90 Women's Shoe honours its roots with a supportive upper and the excellent cushioning that made the original a favourite.", "rating": "3.6", "reviews": "5", "product_name_stringindexer_transform": 0.0, "product_id_stringindexer_transform": 270.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 156.0, "rating_stringindexer_transform": 15.0, "reviews_stringindexer_transform": 3.0}, {"product_name": "Nike Air Max 720 BETRUE", "product_id": "CJ5472-900", "listing_price": 0, "sale_price": 15995, "discount": 0, "brand": "Nike", "description": "Designed in collaboration with Gilbert Baker, the Nike Air Max 720 BETRUE features a rainbow-coloured upper inspired by, and in celebration of, the LGBTQ community.", "rating": "5", "reviews": "1", "product_name_stringindexer_transform": 75.0, "product_id_stringindexer_transform": 40.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 8.0, "rating_stringindexer_transform": 0.0, "reviews_stringindexer_transform": 0.0}, {"product_name": "Nike Odyssey React", "product_id": "AO9820-001", "listing_price": 11995, "sale_price": 9597, "discount": 0, "brand": "Nike", "description": "The Nike Odyssey React Women's Running Shoe provides crazy comfort that lasts as long as you can run. Its Nike React foam cushioning is responsive yet lightweight, durable yet soft. This attraction of opposites creates a sensation that not only enhances the feeling of moving forwards, but makes running feel fun, too.\u00c2\u00a0The upper of the Nike Odyssey React is built with a lightweight, breathable fabric instead of the premium Flyknit featured on the Nike Epic React.", "rating": "4.1", "reviews": "8", "product_name_stringindexer_transform": 101.0, "product_id_stringindexer_transform": 233.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 110.0, "rating_stringindexer_transform": 9.0, "reviews_stringindexer_transform": 7.0}, {"product_name": "Nike Legend React", "product_id": "AA1626-602", "listing_price": 0, "sale_price": 8795, "discount": 0, "brand": "Nike", "description": "The Nike Legend React Women's Running Shoe features a breathable upper with synthetic overlays that enhance durability while smooth, responsive foam cushions every step as you run.", "rating": "2.7", "reviews": "19", "product_name_stringindexer_transform": 29.0, "product_id_stringindexer_transform": 95.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 244.0, "rating_stringindexer_transform": 18.0, "reviews_stringindexer_transform": 14.0}, {"product_name": "Nike Air Zoom Winflo 6", "product_id": "AQ8228-102", "listing_price": 0, "sale_price": 7995, "discount": 0, "brand": "Nike", "description": "In a fluid design that speaks the language of fast, the Nike Air Zoom Winflo 6 has less bulk and a more sculpted profile than previous versions. It has 2 Zoom Air units for targeted responsiveness in the forefoot and heel. On the top, engineered mesh optimises breathability.", "rating": "3.7", "reviews": "10", "product_name_stringindexer_transform": 37.0, "product_id_stringindexer_transform": 289.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 132.0, "rating_stringindexer_transform": 8.0, "reviews_stringindexer_transform": 6.0}, {"product_name": "Nike Air Zoom Vomero 14", "product_id": "AH7858-010", "listing_price": 11995, "sale_price": 9597, "discount": 0, "brand": "Nike", "description": "The Nike Air Zoom Vomero 14 takes responsive cushioning to the next level. The full-length Zoom Air unit works with Nike React cushioning to deliver a super-snappy, smooth ride. On the top, the sleek design is engineered to support your stride.", "rating": "2.8", "reviews": "11", "product_name_stringindexer_transform": 54.0, "product_id_stringindexer_transform": 265.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 112.0, "rating_stringindexer_transform": 22.0, "reviews_stringindexer_transform": 11.0}, {"product_name": "Nike Air VaporMax SE", "product_id": "CI1246-302", "listing_price": 16995, "sale_price": 10197, "discount": 0, "brand": "Nike", "description": "The Nike Air VaporMax SE wraps your foot in a stretch woven material that gives structure and support to your stride. Underfoot, the lightest, most flexible Air Max cushioning to date gives a super-bouncy sensation that rivals running on air.", "rating": "3.7", "reviews": "3", "product_name_stringindexer_transform": 166.0, "product_id_stringindexer_transform": 137.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 81.0, "rating_stringindexer_transform": 8.0, "reviews_stringindexer_transform": 2.0}, {"product_name": "NikeCourt Air Max Wildcard", "product_id": "AO7353-105", "listing_price": 0, "sale_price": 7995, "discount": 0, "brand": "Nike", "description": "The NikeCourt Air Max Wildcard delivers the comfort you need to hit hard and move fast on the court. A Max Air unit under your heel cushions every step, while an innovative Lunarlon midsole gives you a springy underfoot sensation and extra stability.", "rating": "4.5", "reviews": "2", "product_name_stringindexer_transform": 111.0, "product_id_stringindexer_transform": 357.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 231.0, "rating_stringindexer_transform": 1.0, "reviews_stringindexer_transform": 1.0}, {"product_name": "Nike Air Max 98", "product_id": "CI3709-001", "listing_price": 0, "sale_price": 16995, "discount": 0, "brand": "Nike", "description": "The Nike Air Max 98 brings back retro Air Max style with contemporary comfort innovations. A full-length Max Air unit gives total cushioning in every step.", "rating": "4", "reviews": "1", "product_name_stringindexer_transform": 8.0, "product_id_stringindexer_transform": 262.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 315.0, "rating_stringindexer_transform": 2.0, "reviews_stringindexer_transform": 0.0}, {"product_name": "Nike SB Zoom Stefan Janoski Mid RM", "product_id": "AT7324-001", "listing_price": 7995, "sale_price": 6397, "discount": 0, "brand": "Nike", "description": "The Nike SB Zoom Stefan Janoski Mid RM pairs a minimal look with a modern fit. It has been updated with a new, plush sockliner and a flexible midsole for better boardfeel right out of the box.", "rating": "5", "reviews": "1", "product_name_stringindexer_transform": 30.0, "product_id_stringindexer_transform": 39.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 29.0, "rating_stringindexer_transform": 0.0, "reviews_stringindexer_transform": 0.0}, {"product_name": "NikeCourt Air Zoom Zero", "product_id": "AA8022-107", "listing_price": 0, "sale_price": 11995, "discount": 0, "brand": "Nike", "description": "Featuring the first full-length Zoom Air unit in NikeCourt history, the NikeCourt Air Zoom Zero delivers exceptional responsiveness and great court feel. Its fabric and synthetic upper with a customisable lacing system offers second-skin-like comfort.", "rating": "3.8", "reviews": "4", "product_name_stringindexer_transform": 70.0, "product_id_stringindexer_transform": 327.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 89.0, "rating_stringindexer_transform": 14.0, "reviews_stringindexer_transform": 4.0}, {"product_name": "Nike M2K Tekno", "product_id": "AO3108-018", "listing_price": 0, "sale_price": 8995, "discount": 0, "brand": "Nike", "description": "The Nike M2K Tekno draws inspiration from the Monarch franchise and pushes it into the future with space-age detailing. Its layered upper mimics the design of the OG Monarch, while the chunky outsole draws on the beloved Monarch IV.", "rating": "4", "reviews": "13", "product_name_stringindexer_transform": 13.0, "product_id_stringindexer_transform": 355.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 141.0, "rating_stringindexer_transform": 2.0, "reviews_stringindexer_transform": 15.0}, {"product_name": "PG 3", "product_id": "AO2607-401", "listing_price": 8995, "sale_price": 7197, "discount": 0, "brand": "Nike", "description": "Paul George's moon shot took him from Palmdale to basketball stardom, and now he's heading to new heights with clouds under his feet. Built on an outsole inspired by moon craters, the PG 3 combines sensational traction with responsive Zoom Air cushioning that helps you move seamlessly between offence and defence.", "rating": "4", "reviews": "19", "product_name_stringindexer_transform": 28.0, "product_id_stringindexer_transform": 24.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 63.0, "rating_stringindexer_transform": 2.0, "reviews_stringindexer_transform": 14.0}, {"product_name": "Air Jordan 5 Retro", "product_id": "CN2932-100", "listing_price": 0, "sale_price": 18995, "discount": 0, "brand": "Nike", "description": "The Air Jordan 5 Retro brings back the original that was inspired by WWII fighter planes, featuring a mid-top profile and synthetic leather. An inner-sleeve creates a snug, comfortable feel.", "rating": "4.6", "reviews": "8", "product_name_stringindexer_transform": 15.0, "product_id_stringindexer_transform": 36.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 46.0, "rating_stringindexer_transform": 7.0, "reviews_stringindexer_transform": 7.0}, {"product_name": "Nike Air Max Dia NRG", "product_id": "CQ2503-900", "listing_price": 10995, "sale_price": 7697, "discount": 0, "brand": "Nike", "description": "Crisp and clean with the perfect amount of lift, the Nike Air Max Dia is designed to elevate her every day. The minimal upper features no-sew skins and breathable mesh for an airiness that matches the swirled iridescent patterns. Boosting style and comfort, the Max Air unit underfoot joins with the super-soft foam midsole.", "rating": "4.3", "reviews": "3", "product_name_stringindexer_transform": 224.0, "product_id_stringindexer_transform": 63.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 205.0, "rating_stringindexer_transform": 4.0, "reviews_stringindexer_transform": 2.0}, {"product_name": "Nike Mercurial Vapor 13 Elite FG", "product_id": "AQ4176-049", "listing_price": 0, "sale_price": 21995, "discount": 0, "brand": "Nike", "description": "Building on the 360-degree Flyknit innovation of the 12, the Nike Mercurial Vapor 13 Elite FG adds a Nike Aerowtrac zone to the forefoot and a slightly stiffer chassis to help supercharge traction. Inside, an insole with NikeGrip technology provides maximum interior traction underfoot and lightweight cushioning.", "rating": "3.5", "reviews": "4", "product_name_stringindexer_transform": 109.0, "product_id_stringindexer_transform": 32.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 39.0, "rating_stringindexer_transform": 13.0, "reviews_stringindexer_transform": 4.0}, {"product_name": "Nike Air Max 720", "product_id": "AR9293-603", "listing_price": 15995, "sale_price": 9597, "discount": 0, "brand": "Nike", "description": "The Nike Air Max 720 goes bigger than ever before with Nike's tallest Air unit yet, which offers more air underfoot for unimaginable, all-day comfort. Has Air Max gone too far? We hope so.", "rating": "4.9", "reviews": "18", "product_name_stringindexer_transform": 76.0, "product_id_stringindexer_transform": 113.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 73.0, "rating_stringindexer_transform": 19.0, "reviews_stringindexer_transform": 9.0}, {"product_name": "Nike Zoom KD12", "product_id": "AR4229-003", "listing_price": 0, "sale_price": 12995, "discount": 0, "brand": "Nike", "description": "Kevin Durant always looks relaxed\u00e2\u20ac\u201duntil he attacks. His game is reserved yet explosive, difficult to guard and impossible to stop. The KD12 was built for his dominance and endless energy all game long, with the latest innovation in Nike Zoom Air technology.", "rating": "4.6", "reviews": "18", "product_name_stringindexer_transform": 16.0, "product_id_stringindexer_transform": 43.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 2.0, "rating_stringindexer_transform": 7.0, "reviews_stringindexer_transform": 9.0}, {"product_name": "Air Jordan 7 Retro", "product_id": "313358-006", "listing_price": 15995, "sale_price": 11197, "discount": 0, "brand": "Nike", "description": "The Air Jordan 7 Retro celebrates MJ's championship legacy with a reissue of his 7th game shoe, the one he famously wore to gold-medal glory.", "rating": "4.8", "reviews": "4", "product_name_stringindexer_transform": 81.0, "product_id_stringindexer_transform": 28.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 40.0, "rating_stringindexer_transform": 6.0, "reviews_stringindexer_transform": 4.0}, {"product_name": "Nike Mercurial Superfly 7 Academy IC", "product_id": "AT7975-606", "listing_price": 0, "sale_price": 8495, "discount": 0, "brand": "Nike", "description": "The soft upper of the Nike Mercurial Superfly 7 Academy IC wraps your foot for a second-skin fit, while the rubber outsole helps supercharge traction on the court or street.", "rating": "5", "reviews": "1", "product_name_stringindexer_transform": 38.0, "product_id_stringindexer_transform": 15.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 6.0, "rating_stringindexer_transform": 0.0, "reviews_stringindexer_transform": 0.0}, {"product_name": "Nike Air Zoom Pegasus 36 FlyEase", "product_id": "BV0614-005", "listing_price": 9995, "sale_price": 7997, "discount": 0, "brand": "Nike", "description": "The Nike Air Zoom Pegasus 36 FlyEase maintains everything you love about the Pegasus and adds a zip for effortless on and off. The no-tie lacing system adjusts easily for a secure feel as you tackle your miles.", "rating": "3", "reviews": "4", "product_name_stringindexer_transform": 120.0, "product_id_stringindexer_transform": 361.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 143.0, "rating_stringindexer_transform": 10.0, "reviews_stringindexer_transform": 4.0}, {"product_name": "Nike P-6000 Icon Clash", "product_id": "BV1021-007", "listing_price": 7995, "sale_price": 5597, "discount": 0, "brand": "Nike", "description": "A mash-up of Pegasus' past, the Nike P-6000 Icon Clash features breathable mesh with horizontal and vertical overlays for a 2000s running look that is as striking as, say, a majestic winged horse. Drawing on the design of the Nike Pegasus 25 and 2006, its running aesthetic meets all-day comfort for the streets.", "rating": "4.7", "reviews": "10", "product_name_stringindexer_transform": 188.0, "product_id_stringindexer_transform": 308.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 292.0, "rating_stringindexer_transform": 11.0, "reviews_stringindexer_transform": 6.0}, {"product_name": "Nike Mercurial Superfly 7 Elite FG", "product_id": "AQ4174-049", "listing_price": 0, "sale_price": 22995, "discount": 0, "brand": "Nike", "description": "Building on the 360 innovation of the 6, the Nike Mercurial Superfly 7 Elite FG Boot adds a Nike Aerowtrac zone to the forefoot and a slightly stiffer chassis to help supercharge traction.", "rating": "4.3", "reviews": "8", "product_name_stringindexer_transform": 89.0, "product_id_stringindexer_transform": 48.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 14.0, "rating_stringindexer_transform": 4.0, "reviews_stringindexer_transform": 7.0}, {"product_name": "Nike Air Max 95 Premium", "product_id": "807443-503", "listing_price": 16995, "sale_price": 13597, "discount": 0, "brand": "Nike", "description": "The Nike Air Max 95 Premium retains its iconic look, but is sleeker, lighter and geared for 24/7 comfort and style. It features inspiration from the human body itself. The midsole represents the spine, graduated panels are the muscles, the lace loops are the shoe's ribs and the fabric tongue is its skin.", "rating": "3.7", "reviews": "3", "product_name_stringindexer_transform": 269.0, "product_id_stringindexer_transform": 81.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 197.0, "rating_stringindexer_transform": 8.0, "reviews_stringindexer_transform": 2.0}, {"product_name": "Nike Pre-Love O.X.", "product_id": "AO3166-300", "listing_price": 0, "sale_price": 7495, "discount": 0, "brand": "Nike", "description": "The Nike Pre-Love O.X. Women's Shoe features a running-inspired profile and lightweight foam cushioning for all-day comfort.", "rating": "5", "reviews": "3", "product_name_stringindexer_transform": 123.0, "product_id_stringindexer_transform": 175.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 113.0, "rating_stringindexer_transform": 0.0, "reviews_stringindexer_transform": 2.0}, {"product_name": "Nike Mercurial Superfly 7 Academy MG", "product_id": "AT7946-414", "listing_price": 0, "sale_price": 8495, "discount": 0, "brand": "Nike", "description": "Building on the forefoot plate innovation of the 6, the Nike Mercurial Superfly 7 Academy MG Boot adds a versatile multi-ground plate that provides traction on natural- and artificial-grass surfaces.", "rating": "5", "reviews": "2", "product_name_stringindexer_transform": 19.0, "product_id_stringindexer_transform": 30.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 47.0, "rating_stringindexer_transform": 0.0, "reviews_stringindexer_transform": 1.0}, {"product_name": "Nike Air Force 1 '07 SE", "product_id": "CI3446-001", "listing_price": 0, "sale_price": 7995, "discount": 0, "brand": "Nike", "description": "The Nike Air Force 1 '07 SE incorporates the same hoops-inspired performance features of the 1982 original while adding details that call to mind the 2000s aesthetic.", "rating": "5", "reviews": "1", "product_name_stringindexer_transform": 26.0, "product_id_stringindexer_transform": 159.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 210.0, "rating_stringindexer_transform": 0.0, "reviews_stringindexer_transform": 0.0}, {"product_name": "Nike Zoom Pegasus Turbo XX", "product_id": "AR4347-600", "listing_price": 16995, "sale_price": 13597, "discount": 0, "brand": "Nike", "description": "Bridging performance and style, the Nike Zoom Pegasus Turbo XX Women's Running Shoe combines a full-length ZoomX midsole with an upper re-imagined exclusively for women. This feather-light translucent upper pops with a racing-stripe print that looks as fast as it feels, while Nike ZoomX foam delivers revolutionary responsiveness. A transparent, soft TPU overlay wraps your midfoot for the fit you need.", "rating": "1", "reviews": "1", "product_name_stringindexer_transform": 215.0, "product_id_stringindexer_transform": 259.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 218.0, "rating_stringindexer_transform": 16.0, "reviews_stringindexer_transform": 0.0}, {"product_name": "Nike React Metcon", "product_id": "BQ6044-100", "listing_price": 0, "sale_price": 12995, "discount": 0, "brand": "Nike", "description": "The Nike React Metcon takes the stability and traction from the training original and pairs it with Nike's most comfortable cushioning. Tackle high-impact and lifting workouts with a light, breathable upper and durable grip to keep you going.", "rating": "3.9", "reviews": "10", "product_name_stringindexer_transform": 11.0, "product_id_stringindexer_transform": 34.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 4.0, "rating_stringindexer_transform": 12.0, "reviews_stringindexer_transform": 6.0}, {"product_name": "Nike Zoom Pegasus Turbo 2 Special Edition", "product_id": "BV7757-500", "listing_price": 15995, "sale_price": 12797, "discount": 0, "brand": "Nike", "description": "The Nike Zoom Pegasus Turbo 2 is updated with a featherlight upper, while energy-returning foam brings revolutionary responsiveness to your long-distance training.", "rating": "5", "reviews": "1", "product_name_stringindexer_transform": 241.0, "product_id_stringindexer_transform": 301.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 85.0, "rating_stringindexer_transform": 0.0, "reviews_stringindexer_transform": 0.0}, {"product_name": "Nike Metcon 5 AMP", "product_id": "CN5455-160", "listing_price": 0, "sale_price": 11995, "discount": 0, "brand": "Nike", "description": "The Nike Metcon 5 AMP arms you with stability for heavy lifting and traction for sprints during high-impact training. It combines breathability and durability to be your secret weapon in the gym.", "rating": "4.5", "reviews": "2", "product_name_stringindexer_transform": 4.0, "product_id_stringindexer_transform": 44.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 1.0, "rating_stringindexer_transform": 1.0, "reviews_stringindexer_transform": 1.0}, {"product_name": "Air Jordan 5 Retro", "product_id": "CD2722-001", "listing_price": 0, "sale_price": 15995, "discount": 0, "brand": "Nike", "description": "The Air Jordan 5 Retro for women gives a colourful makeover to one of MJ's most memorable game shoes. Featuring iconic fighter plane-inspired midsole sculpting and moulded lace toggle, this version flashes an all-over reflective rainbow print for some bold colour and energy.", "rating": "3.3", "reviews": "3", "product_name_stringindexer_transform": 15.0, "product_id_stringindexer_transform": 88.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 96.0, "rating_stringindexer_transform": 25.0, "reviews_stringindexer_transform": 2.0}, {"product_name": "Nike ZoomX Vaporfly NEXT%", "product_id": "AO4568-600", "listing_price": 0, "sale_price": 19995, "discount": 0, "brand": "Nike", "description": "The Nike ZoomX Vaporfly NEXT% clears your path to record-breaking speed with a lighter design and faster feel than before. With more cushioning underfoot and reduced weight up top, the result is unprecedented energy return and comfort.", "rating": "4.7", "reviews": "45", "product_name_stringindexer_transform": 55.0, "product_id_stringindexer_transform": 20.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 22.0, "rating_stringindexer_transform": 11.0, "reviews_stringindexer_transform": 22.0}, {"product_name": "Kyrie 6 'Enlightenment'", "product_id": "BQ4630-500", "listing_price": 10995, "sale_price": 8797, "discount": 0, "brand": "Nike", "description": "In spiritual circles, the colour purple represents enlightenment. It speaks to being fully connected to your spiritual mind by tapping into an inner source of potential that was otherwise undiscovered. The Kyrie 6 'Enlightenment' plays up the unseen spirituality theme with an all-seeing eye graphic on the side of the upper and a purple colour scheme.", "rating": "4.4", "reviews": "10", "product_name_stringindexer_transform": 86.0, "product_id_stringindexer_transform": 1.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 13.0, "rating_stringindexer_transform": 3.0, "reviews_stringindexer_transform": 6.0}, {"product_name": "Nike React Metcon AMP", "product_id": "CT9155-063", "listing_price": 0, "sale_price": 13995, "discount": 0, "brand": "Nike", "description": "The Nike React Metcon AMP takes the stability and traction from the original and pairs it with React foam, Nike's most comfortable cushioning. It feels soft and springy with a breathable upper, but it's still stable enough to tackle lifting and high-impact workouts. A glow-in-the-dark rubber sole climbs up the side of the shoe for durability and extra grip during rope climbs.", "rating": "3", "reviews": "1", "product_name_stringindexer_transform": 149.0, "product_id_stringindexer_transform": 282.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 183.0, "rating_stringindexer_transform": 10.0, "reviews_stringindexer_transform": 0.0}, {"product_name": "Air Jordan 8 Retro", "product_id": "CI1236-100", "listing_price": 15995, "sale_price": 12797, "discount": 0, "brand": "Nike", "description": "The Air Jordan 8 Retro recaptures the memorable look of the '93 release. It's made from real and synthetic leather and has the same distinct and daring design that made the original such a '90s favourite.", "rating": "5", "reviews": "1", "product_name_stringindexer_transform": 133.0, "product_id_stringindexer_transform": 152.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 303.0, "rating_stringindexer_transform": 0.0, "reviews_stringindexer_transform": 0.0}, {"product_name": "Nike Mercurial Superfly 7 Academy TF", "product_id": "AT7978-414", "listing_price": 8495, "sale_price": 5947, "discount": 0, "brand": "Nike", "description": "The soft upper of the Nike Mercurial Superfly 7 Academy TF Shoe wraps your foot for a second-skin fit, while the rubber outsole helps supercharge traction on turf.", "rating": "5", "reviews": "1", "product_name_stringindexer_transform": 110.0, "product_id_stringindexer_transform": 2.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 32.0, "rating_stringindexer_transform": 0.0, "reviews_stringindexer_transform": 0.0}, {"product_name": "Nike Air Max 98", "product_id": "AH6799-300", "listing_price": 0, "sale_price": 16995, "discount": 0, "brand": "Nike", "description": "The Nike Air Max 98 features the OG design lines that were inspired by the walls of the Grand Canyon while adding bursts of fresh colour to the upper. The fluid, textured look and full-length Nike Air cushioning set you apart from the pack.", "rating": "4", "reviews": "4", "product_name_stringindexer_transform": 8.0, "product_id_stringindexer_transform": 211.0, "brand_stringindexer_transform": 0, "description_stringindexer_transform": 104.0, "rating_stringindexer_transform": 2.0, "reviews_stringindexer_transform": 4.0}], "FE": [{"transformationsData": [{"feature_label": "product_name", "transformation_label": "String Indexer"}], "feature": "product_name", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "414", "mean": "", "stddev": "", "min": "Air Jordan 1 Jester XX Low Laced", "max": "Zoom Freak 1 'Employee of the Month'", "missing": "0", "distinct": "272"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "product_name"}, {"transformationsData": [{"feature_label": "product_id", "transformation_label": "String Indexer"}], "feature": "product_id", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "414", "mean": "", "stddev": "", "min": "130690-017", "max": "CW4409-100", "missing": "0", "distinct": "365"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "product_id"}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "listing_price", "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "type": "numeric", "replaceby": "mean", "selected": true, "stats": {"count": "414", "mean": "4397.16", "stddev": "6112.7", "min": "0", "max": "18995", "missing": "0"}, "updatedLabel": "listing_price"}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "sale_price", "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "type": "numeric", "replaceby": "mean", "selected": true, "stats": {"count": "414", "mean": "10429.25", "stddev": "4260.23", "min": "1595", "max": "24995", "missing": "0"}, "updatedLabel": "sale_price"}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "discount", "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "type": "numeric", "replaceby": "mean", "selected": true, "stats": {"count": "414", "mean": "0.0", "stddev": "0.0", "min": "0", "max": "0", "missing": "0"}, "updatedLabel": "discount"}, {"transformationsData": [{"feature_label": "brand", "transformation_label": "String Indexer"}], "feature": "brand", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "414", "mean": "", "stddev": "", "min": "Nike", "max": "Nike", "missing": "0", "distinct": "1"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "brand"}, {"transformationsData": [{"feature_label": "description", "transformation_label": "String Indexer"}], "feature": "description", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "411", "mean": "", "stddev": "", "min": "\"Breathability and inspiration come together in the Nike Air Zoom Pegasus 36 Premium Rise. A knit-in graphic repeating across the mesh and synthetic upper spells out \"\"Just Do It.\"\" in perforations. Strategically placed", "max": "With the Nike Air Max 90, a legendary shoe gets a luxe material treatment and brash colour palette with a history all of its own. Here, the Air Max 90 silhouette is clad in premium all-over suede with ballistic mesh accents to keep it breathable. This vibrant palette of saturated colours was made famous in the original Viotech release, which launched exclusively in Japan in the early 2000s. The head-turners have another classic to admire.", "missing": "3", "distinct": "335"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "description"}, {"transformationsData": [{"feature_label": "rating", "transformation_label": "String Indexer"}], "feature": "rating", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "414", "mean": "4.24", "stddev": "0.82", "min": " nodding to those who feed the city of style.\"", "max": "5", "missing": "0", "distinct": "38"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "rating"}, {"transformationsData": [{"feature_label": "reviews", "transformation_label": "String Indexer"}], "feature": "reviews", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "414", "mean": "11.17", "stddev": "18.8", "min": " an exposed foam tongue and minimalist leather. Why? Because you don't change what works.\"", "max": "94", "missing": "0", "distinct": "55"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "reviews"}, {"feature": "product_name_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "414", "mean": "104.42", "stddev": "79.66", "min": "0.0", "max": "271.0", "missing": "0"}, "updatedLabel": "product_name_stringindexe..."}, {"feature": "product_id_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "414", "mean": "163.3", "stddev": "111.56", "min": "0.0", "max": "364.0", "missing": "0"}, "updatedLabel": "product_id_stringindexer_..."}, {"feature": "brand_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "numeric", "selected": true, "stats": {"count": "414", "mean": "0.0", "stddev": "0.0", "min": "0", "max": "0", "missing": "0"}, "updatedLabel": "brand_stringindexer_trans..."}, {"feature": "description_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "414", "mean": "141.17", "stddev": "102.53", "min": "0.0", "max": "334.0", "missing": "0"}, "updatedLabel": "description_stringindexer..."}, {"feature": "rating_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "414", "mean": "6.64", "stddev": "7.71", "min": "0.0", "max": "37.0", "missing": "0"}, "updatedLabel": "rating_stringindexer_tran..."}, {"feature": "reviews_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "414", "mean": "8.21", "stddev": "11.33", "min": "0.0", "max": "54.0", "missing": "0"}, "updatedLabel": "reviews_stringindexer_tra..."}], "samplecount": 414, "message": "Successfully executed", "status": 1, "userid": "7b254440-ce6b-4cbe-9a6b-9ca33491250a", "FEGraph": [{"values": {"label": ["Nike Drop-Type", "Nike Mercurial Superfly 7 Academy IC", "Nike Renew Fusion", "Nike React Element 55 SE", "Nike React Presto Premium", "Nike React Metcon", "Air Jordan 7 Retro", "Nike SB Air Max Stefan Janoski 2", "Nike SB Air Zoom Bruin Edge", "Nike Free TR Ultra", "Nike React Metcon AMP", "Nike Phantom Vision Club Dynamic Fit FG", "Nike Air Monarch IV", "Nike Air Skarn", "Nike Zoom KD12 'YouTube'", "Nike In-Season TR 9", "Nike Air Max Verona", "Nike Joyride Dual Run", "Nike Flex RN 2019", "Nike Classic Cortez", "Nike Air Force 1 SP", "Nike SB Shane", "Nike Air Max Dia SE", "Nike Phantom Venom Academy TF", "Nike SB Zoom Stefan Janoski Canvas RM", "Nike Blazer Low QS Flyleather with at least 50% leather fibre", "Nike Air Force 1 '07 Essential", "Jordan Mars 270", "Nike Huarache Type", "Nike Air Max Dia Winter", "Jordan Proto-Lyte", "Nike Tiempo Legend 8 Academy MG", "Nike ZoomX Vaporfly NEXT%", "NikeCourt Air Zoom Zero", "Nike Air Force 1 Sage Low", "Nike Air VaporMax Flyknit 3", "Nike x Undercover React", "LeBron x John Elliott Icon", "Nike Air Max 2017", "Nike Air Force 1 React", "Nike Air Max 90 FlyEase", "NikeCourt Air Zoom Resistance", "Nike Vandalised LX", "Nike Joyride Run Flyknit", "Nike Free RN Flyknit 3.0", "Nike Air Max 90", "Nike SB Blazer Low GT", "PG 3", "Nike React Presto", "Nike Odyssey React", "Nike ACG MOC 3.0", "Nike SB Check", "Nike Air Force 1 '07 LV8", "Nike Epic Phantom React", "Nike Air Huarache", "Nike Air Max 2090", "Nike Air Max Triax 96 SP", "Nike Air Huarache Ultra", "LeBron 7 QS", "Nike Air Ghost Racer", "Nike Air Streak Lite", "Kyrie 4", "Air Jordan 1 Low", "Nike Air Max Alpha Savage", "Nike Daybreak", "Nike Air Max Impact", "Jordan Proto-React Z", "Kyrie 5", "Jordan Air Latitude 720", "NikeCourt Royale", "Nike Air Zoom Structure 22", "Nike Joyride CC3 Setter", "Nike M2K Tekno", "Nike React Sertu", "Nike x Undercover Air Max 720", "Nike Phantom Venom Academy FG", "Nike Air Max 97 Utility", "Kyrie 6 'Enlightenment'", "Nike Air Max Dia", "Nike Zoom 2K", "Nike ISPA Air Max 720", "Nike Zoom Pegasus Turbo Shield", "LeBron 7", "Air Jordan 12 Retro", "Nike Air Max 720", "Nike Free RN 5.0", "Nike Zoom Fly 3 Premium", "LeBron Soldier 13 SFG", "Nike Mercurial Superfly 7 Elite MDS FG", "Nike x Undercover React Presto", "Nike Air Zoom Terra Kiger 6", "Nike Air Max Dia LX", "Air Jordan XXXIV PF", "Nike Metcon 5 AMP", "Nike Cortez '72 S.D.", "Nike Blazer Low LE", "Nike Metcon 5", "Nike Legend React", "Jordan 'Why Not?' Zer0.2 SE PF", "Nike Free Metcon 3", "LeBron 16 Low", "Nike Air Max Bella TR 2", "Nike Air Max 270 React ENG", "Nike Air VaporMax SE", "Nike Air Max 270", "Nike Air Zoom Vomero 14", "Nike Free RN 5.0 AW", "Nike Daybreak SP", "Nike Metcon Sport", "Nike Air Max FF 720", "LeBron 17 Monstars", "Nike Xarr", "Nike Phantom Vision Academy Dynamic Fit MG", "Nike Zoom Pegasus Turbo XX", "Nike Odyssey React Flyknit 2", "Nike Air Max 720 Waves", "Nike Joyride CC", "Nike Air Max Plus III", "Nike Air Zoom Pegasus 35", "Nike Benassi", "Nike Air Force Max II", "Nike Air Max 97", "Nike x MMW Joyride CC3 Setter", "Nike Air Force 1 '07", "Nike SB Zoom Stefan Janoski Mid RM", "Kyrie 6 EP 'Chinese New Year'", "Nike Benassi JDI Floral", "Nike Drop-Type Mid", "Nike Mercurial Superfly 7 Elite FG", "Nike Zoom Rise", "Nike Air Max2 Light", "Nike Tiempo Legend 8 Elite FG", "Nike Offcourt", "Nike ACG Air Terra Antarktik", "LeBron 17", "Nike ZoomX Vista Grind", "Air Jordan 1 Mid SE", "NikeCourt Air Max Wildcard", "Nike Air Max 90 QS", "Nike MX-720-818", "Jordan Jumpman 2020 PF", "Nike ACG React Terra Gobe", "Nike Air Max 720 BETRUE", "NikeCourt Air Max Vapor Wing MS", "Jordan Trunner NXT React", "Air Jordan 11 Retro Low", "Nike ZoomX Vista Grind SP", "Zoom Freak 1 'Employee of the Month'", "LeBron 17 Low", "Nike Signal D/MS/X", "Nike Zoom Pegasus Turbo 2 Rise", "Nike x Olivia Kim Air Force 1 '07", "PG 3 NASA", "Nike Air Zoom Wildhorse 5", "Nike Tiempo Legend 8 Club IC", "Nike Air Force 1 '07 Premium", "Nike Air Max 98 LX", "Nike iSPA React", "Zoom Freak 1", "Nike Wildhorse 6", "Nike Potential 3", "Nike Pegasus 36 FlyEase (Extra Wide)", "Nike Flex RN 2018", "Nike Zoom Pegasus Turbo 2", "Nike Air Zoom SuperRep", "Nike Air Zoom Winflo 6", "Nike Air Zoom Pegasus 36", "Nike Air Zoom Pegasus 36 FlyEase", "Nike Air Max 720 (OBJ)", "Nike Zoom Fly", "Nike Zoom KD12", "Nike Air Zoom Pegasus 36 Premium Rise", "NikeCourt Royale AC", "Air Jordan 1 Mid", "Nike Air Max Dia Icon Clash", "Nike Zoom Vomero 5 SE SP", "Nike x Carhartt WIP Air Max 95", "Nike Phantom Vision 2 Elite Dynamic Fit FG", "Nike Air Max 270 Flyknit", "Nike Air Max 98", "Nike Air Max 270 Special Edition", "NikeCourt Air Zoom Vapor X", "Nike Air Force 1 Mid '07", "Nike React Ianga", "Nike Epic React Flyknit 2", "Nike Air Max Tailwind IV", "Nike P-6000 Icon Clash", "Nike Air Max 270 SE", "Nike Air Max 95 Premium", "Nike Renew Run", "Nike React Kenny 55", "Nike Benassi JDI BETRUE", "Nike React Element 55", "Nike SB Dunk High Pro", "Nike Mercurial Vapor 13 Elite FG", "Air Jordan 8 Retro", "Jordan Break", "Nike Revolution 5 FlyEase", "NikeCourt Zoom Cage 3", "Nike x Olivia Kim Air Max 98", "Nike Air Force 1 GORE-TEX \u00c2\u00ae", "Nike Air Wildwood ACG", "Nike ISPA Joyride Envelope", "Nike SB Blazer Low XT", "Nike Air Max 270 React", "Nike Phantom Vision Academy Dynamic Fit TF", "Nike Air Force 1 '07 SE", "Nike Epic Phantom React Flyknit", "Nike Air Max 200", "Nike Flex TR 9", "Nike Air Tailwind 79", "Jordan Aerospace 720", "Nike React Vision", "Nike Shox TL Nova SP", "Nike Air DSVM", "Air Jordan XXXIII", "Nike Air Max 90 NS SE", "Air Jordan 10 Retro", "Nike Zoom Gravity", "Air Jordan 14 Retro", "Nike x Hawkins High Cortez", "Nike Air Max 90 Premium", "Kyrie Low 2", "Nike React Infinity Run Flyknit", "Air Jordan 5 Retro", "Nike Mercurial Superfly 7 Academy TF", "Kyrie 5 x Bandulu", "Nike Air VaporMax 360", "Air Jordan 1 Nova XX", "Nike Zoom Pegasus Turbo 2 Special Edition", "Nike Zoom Fly Flyknit", "Nike Air Max Triax 96", "Nike AlphaDunk", "Nike Benassi JDI", "Air Jordan 13 Retro Chinese New Year", "Nike Air VaporMax 2019", "Nike SB Bruin High", "Nike Zoom Fly 3", "Nike SB Zoom Stefan Janoski Canvas RM Premium", "Nike Zoom Pegasus Turbo", "Nike Air Max 90 Essential", "Nike Free X Metcon 2", "Air Jordan 13 Retro", "Nike Air Zoom Winflo 5", "Nike Air Max Tailwind IV SP", "Nike Air Force 1 Low Retro", "Nike Air Max 720 SE", "Nike Air VaporMax 2019 Premium", "NikeCourt Air Zoom Vapor Cage 4", "Nike Kawa Shower", "Nike Air Max 97 SE", "Nike Epic Phantom React A.I.R. Cody Hudson", "Nike SFB Gen 2 20cm (approx.)", "Nike Pre-Love O.X.", "Air Jordan 4 Retro SE", "Nike React Element 55 Premium", "Nike TiempoX Lunar Legend VII Pro TF", "Nike Solarsoft", "Nike EXP-X14 SE", "Nike Tanjun", "Air Jordan 1 Jester XX Low Laced", "Nike Tiempo Legend 8 Academy IC", "Jordan Hydro 8", "Nike Air Force 1 Shadow", "Jordan 'Why Not?' Zer0.3 PF", "Jordan Proto-Max 720", "PG 4 EP", "Nike Air Zoom Pegasus 36 Trail", "Nike Zoom Rival Fly", "Nike Mercurial Superfly 7 Academy MG", "Nike Drop-Type Premium", "Nike Air Max Dia NRG"], "data": [1, 2, 1, 4, 1, 3, 2, 2, 2, 1, 1, 2, 1, 1, 1, 1, 1, 2, 2, 3, 1, 2, 1, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 2, 1, 1, 2, 1, 1, 1, 1, 2, 2, 9, 1, 2, 1, 2, 1, 1, 3, 2, 1, 3, 1, 1, 1, 1, 1, 2, 2, 1, 1, 2, 2, 1, 1, 1, 2, 1, 3, 1, 1, 2, 1, 2, 2, 1, 1, 2, 1, 2, 2, 2, 2, 2, 2, 1, 2, 1, 2, 4, 1, 1, 3, 2, 1, 2, 1, 1, 2, 1, 2, 2, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 2, 1, 2, 1, 5, 1, 2, 2, 1, 1, 1, 2, 2, 1, 2, 1, 1, 2, 1, 1, 2, 1, 2, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 1, 1, 2, 2, 1, 1, 4, 2, 2, 4, 1, 1, 1, 3, 1, 1, 1, 1, 1, 1, 2, 1, 3, 1, 2, 2, 1, 2, 1, 1, 1, 1, 2, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 4, 1, 2, 2, 2, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 2, 3, 2, 1, 3, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 2, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 1]}, "label": "product_name", "count": 272, "min": "Air Jordan 1 Jester XX Low Laced", "max": "Zoom Freak 1 'Employee of the Month'"}, {"values": {"label": ["BQ5401-001", "CK5836-100", "553558-125", "AQ7878-003", "CI1290-100", "AT6099-606", "CI3871-300", "AJ6910-009", "BQ5469-703", "CQ7731-900", "864348-019", "AH6799-300", "CN6916-100", "CD4363-103", "AA1636-406", "AJ1285-101", "AQ7492-010", "AA8027-109", "AH7858-010", "AH1015-010", "918194-003", "922474-001", "CD3395-006", "BQ3177-100", "880848-005", "AV9370-001", "BQ5102-400", "CK3309-001", "BQ6046-010", "BQ4632-602", "CK4363-100", "315123-111", "AO3108-018", "CI3708-700", "CD0917-300", "AR5677-200", "BV6344-001", "CD8526-446", "AQ7489-008", "AQ2456-007", "487471-003", "AV4789-104", "AR4229-003", "BQ3448-400", "CU9174-600", "885118-001", "CI7388-600", "AT5293-004", "CD2182-001", "BQ5240-200", "BQ9138-601", "AO2132-401", "AT5301-003", "415445-102", "BV7106-400", "AO3258-080", "AO1023-005", "CK9671-001", "CD3460-010", "CJ0861-010", "BV0614-005", "CK2595-500", "CI5646-200", "AO3269-717", "CK3314-400", "AQ2730-009", "BV4584-001", "BQ3378-002", "CI3898-200", "CT7698-600", "AV4052-116", "CD6964-002", "315115-112", "CK2630-700", "CQ2503-900", "CD4365-003", "AV4417-002", "640744-016", "AH7249-118", "CT9155-063", "BV6348-300", "BV7099-400", "AT8179-100", "881105-800", "AA0287-002", "CJ0636-100", "CK1195-101", "807471-101", "CI2666-400", "AH7857-009", "BQ3212-600", "AJ6900-102", "CU7623-002", "CK6357-005", "BV0415-300", "AT5292-004", "BV1134-001", "AR6374-402", "CK2351-601", "AQ2568-100", "AO4971-700", "CI0919-100", "CI3835-002", "CD4573-001", "BQ4424-700", "CK2085-002", "CT2692-002", "AO3095-100", "CD5029-001", "849560-001", "BQ2728-012", "AT7978-414", "CQ0989-002", "AR4347-600", "AQ4176-049", "CU0675-300", "921733-104", "AA7408-008", "AO0566-606", "BV1021-007", "852542-087", "BQ5615-002", "AA7406-006", "CD4387-100", "AO7351-104", "CI9367-301", "AO3166-300", "AT6175-100", "CN3591-002", "AT6395-002", "AT5303-100", "BV7775-100", "AQ7497-300", "CI3794-600", "AV6243-400", "AT2863-100", "BQ0129-106", "CD0200-003", "BQ4630-500", "AO3189-600", "CI3446-001", "BQ6826-003", "BQ5422-200", "AV6337-003", "AQ8228-102", "AQ2203-003", "AA8030-108", "AT7324-001", "AO1741-003", "AQ7483-001", "AR9293-603", "BQ8927-102", "BQ7043-668", "AQ8830-016", "AJ6959-717", "AQ5707-001", "CQ0492-001", "CD0916-001", "749571-154", "CJ9712-001", "CI5546-100", "BV7756-001", "CN2932-100", "CI3831-200", "918193-700", "366731-100", "BQ6166-003", "BQ6623-070", "CD2153-001", "CN2408-001", "CD3002-103", "CD4366-002", "AO2607-401", "CT5770-300", "CD7070-009", "BV1357-003", "812654-011", "807471-103", "AA8022-107", "AQ4126-100", "CI1214-004", "AT5292-606", "CI1246-302", "CD7005-001", "923112-001", "704939-103", "AQ7491-008", "AV4126-002", "BV7757-500", "AO9819-001", "807443-503", "AO2982-076", "CI1396-600", "CU0814-102", "CD4372-004", "BV5841-800", "AO1742-004", "AR5676-401", "AQ7487-201", "AH1016-602", "487754-303", "AO2924-401", "618919-031", "AR4225-100", "AO4568-600", "BQ1896-002", "CD0431-107", "BQ3381-600", "CT8919-700", "CI3899-200", "AT3378-471", "CN8490-100", "AR4543-013", "310805-137", "CD0887-201", "CJ9684-001", "849559-004", "BV1507-001", "CI9842-500", "CD7288-001", "AQ2222-200", "BV5502-600", "AT7946-414", "CD4371-001", "CD2803-001", "CJ6971-001", "AT6110-004", "CD0683-600", "CI1236-100", "CU5133-600", "CJ3312-001", "631261-035", "AR6632-603", "BQ3611-100", "CI1396-004", "CQ0912-100", "CD4570-300", "325213-139", "AO7353-105", "488161-602", "AA1640-002", "BV0417-401", "CJ2586-100", "CI1291-400", "CK2718-003", "CT2007-100", "BV7725-500", "CJ6106-100", "AT7975-606", "AR4561-200", "AO3424-001", "CD0490-101", "CU3459-200", "AQ2567-002", "CD0113-400", "CD0881-104", "AT3381-008", "CN7664-800", "AQ5708-201", "AA8018-101", "CD2722-001", "AJ4115-060", "BV0657-400", "CJ5472-900", "BQ4430-400", "AQ0114-101", "343880-090", "921826-016", "AA1625-009", "CI3709-001", "CD5050-400", "AQ1189-009", "942851-002", "528895-003", "BQ3202-011", "BQ9665-301", "CI2668-004", "634835-108", "AV2605-101", "832528-001", "CK2719-400", "CT5543-300", "CJ1794-600", "CQ6549-001", "CJ0219-400", "BQ3203-007", "AR5339-002", "CD0888-002", "CD4373-001", "AA1626-602", "CT1264-101", "CI7815-602", "554724-066", "130690-017", "AQ2210-002", "AT6817-300", "812655-011", "CD5082-001", "749747-010", "CD0490-104", "CN6928-300", "CJ0861-017", "CD2189-002", "AO3116-004", "CK2531-001", "AH8050-100", "AQ4174-049", "CJ0220-400", "BQ5190-101", "CK2630-001", "AT5410-003", "AV5555-001", "AR6631-004", "313358-006", "AO9820-001", "AV3866-001", "AV1201-600", "CT4526-100", "AQ4312-107", "CQ6566-700", "AR4225-003", "AT8240-003", "AT8241-002", "AQ7477-009", "CD5007-102", "AQ1316-500", "CN5455-160", "CT5342-007", "AR7410-603", "BV0612-001", "CI1694-300", "BV5739-500", "343881-412", "315122-001", "AQ2731-500", "AH6789-023", "AT8242-009", "CD6615-100", "BQ8928-011", "943806-602", "CK6360-001", "CD2717-001", "AQ8306-407", "CD4161-606", "BQ6044-100", "CD5036-100", "BV7766-100", "AO0354-108", "AV6259-500", "414571-030", "AT6174-004", "BQ5467-101", "705265-006", "CW4409-100", "AV5187-602", "CI1718-001", "CD4962-001", "CU5646-001", "CD2053-105", "CT7695-401", "AQ1289-003", "CI7523-002", "844127-108", "AO0571-606", "AR7718-001"], "data": [1, 1, 2, 2, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 2, 2, 1, 1, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2]}, "label": "product_id", "count": 365, "min": "130690-017", "max": "CW4409-100"}, {"values": {"label": ["0.0 - 1899.5", "1899.5 - 3799.0", "3799.0 - 5698.5", "5698.5 - 7598.0", "7598.0 - 9497.5", "9497.5 - 11397.0", "11397.0 - 13296.5", "13296.5 - 15196.0", "15196.0 - 17095.5", "17095.5 - 18995"], "data": [259, 1, 6, 7, 34, 31, 25, 12, 33, 6]}, "label": "listing_price", "count": 10, "min": 0.0, "max": 18995}, {"values": {"label": ["1595 - 3935", "3935 - 6275", "6275 - 8615", "8615 - 10955", "10955 - 13295", "13295 - 15635", "15635 - 17975", "17975 - 20315", "20315 - 22655", "22655 - 24995"], "data": [14, 39, 111, 75, 77, 41, 37, 10, 4, 6]}, "label": "sale_price", "count": 10, "min": 1595, "max": 24995}, {"values": {"label": ["0"], "data": [414]}, "label": "discount", "count": 1, "min": "0", "max": "0"}, {"values": {"label": ["Nike"], "data": [414]}, "label": "brand", "count": 1, "min": "Nike", "max": "Nike"}, {"values": {"label": ["Get your freak on in Giannis Antetokounmpo's debut signature shoe, Nike's first-ever for the international basketball sensation. The Zoom Freak 1 has the extra-responsive cushioning, forefoot stability and multi-directional traction needed to complement his freakishly athletic game.", "The Monstars have crash-landed in the Windy City, prepared to strip us of some of our greatest hardwood heroes. With the game in danger, who can Bugs and the Tune Squad turn to? Who other than The King himself, LeBron James, poised to dash the hopes and dreams of Mr Swackhammer and any team that stands in his way? The LeBron 17 Monstars is here just in time for All-Star in Chicago, where LeBron is ready to represent the Tune Squad and all that is great about the sport of basketball.", "The Nike ZoomX Vaporfly NEXT% clears your path to record-breaking speed with a lighter design and faster feel than before. With more cushioning underfoot and reduced weight up top, the result is unprecedented energy return and comfort.", "The Nike Epic React Flyknit 2 takes a step up from its predecessor with smooth, lightweight performance and a bold look. An updated Flyknit upper contours to your foot with a minimal, supportive design. Underfoot, durable Nike React technology defies the odds by being both soft and responsive, for comfort that lasts as long as you can run.", "The Nike SB Zoom Stefan Janoski Mid RM pairs a minimal look with a modern fit. It has been updated with a new, plush sockliner and a flexible midsole for better boardfeel right out of the box.", "With the Nike Air Max 90, a legendary shoe gets a luxe material treatment and brash colour palette with a history all of its own. Here, the Air Max 90 silhouette is clad in premium all-over suede with ballistic mesh accents to keep it breathable. This vibrant palette of saturated colours was made famous in the original Viotech release, which launched exclusively in Japan in the early 2000s. The head-turners have another classic to admire.", "\"Soft to the touch, the Nike Epic Phantom React A.I.R. lets go of laces for slip-on style that has you up and running in no time. A sock-like fit within breathable Flyknit feels as though the Phantom \"\"disappears\"\" as you run", "The Nike Air Max Tailwind IV SP gives a new look to the '90s classic. Max Air units give you comfort and style that last.", "The radiance lives on in the Nike Air Force 1 '07, the b-ball OG that puts a fresh, outdoorsy spin on what you know best: soft suedes, bold colours and the perfect amount of flash to make you shine.", "Inspired by heritage running shoes like the 2006 Air Max 360, the Nike Air VaporMax 360 re-imagines full-length Air with its lighter, more flexible design. The full-length foam midsole adds to the comfort while bold colours create a fresh, modern look.", "Inspired by Japan's Ekiden relay runners, the Nike Zoom Rival Fly features a futuristic look with a Zoom Air unit in the forefoot that gives you responsive propulsion. Flex grooves underneath optimise toe-off and soft foam cushions your stride. The mesh and synthetic upper blends strength and breathability.", "The Nike React Presto Premium features an innovative React foam midsole that delivers a futuristic look and bouncy, lightweight feel for all-day comfort with a whole lot of personality.", "The NikeCourt Air Zoom Vapor Cage 4 is innovated to last. Rubber and flexible plastic are built to withstand your toughest matches while a unique lacing system keeps your laces hidden for extra durability.", "Featuring the first full-length Zoom Air unit in NikeCourt history, the NikeCourt Air Zoom Zero delivers exceptional responsiveness and great court feel. Its snug-fitting upper and webbed lacing system offer second-skin-like comfort and lockdown.", "Disrupt the atmosphere and let your light shine in the Nike Air Max 720 (OBJ), featuring Nike's tallest Air unit yet. Its colours take inspiration from the natural world, a counterpoint to the shoe's futuristic look.", "The Nike Vandalised LX hacks Nike DNA for a totally new spin on the original 1984 Nike Vandal, a basketball classic. Rearranging all the components creates a bold new look with asymmetrical details.", "The Nike Air Max 2017 Women's Shoe features a seamless Flymesh upper for support and breathability. Iconic Max Air cushioning provides a lightweight, smooth feel with each step, whether you're running your three-miler or running your day.", "The Nike React Metcon takes the stability and traction from the training original and pairs it with Nike's most comfortable cushioning. Tackle high-impact and lifting workouts with a light, breathable upper and durable grip to keep you going.", "The Nike Metcon Sport is designed for heavy weightlifting like all Metcons, but is updated for increased agility during explosive movements and speed drills.", "The Nike Zoom Pegasus Turbo 2 Rise is updated with a featherlight upper, while innovative foam brings revolutionary responsiveness to your long-distance training.", "The Nike Air Max Dia Icon Clash delivers a lifted look and airy aesthetic in a sleek shape. The minimal upper modernises the look, while a Max Air unit, surrounded by clear TPU, is amplified even further by an exaggerated midsole for a boost of style.", "The Nike Air Max 97 shook up the running world with its revolutionary full-length Nike Air unit. The Nike Air Max 97 SE Men's Shoe refreshes the original design with new colours and materials.", "The Nike Benassi JDI Floral Women's Slide is designed with a textured footbed and a lightweight foam midsole/outsole for a soothing, plush feel.", "The Nike Air Zoom Structure 22 Men's Running Shoe looks fast and feels secure. Engineered mesh, a heel overlay and dynamic support throughout the midfoot all work together to provide a smooth, stable ride.", "Part of the N354 family that nods to Steve Prefontaine's fastest mile, the Nike Huarache Type is based on one of the most legendary sneakers from Nike's All Conditions Gear line-up, the Nike Mowabb. Using an adjustable approach to the Huarache system, this shoe is an exploration of fit and comfort.", "Bring the past into the future with the Nike Air Max 2090, a bold look inspired by the DNA of the iconic Air Max 90. Brand-new Nike Air cushioning underfoot adds unparalleled comfort while transparent mesh and vibrantly coloured details on the upper are blended with timeless OG features for an edgy, modernised look.", "The Nike Odyssey React Women's Running Shoe provides crazy comfort that lasts as long as you can run. Its Nike React foam cushioning is responsive yet lightweight, durable yet soft. This attraction of opposites creates a sensation that not only enhances the feeling of moving forwards, but makes running feel fun, too.\u00c2\u00a0The upper of the Nike Odyssey React is built with a lightweight, breathable fabric instead of the premium Flyknit featured on the Nike Epic React.", "Make your head-turning journey to the top comfortable. Built strong and sleek, the LeBron 7 QS features a mix of materials on the upper for a look that lasts. Metal accents and multiple LeBron crests celebrate a king, while full-length cushioning graces your every step.", "The iconic Nike Air Zoom Pegasus 36 returns with more perforations and engineered mesh in the upper, which strategically target breathability across high-heat areas. A slimmer heel collar and tongue reduce bulk without compromising comfort, while exposed Flywire cables give you a snug fit at higher speeds.", "The Nike Air Max 90 Premium pays tribute to the steadfast Royal Mail workers in London. Nike Air cushioning provides comfort for all-day wear, while fabric and leather on the upper combine breathability with durability. Details like crowns on the laces and colours inspired by Royal Mail uniforms nod to those who deliver day in and day out.", "Boasting a bold 720 Air unit, the Jordan Air Latitude 720 offers 360 degrees of cushioning and then some. This attention-grabbing, AJ 8\u00e2\u20ac\u201cinspired shoe is a celebration of '90s Jordan heritage, big-time Air and street-ready comfort.", "Featuring the same Tuned Air technology that originally put it in the sneaker history books, the Nike Air Max Plus III updates the look with TPU fused to the upper while paying homage to the iconic colour fade.", "The Nike Air Zoom Vomero 14 takes responsive cushioning to the next level. A full-length cushioning unit works with Nike React technology to deliver a super-snappy, smooth ride. Up top, the sleek design feels durable and supports your stride through every mile.", "The Nike Renew Fusion blends stability, cushioning and durability for high-impact training sessions. A foam sole cushions heavy-weight, high-paced activities, while a midfoot cage locks your foot down to a flat, wide base for stability.", "The iconic Nike Air Zoom Pegasus 36 returns with more perforations for more cooling. An engineered mesh and synthetic upper strategically targets breathability across high-heat areas. A slimmer heel collar and tongue reduce bulk without compromising comfort, while exposed Flywire cables give you a snug fit at higher speeds.", "The Nike Tiempo Legend 8 Academy IC takes the legendary touch of calfskin leather and adds cushioning that equips you for the court or the streets. A mesh tongue and collar lining add breathability and street style.", "The NikeCourt Air Max Wildcard delivers the comfort you need to hit hard and move fast on the court. A Max Air unit under your heel cushions every step, while an innovative Lunarlon midsole provides a springy underfoot sensation and extra stability.", "The Nike SB Air Zoom Bruin Edge puts a DIY spin on an iconic skate shoe. Frayed stitching, exposed foam and a mix of materials create a patched look that's built to perform. Stencils are included so you can take the DIY look to the next level.", "The Air Jordan 7 Retro celebrates MJ's championship legacy with a reissue of his 7th game shoe, the one he famously wore to gold-medal glory.", "The Nike Air Max 95 Premium retains its iconic look, but is sleeker, lighter and geared for 24/7 comfort and style. It features inspiration from the human body itself. The midsole represents the spine, graduated panels are the muscles, the lace loops are the shoe's ribs and the fabric tongue is its skin.", "The Nike Air Force 1 GORE-TEX \u00c2\u00ae retools the classic Air Force 1 with a street-approved design that meets the standards of GORE-TEX \u00c2\u00ae waterproof technology. It features water-wicking flat laces, a GORE-TEX \u00c2\u00ae bootie and GORE-TEX \u00c2\u00ae branding on the heel.", "The Nike Air VaporMax 2019 Premium Shoe wraps your foot in stretchy woven material that gives structure and support to your stride. Underfoot, the lightest, most flexible Air Max cushioning to date gives a super-bouncy sensation that rivals running on air. Metallic Silver accents spark a sense of style.", "The Air Jordan 8 Retro recaptures the memorable look of the '93 release. It's made from real and synthetic leather and has the same distinct and daring design that made the original such a '90s favourite.", "Inspired by running silhouettes from the early 2000s, the Nike Zoom 2K is reimagining the golden age of running sneakers. A classic Zoom bag takes it back to where it began, while the rubber wings that wrap the outsole push the design into the future.", "In a fluid design that speaks the language of fast, the Nike Air Zoom Winflo 6 has less bulk and a more sculpted profile than previous versions. It has 2 Zoom Air units for targeted responsiveness in the forefoot and heel. On the top, engineered mesh optimises breathability.", "The Nike Pre-Love O.X. Women's Shoe features a running-inspired profile and lightweight foam cushioning for all-day comfort.", "The Nike Air Max 90 SE Women's Shoe combines classic design lines with rich materials for an elevated look that's true to the original.", "The Nike Blazer Low LE refines the old-school basketball icon with updated details.", "The Nike React Kenny 55 lets you rep the classic and the cutting edge at once. The lines are borrowed from OG Nike running shoes like the Internationalist, rooting you to sneaker heritage, while responsive React cushioning adds modern comfort that feels unbelievably soft. Its 2-tone marble print speaks to the duality of the real world. 1 part yin, 1 part yang. Everything in perfect balance.", "Kyrie's ability to make quick, sharp cuts while handling the ball gives his game an unrivalled edge. Loaded with responsive cushioning, the Kyrie Low 2 features a curved outsole and traction that wraps up the sides, ideal for quick players who continually work the angles to break down the defence.", "The Nike Free Metcon 3 combines Nike Free flexibility around the forefoot with Metcon stability in the heel to help you get the most out of your training session.", "The Nike React Element 55 SE borrows design lines from heritage runners like the Nike Internationalist, adds reflective graphics, then places it all on Nike React technology.", "The Nike Air Max 90 stays true to its OG running roots with the iconic Waffle sole. Details and colours nod to the classic Lahar Escape Boot, delivering a vintage look from the wild.", "Inspired by the Vaporfly, the Nike Zoom Fly 3 gives distance runners race-day comfort and durability. The power of a carbon-fibre plate and responsive cushioning keeps you in the running mile after mile.", "The Nike Benassi JDI Slide features a soft foam midsole and plush, jersey fabric lining the strap. Its heritage logo adds the perfect amount of flash.", "The Nike M2K Tekno draws inspiration from the Monarch franchise and pushes it into the future with space-age detailing. Its layered upper mimics the design of the OG Monarch, while the chunky outsole draws on the beloved Monarch IV.", "\"Nodding to Hawkins High from the hit TV show \"\"Stranger Things\"\"", "The Nike Zoom Pegasus Turbo is the Pegasus you know and love with major upgrades for speed. The featherlight upper looks as fast as it feels, while the revolutionary Nike ZoomX foam that was designed for elite Nike runners during the Breaking 2 attempt brings record-breaking speed and responsiveness to your daily training runs.", "Paul George's moon shot took him from Palmdale to basketball stardom, and now he's heading to new heights with clouds under his feet. Built on an outsole inspired by moon craters, the PG 3 combines sensational traction with responsive Zoom Air cushioning that helps you move seamlessly between offence and defence.", "The Nike Air Force 1 '07 SE incorporates the same hoops-inspired performance features of the 1982 original while adding details that call to mind the 2000s aesthetic.", "Featuring a fixed strap over the top of the foot, the Jordan Break Slide features durable synthetic leather and lightweight foam cushioning for underfoot comfort.", "An all-time favourite among players and sneakerheads, the Air Jordan 12 Retro features full-length Zoom Air cushioning and full-grain leather styled with distinct radial stitch lines.", "The Kyrie 4 Men's Basketball Shoe is ultra-flexible, responsive and supportive. It's designed for Kyrie Irving's sudden changes of direction and smooth yet rapid playing style.", "The Nike Air Max 720 goes bigger than ever before with Nike's tallest Air unit yet, offering more air underfoot for unprecedented, all-day comfort. Has Air Max gone too far? We hope so.", "The Nike Air Max 97 Men's Shoe keeps the sneaker favourite going strong with the same design details that made it famous: water-ripple lines, reflective piping and full-length Max Air cushioning.", "The Nike Joyride Run Flyknit is designed to help make running feel easier and give your legs a day off. Tiny foam beads underfoot contour to your foot for cushioning that stands up to your mileage.", "Designed for speed, stability and comfort, the Nike Air Ghost Racer was a hit 20 years ago\u00e2\u20ac\u201dand now it's back in a stitch-for-stitch remake. And though it has all the same features as the original, it might be even better than you remember.", "The Nike Air Max Plus III combines ultra-comfortable Tuned Air Technology with an energetic silhouette made famous by its predecessors. The III updates the look with TPU details fused to the upper while paying homage to the iconic colour fade.", "The Nike Air Zoom Vomero 14 takes responsive cushioning to the next level. The full-length Zoom Air unit works with Nike React cushioning to deliver a super-snappy, smooth ride. On the top, the sleek design is engineered to support your stride.", "Ideal for runs up to 3 miles, the Nike Free RN Flyknit 3.0 delivers a lace-free design so you can slip in and hit your stride. An updated flex groove pattern and modified midsole foam provides more flexibility than its predecessor, creating a barefoot sensation with every step. A mix of supportive and stretchy yarns are zonally placed for comfort that moves with your foot.", "The Nike SB Zoom Stefan Janoski Canvas RM Premium pairs a minimal look with a modern fit. It has been updated with a new, plush sockliner and a flexible outsole for better boardfeel right out of the box.", "The Nike SB Blazer Low XT Men's Skateboarding Shoe retools the classic profile for extra-tough sessions, adding lightweight impact protection.", "Featuring soft, lightweight cushioning, the Air Jordan 10 Retro offers performance-inspired comfort with iconic Air Jordan detailing.", "The Nike x Undercover Air Max 720 brings Jun Takahashi's vision of chaos and balance to Air. 360 degrees of cushioning and a breathable design capture Takahashi's view of the future of fashion.", "Designed specifically for a woman's foot, the Nike Air Max Dia delivers a lifted look and airy aesthetic. The minimal upper modernises the silhouette, while the Max Air unit is amplified even further by an exaggerated midsole for a boost of style.", "Made for athletes to relax in pre- and post-matches, the Jordan Hydro 8 works as an everyday, anytime slide. It offers the plush cushioning of a Solarsoft foam footbed and an adjustable strap.", "The Nike Joyride Dual Run is designed to help make running feel easier and give your legs a day off. Tiny foam beads underfoot contour to your foot for cushioning that stands up to your mileage.", "The Nike Xarr sets you up to take on the elements in style. It's crafted with a water-resistant leather upper to help keep you dry and a rubber outsole to combat the season's wet conditions. With intricate detailing and a stylised tongue cover, it's a fresh new look with lots of attitude.", "The Nike Air Max 270 React uses lightweight, layered, no-sew materials to create a modern style that looks as good as it feels.", "The Nike Air Max 90 Essential Men's Shoe keeps the classic design lines of the 1990 original and the cushioning that made it famous.", "The Nike In-Season TR 9 is light, stable and features deep, comfortable footbed for superior impact absorption and energy return throughout your entire workout.", "With more Air underfoot, the Jordan Aerospace 720 delivers next-generation comfort with signature Jordan heritage.", "With a stretchable knit in the upper, the Nike Flex RN 2019 makes every run comfortable as it expands and contracts along with your foot. Dual-density foam gives you cushioned comfort for pounding out the miles, while grooves in the outsole provide flexibility from heel to toe.", "The Nike Wildhorse 6 keeps it stable, secure and lightweight on the trail. An updated outsole delivers the traction you need, while a foam midsole keeps you cushioned on your run.", "Taking both height and craft to new levels, the Nike Air Force 1 Sage Low features a platform midsole and a pared-down upper for a bold yet feminine look.", "The Nike Air Max Dia SE features sleek lines and a sheer upper that combine classic Air Max elements into a lightweight, comfy and versatile icon. Together with its smart toe-down profile and extra lift, the Nike Air Max Dia SE offers an ever-bigger expression of Nike Air.", "The Nike Air Force 1 '07 LV8 has the same hoops-inspired performance of the '82 OG plus fresh new patterns for a sleek look that turns heads.", "Hiking shoes don't need to be big and bulky, and the Nike Air Skarn proves it. Originally launched in 1997, this reintroduction of a classic is lightweight, comfortable and tougher than it looks.", "The Air Jordan 5 Retro for women gives a colourful makeover to one of MJ's most memorable game shoes. Featuring iconic fighter plane-inspired midsole sculpting and moulded lace toggle, this version flashes an all-over reflective rainbow print for some bold colour and energy.", "The Nike Phantom Venom Academy FG is engineered for powerful, precise strikes that win games. Ridges on the instep create spin to control the flight of the ball, while the firm-ground plate provides the traction needed to unleash at any moment.", "Nike Zoom Fly Flyknit Men's Running Shoe is built for record-breaking speed. The Flyknit upper delivers ultra-lightweight support that fits like a glove.", "Part shoe, part sandal, the Nike Air Max FF 720 takes you into a new realm of Air. Built specifically for a woman's foot, it features premium leather on heightened foam for bold versatility and unbelievable comfort. Cinch it up with its unique drawcord system and make the streets your runway.", "Lounge wherever you go and let the Nike Joyride CC3 Setter take you into a new world of comfort. It places your feet directly on soft foam and innovative bead-pods for extra comfort, while exaggerated textures add unrivalled depth to your edgy attitude.", "An icon hits the paths less travelled in the Nike Air Zoom Pegasus 36 Trail. Perforated mesh upper offers breathable comfort, and double Zoom Air units cushion your stride. Outsole lugs optimise traction when running uphill.", "The Nike Phantom Venom Academy TF is engineered for powerful, precise strikes that win games. Ridges on the instep help create spin to control the flight of the ball. The sole provides the turf traction needed to unleash at any moment.", "The Nike Metcon 5 AMP arms you with stability for heavy lifting and traction for sprints during high-impact training. It combines breathability and durability to be your secret weapon in the gym.", "The Nike React Element 55 borrows design lines from heritage runners like the Nike Internationalist, then places it all on Nike React technology.", "\"The Nike Air Max 90 Premium is built in honour of celebrated Parisian bakers who define French cuisine and hard work. Nike Air cushioning under your feet feels softer than freshly baked brioche while a durable upper features a French flag and baking champion's wheat laurel on opposite heels. \"\"Fresh baked daily\"\" is written on the liner", "The Nike Air Streak Lite puts minimalist style back into the spotlight. Originally created by Nike's first Japanese creation team in 1995, this lightweight, sleek silhouette pushes footwear to a different space.", "Breaking new ground for athletes, KD provides unprecedented access to his life through his YouTube channel. It's this type of authentic connection that KD wanted to create with his fans when he first partnered with YouTube in 2017. In celebration of his channel, the KD12 'YouTube' features co-branded graphic hits on the tongue and heel that celebrate two icons coming together to change the game.", "The Nike Odyssey React Men's Running Shoe provides crazy comfort that lasts as long as you can run. Its Nike React foam cushioning is responsive yet lightweight, durable yet soft. This attraction of opposites creates a sensation that not only enhances the feeling of moving forwards, but makes running feel fun, too.\u00c2\u00a0The upper of the Nike Odyssey React is built with a lightweight, breathable fabric instead of the premium Flyknit featured on the Nike Epic React.", "\"Breathability and inspiration come together in the Nike Air Zoom Pegasus 36 Premium Rise. A knit-in graphic repeating across the mesh and synthetic upper spells out \"\"Just Do It.\"\" in perforations. Strategically placed", "Drawing inspiration from the Monarch franchise, the Nike M2K Tekno combines real and synthetic leathers with textile for a layered look.", "The legend lives on in the Nike Air Force 1 Mid '07 Men's Shoe, a modern take on the icon that blends classic style and fresh, crisp details.", "Disrupt the universe in your Nike MX-720-818. Featuring materials inspired by spacesuits and quilted stitching on the upper, it takes the largest Air unit to date and blends it with the futuristic look of the final frontier. Mesh on the upper keeps your feet cool while the clear sole features the black and grey reminiscent of deep space.", "Bridging performance and style, the Nike Zoom Pegasus Turbo XX Women's Running Shoe combines a full-length ZoomX midsole with an upper re-imagined exclusively for women. This feather-light translucent upper pops with a racing-stripe print that looks as fast as it feels, while Nike ZoomX foam delivers revolutionary responsiveness. A transparent, soft TPU overlay wraps your midfoot for the fit you need.", "An icon trades pavement for path with the Nike Air Zoom Pegasus 36 Trail. A perforated mesh upper adds breathability, as double Zoom Air units underfoot cushion your stride. Opposing lugs on the outsole optimise traction on your uphill climbs.", "Designed for low-impact workouts and circuit training, the Nike Flex TR 9 pairs a breathable mesh and synthetic upper with a supportive platform designed for flexibility and traction.", "Ideal for runs up to 3 miles, the Nike Free RN 5.0 returns to its roots as a natural motion shoe. An updated flex groove pattern and modified midsole foam provides more flexibility than its predecessor, creating a barefoot sensation with every step. At the upper, breathable and stretchy mesh moves with your foot, while synthetic suede overlays provide stable support.", "The Nike Odyssey React Flyknit 2 Women's Running Shoe delivers a strategic combination of lightweight Flyknit and synthetic material for support just where you need it. Underfoot, Nike React cushioning delivers a soft, springy ride for a route that begs to be crushed.", "Clean lines, versatile and timeless\u00e2\u20ac\u201dthe people's shoe returns with the Nike Air Max 90. Featuring the same iconic Waffle sole, stitched overlays and classic TPU accents you've come to love, it lets you walk among the pantheon of Air.", "Designed specifically for a woman's foot, the Nike Air Max Dia LX delivers a lifted and airy aesthetic in a new, sleek shape. The minimal upper modernises your look, while the Max Air unit, surrounded by clear plastic, elevates your style.", "The Nike Air Max 270 React ENG combines a full-length React foam midsole with a 270 Max Air unit for unrivalled comfort and a striking visual experience.", "\"Designed and tested in Oregon, the Nike ACG Antarktik is a \"\"jacket\"\" for your foot. Its tough ripstop upper combines with a GORE-TEX lining to help keep your foot dry. All-new lug details use hard rubber for traction in all conditions.\"", "The Nike Air Max 720 goes bigger than ever before with Nike's tallest Air unit yet, which offers more air underfoot for unprecedented, all-day comfort. Details include bubble wrap accents and colours inspired by the natural world.", "The radiance lives on in the Nike Air Force 1 '07, the b-ball OG that puts a fresh spin on what you know best: crisp leather in an all-white colourway for a statement look on and off the court.", "Utilising the latest innovations and Nike's new iSPA project\u00e2\u20ac\u201dwhich touts a philosophy of improvise, scavenge, protect and adapt\u00e2\u20ac\u201dthe Nike iSPA React takes experimental expression and runs with it. Its low-top design features a tape-like upper nodding to the power of improvisation in the face of adversity.", "The Nike SB Zoom Stefan Janoski Canvas RM pairs a minimal look with a modern fit. It has been updated with a new, plush sockliner and a flexible midsole for better boardfeel right out of the box.", "The Nike Classic Cortez Women's Shoe is Nike's original running shoe, designed by Bill Bowerman and released in 1972. This version features a leather and synthetic leather construction for added durability.", "The Nike Metcon 5 is our most tuned Metcon yet. This means specific stability for heavy lifting, traction made for speed and durability where you need it. It even includes a Hyperlift insert that's compatible with all prior versions of the Metcon. Meet your secret weapon for weight-lifting and high-impact training.", "The NikeCourt Air Zoom Vapor X has an updated Dynamic Fit system with a full-length foot frame to provide ultimate lateral control. Its new generative outsole combined with a Zoom Air unit provides a lightweight, responsive feel on the court.", "According to the four-year cycle of the Chinese zodiac, the year of the mouse represents growth. Through the folk-art tradition of Jianzhi (paper cutting), the Kyrie 6 'Chinese New Year' honours major breakthroughs in Nike innovation with a graphic on the tongue. A watercolour-themed print completes the art-inspired CNY theme.", "The Nike Air Max 270 is inspired by two icons of big Air: Air Max 180 and Air Max 93. It features Nike's biggest heel Air unit yet for a soft ride that feels as remarkable as it looks.", "The Nike React Ianga takes elements from a jungle boot and mixes them with modern, technical details. Part of the 10th Collection, this shoe is a unique, military-inspired expression of the React family.", "\"Michael Jordan's stealthy creativity on the court earned him the nickname \"\"Black Cat\"\". The Air Jordan 13 Retro is based on the OG model and has responsive cushioning and premium materials. This version features special details to honour the Chinese New Year.\"", "Paul George is the rare high-percentage shooter who's also a coach's dream on D. Designed for his unrivalled 2-way game, the PG 4 EP unveils a new cushioning system that's lightweight, articulated and responsive, ideal for players like PG who go hard every play.", "Bounce like never before in the Zoom Rise, Nike Basketball's artfully crafted creation for the upwardly mobile. This mid-top provides containment and support up through the ankle, while an extra-large Nike Zoom Air unit under the ball of your foot redefines how responsive a shoe can be.", "The Nike Air Zoom Pegasus 36 FlyEase maintains everything you love about the Pegasus and adds a zip for effortless on and off. The no-tie lacing system adjusts easily for a secure feel as you tackle your miles.", "Nike Sportswear's first collaboration by the Hatfield brothers, the Nike Air Max 90 FlyEase combines the timelessness of Tinker's original design with Tobie's FlyEase technology. The heel collapses when you step in then snaps back into place, providing quick, easy access to one of history's most iconic sneakers.", "Bring a new point of view to off-court culture in your Nike Air Max 720 Waves. Its low-profile stance showcases Nike's tallest Air unit to date while its D/MS/X design mixes culture with sport, letting you enter a fresh dimension of hoops style with unparalleled comfort.", "The Nike React Element 55 is a balanced blend of classic design and forward-looking innovation. Nike React foam delivers lightweight, bouncy comfort, while rubber outsole pods and an exaggerated outsole offer a cutting-edge look that begs a reaction.", "The Nike Air Max 720 goes bigger than ever before with Nike's tallest Air unit yet, which offers more air underfoot for unimaginable, all-day comfort. Has Air Max gone too far? We hope so.", "Olivia Kim remembers NYC in the '90s. The city danced at all-night raves, and the fashion was bomb dot com. The Nike x Olivia Kim AF-1 '07 captures the outrageous '90s rave spirit with a blue corduroy upper and glow-in-the-dark details.", "The Nike Air Zoom Terra Kiger 6 is built to take on wet and rocky trails. Lightweight in design, it features a sleeker look with a woven heel for a secure fit and feel.", "The Nike Zoom Pegasus Turbo 2 is updated with a featherlight upper, while energy-returning foam brings revolutionary responsiveness to your long-distance training.", "The Nike Air Zoom SuperRep is designed for circuit training, HIIT, short runs and other fast-paced exercise. Zoom Air cushioning in the forefoot combines with a wide, stable heel to keep you moving and lifting comfortably.", "The soft upper of the Nike Mercurial Superfly 7 Academy IC wraps your foot for a second-skin fit, while the rubber outsole helps supercharge traction on the court or street.", "The Air Jordan 5 Retro brings back the original that was inspired by WWII fighter planes, featuring a mid-top profile and synthetic leather. An inner-sleeve creates a snug, comfortable feel.", "The Nike React Element 55 SE borrows design lines from heritage runners like the Nike Internationalist, then places it all on Nike React technology.", "NYC in the '90s\u00e2\u20ac\u201dif you spent much time in one of the many neighbourhoods, you'd hear SUVs driving around bumping Jamaican dancehall music at full blast. The Nike x Olivia Kim Air Max 98 celebrates the music and culture of NYC as remembered by designer Olivia. The fresh red-yellow-green take on the iconic Air Max 98 captures the vibrancy of the city's Rastafarian community.", "Designed to make fast go faster, the Nike Zoom Gravity is built to take you from quick tempo runs to winning races. Snappy forefoot propulsion and grippy, multi-surface traction combine to maximize your stride.", "Paul George's moon shot took him from Palmdale to basketball stardom, and now he's heading to new heights. This space-themed version of the PG 3 offers sensational traction, springy responsiveness and lightweight containment for seamless moves between offence and defence.", "The lightweight Nike Air DSVM gives you all-day comfort and street-ready style in a modern take on a classic silhouette. An adjustable strap lets you change up the fit for a look that's sure to turn heads.", "The legend lives on in the Nike Air Force 1 '07 Men's Shoe, a modern take on the iconic AF-1 that blends classic style and fresh details.", "Utilising the latest innovations and Nike's ISPA project\u00e2\u20ac\u201dwhich touts a philosophy of improvise, scavenge, protect and adapt\u00e2\u20ac\u201dthe Nike ISPA Air Max 720 delivers smooth cushioning. It features an extra-large air unit, providing support along with innovative details inspired by modern life in the city.", "The Nike SB Dunk High Pro pairs iconic Dunk style with a high-top design for a fresh look. A Zoom Air unit in the heel and a padded tongue create a comfortable fit that's made to skate.", "The Nike Air Zoom Pegasus 36 FlyEase (Extra-Wide) maintains everything you love about the Pegasus and adds a zip for effortless on and off. The no-tie lacing system adjusts easily for a secure feel as you tackle your miles.", "Made with soft, pliable foam infused with grooves for superb airflow, the Nike Solarsoft Women's Flip Flop is a must-have in warm weather.", "The Nike Legend React Women's Running Shoe features a breathable upper with synthetic overlays that enhance durability while smooth, responsive foam cushions every step as you run.", "The Nike Air Max 2017 Men's Shoe features a seamless Flymesh upper for support and breathability. Iconic Max Air cushioning provides a lightweight, smooth feel with each step, whether you're running your three-miler or running your day.", "Taking inspiration from the archives, the NikeCourt Royale Men's Shoe brings retro tennis style in a modern package for everyday comfort.", "The Nike ZoomX Vista Grind SP is proof of the improbable, bringing you to a bold new place that's rebellious and forward thinking. Recycled foam from the Nike ZoomX family plus lightweight fabric and durable overlays come together to give the shoe a modern look and classic comfort.", "Featuring the first full-length Zoom Air unit in NikeCourt history, the NikeCourt Air Zoom Zero delivers exceptional responsiveness and great court feel. Its fabric and synthetic upper with a customisable lacing system offers second-skin-like comfort.", "The Nike Tiempo Legend 8 Club IC takes the touch of textured synthetic leather and adds a grippy rubber outsole for multi-directional traction.", "Crisp and clean with the perfect amount of lift, the Nike Air Max Dia is designed to elevate her every day. The minimal upper features no-sew skins and breathable mesh for an airiness that matches the swirled iridescent patterns. Boosting style and comfort, the Max Air unit underfoot joins with the super-soft foam midsole.", "Designed specifically for a woman's foot, the Nike Air Max Dia Winter delivers a lifted and airy aesthetic in a sleek shape. The minimal upper modernises the look, while a Max Air unit is amplified even further by an exaggerated midsole for a boost of style.", "Designed to make fast go faster, the Nike Zoom Gravity is built to take you from quick tempo runs to winning races. Snappy forefoot responsiveness and grippy, multi-surface traction combine to optimise your stride.", "\"Soft to the touch, the Nike Epic Phantom React lets go of laces for a slip-on style that gets you up and running in no time. A snug, secure, sock-like fit within a breathable Flyknit and synthetic upper feels as though the Phantom \"\"disappears\"\" as you run.\"", "Be bouncy and buoyant in the Nike Air VaporMax Flyknit 3. Inspired by high fashion, the upper features flowing lines of breathable, stretchable Flyknit construction. Revolutionary VaporMax Air technology keeps a spring in your step with toe-to-heel cushioning.", "The NikeCourt Zoom Cage 3 offers zoned durability with a lightweight, pliable overlay that moves with you. A Zoom Air unit in the heel delivers a low-profile ride with responsive cushioning.", "The Nike Zoom Pegasus Turbo 2 Hakone is updated with a feather-light upper, while energy-returning foam brings revolutionary responsiveness to your long distance training.", "The Nike Tiempo Legend 8 Academy MG takes the legendary touch of calfskin leather and adds a versatile multi-ground plate for traction on natural- and artificial-grass surfaces.", "An ideal performer for runs up to 3 miles, the Nike Free RN 5.0 AW returns to its roots as a motion shoe. A stripped-down upper with single-layer mesh stretches and moves with you. Less foam in the midsole makes it easy to hit the ground running.", "The Air Jordan 1 Mid SE maintains the timeless appeal of the OG AJ1, revamped with fresh colours and premium materials. Built with a lightweight Air-Sole unit and classic design lines, it captures the essence of the original through a modern lens.", "Designed with a zip closure secured by a midfoot strap, the Nike Revolution 5 FlyEase lets you suit up for your run quickly and easily. Soft foam cushions your stride, while a minimalist design fits in just about anywhere.", "Jun Takahashi's vision of chaos and balance comes to life in the modern age. The Nike x Undercover React pairs a classic welly with several technologies to create a shoe unlike any other.", "Made from durable nylon canvas and synthetic leather, the Nike SFB Gen 2 20cm (approx.) is a lightweight tactical boot designed for speed and flexibility over rough terrain. Inspired by Nike Free technology, the flexible sole is equipped with an aggressive traction pattern for multi-surface grip and an internal rock shield to help prevent punctures.", "The Nike Air Max 270 SE is inspired by 2 icons of Air: the Air Max 180 and the Air Max 93. It features Nike's biggest heel Air unit yet for a super-soft ride that feels as comfortable as it looks.", "In a fluid design that speaks the language of fast, the Nike Air Zoom Winflo 6 has less bulk and a more sculpted profile than previous versions. It has 2 cushioning units for targeted responsiveness in the forefoot and heel. Up top, mesh in the upper provides breathability.", "Designed for running but adopted by the street, the Nike Air VaporMax 2019 features the lightest, most flexible Air Max cushioning to date. A stretch woven material wraps your foot for lightweight support and stability, while an external reinforcement in the heel secures the back of your foot.", "The Nike React Vision is a story of surreal comfort. Layered textures, shapes and vivid colours are combined in a design influenced by the exaggerated world of our dreams, while React foam and an ultra-plush tongue provide surreal comfort. DIMSIX on the tongue tab rises high off the collar to add just a touch of Nike's own origin story.", "Drawing inspiration from four classic Air Jordans, the Jordan Mars 270 is a modern-day remix that offers a heavy dose of heritage, plus an enormous Max Air unit and springy foam for non-stop comfort.", "Originally released in 1979, the Nike Daybreak is a blast from the past. Featuring the same rubber Waffle outsole and nylon upper, it gives you true vintage style.", "\"Inspired by Phil Knight's \"\"Shoe Dog\"\"", "The Air Jordan 1 Jester XX Low knows not to take things too seriously, except comfort. A real and synthetic leather upper is supportive where it counts, while the exaggerated midsole adds a little altitude with responsive cushioning.", "The Nike Air Max 98 brings back retro Air Max style with contemporary comfort innovations. A full-length Max Air unit gives total cushioning in every step.", "A mash-up of Pegasus' past, the Nike P-6000 Icon Clash features breathable mesh with horizontal and vertical overlays for a 2000s running look that is as striking as, say, a majestic winged horse. Drawing on the design of the Nike Pegasus 25 and 2006, its running aesthetic meets all-day comfort for the streets.", "With exceptional cushioning and modern detailing, the Nike Air Max 200 radiates cool while providing extreme comfort. Its design is inspired by patterns of energy radiating from the earth\u00e2\u20ac\u201dlike the flow of lava and the ocean's rhythmic waves.", "Since bursting onto the basketball scene in 1996, the Air Jordan 11 Retro Low Men's Shoe has been one of the most beloved Jordan designs ever. Signature details and Nike Air cushioning combine for the ultimate fusion of style and comfort.", "First released in the late '90s, the Nike Air Max Triax 96 SP now returns as a cult classic. Featuring the same iconic shape and large-volume visible Air unit, it brings back the classic comfort and style you remember.", "Never worry about laces in the Nike Free RN Flyknit 3.0. This remix leaves them out\u00e2\u20ac\u201dletting you slip in quickly and hit your stride even faster. Supportive yarns join stretchy Flyknit for a lightweight upper that feels like a second skin. Heel-to-toe grooves in outsole move and bend with every stride.", "The Nike Air Max Bella TR 2 is a versatile trainer for weight training and station workouts. It's crafted from breathable fabric and features comfortable cushioning underfoot with a flat outsole for stability during workout sessions.", "The stretchable knit upper of the Nike Flex RN 2019 wraps you in softness as it expands and contracts with your foot. Dual-density foam layers supply durable cushioned comfort, while grooves on the outsole give you heel-to-toe flexibility.", "Inspired by the Vaporfly, the Nike Zoom Fly 3 Premium gives distance runners race-day comfort and durability. The power of a carbon-fibre plate keeps you in the running mile after mile.", "The Nike Phantom Vision Academy Dynamic Fit MG brings the fierce precision of street play to the pitch. A foot-hugging sleeve has a custom feel and the Ghost Laces system tights with 1 pull and is hidden for a bigger striking surface.", "The NikeCourt Air Max Vapor Wing MS is the perfect pairing of style and comfort for your match. Translucent textile shows off the technology within, while rubber on the toe increases durability. An Air Max unit provides legendary, lightweight cushioning.", "The 2003 icon returns with new upgrades. Fearless on the streets, the Nike Shox TL Nova takes mechanical cushioning to the next level. A modernised upper combines with Nike Shox columns for a new era.", "Inspired by the early 2000s original, the Nike React Presto puts an exaggerated spin on an unconventional icon. Nike React foam delivers an expressive look with a lightweight, bouncy feel and a whole lot of personality.", "Ready for the toughest workouts, the Jordan Trunner NXT features incredibly responsive cushioning and a breathable, lightweight upper.", "The NikeCourt Air Max Wildcard delivers the comfort you need to hit hard and move fast on the court. A Max Air unit under your heel cushions every step, while an innovative Lunarlon midsole gives you a springy underfoot sensation and extra stability.", "The legend lives on in the Nike Air Force 1 '07 SE. This fresh take on an icon gives you classic style while playing up the AF-1's versatility with new colours and materials.", "The Nike Air Zoom Structure 22 Women's Running Shoe looks fast and feels secure. Engineered mesh, a heel overlay and dynamic support throughout the midfoot all work together to provide a smooth, stable ride.", "Featuring a full-length foam midsole and VaporMax Air unit, the Nike Air VaporMax 360 gives you remarkable underfoot comfort with bold 2000s style inspired by the Air Max 360.", "Originally released in 1994, the Nike Air Max2 Light returns as a near-exact replica of the iconic runner with style for the street. Its mesh and synthetic upper, moulded heel and Max Air unit honour the OG, while the soft foam midsole optimises all-day comfort.", "The Nike Benassi Slide features a lined upper with a bold logo for plush comfort and an athletic look. A foam midsole and outsole provide lightweight impact protection.", "The Nike TiempoX Lunar Legend VII Pro Turf Football Boot features lightweight foam cushioning and a premium leather construction for a flexible fit and dominating touch when playing on turf pitches.", "The Nike SB Blazer Low GT pairs a supportive feel with lightweight, responsive cushioning for everyday use. Just like Grant Taylor, it blends contemporary style with old-school traditions.", "Building on the 360-degree Flyknit innovation of the 12, the Nike Mercurial Vapor 13 Elite FG adds a Nike Aerowtrac zone to the forefoot and a slightly stiffer chassis to help supercharge traction. Inside, an insole with NikeGrip technology provides maximum interior traction underfoot and lightweight cushioning.", "The Nike x Carhartt WIP Air Max 95 features reflective details and neon pops of colour. Carhartt WIP materials help construct the durable upper of a new take on the first sneaker with visible forefoot Nike Air.", "The bold silhouette of Nike Air lifts the Nike Air Max 270 React to new heights, while the Nike React foam midsole delivers exceptional cushioning. Imagine all-day comfort with unstoppable style.", "The Nike Zoom Vomero 5 SE SP wraps your foot in breathable support. A combination of durable synthetic leather and breathable mesh stands ready for the rigours of your day. Soft foam and Zoom Air cushioning deliver lightweight comfort for a smooth ride.", "The Nike Odyssey React Flyknit 2 provides a strategic combination of lightweight Flyknit construction and synthetic material for support. Underfoot, Nike React cushioning delivers a soft, springy ride for a route that begs to be crushed.", "Find unstoppable comfort in the Nike Air Max 270. The eye-catching Max Air 270 unit and Nike React foam midsole deliver cushioning that moves with you. A soft and minimal collar contours to your heel for an amazing fit. A glow-in-the-dark colourway celebrates the New Year.", "The Nike Metcon 5 is the most tuned Metcon yet. This means specific stability for heavy lifting, traction made for speed and durability where you need it. It even includes a Hyperlift insert that's compatible with all prior versions of the Metcon. Meet your secret weapon for weight-lifting and high-impact training.", "The Nike M2K Tekno Shoe draws inspiration from the Monarch franchise and pushes it into today with a futuristic heel counter and plush tongue for additional comfort.", "The Nike React Element 55 SE borrows design lines from heritage runners like the Nike Internationalist, adds premium details and places it all on Nike React technology.", "The Nike Phantom Vision Club Dynamic Fit FG brings the fierce precision of street play to the pitch. A foot-hugging Dynamic Fit collar combines with targeted texture for precision to create a boot for the finishers, the providers and the battlers of tomorrow's game.", "LeBron works hard in the offseason, getting stronger and fine-tuning his already devastating skills. Inspired by his dedication and commitment to inclusivity, the Soldier 13 SFG combines LeBron-tested cushioning, containment and support with a wide, flexible collar and lace-free closure that lets all players get in and out of the shoe with ease.", "The Air Jordan 1 Mid Shoe is inspired by the first AJ1, offering OG fans a look at how far the Jordan brand has come since 1985.", "The Nike Kawa Shower Men's Slide is designed to help feet recover after competition. A textured Solarsoft footbed and flexible foam outsole offer lightweight comfort.", "The Nike Air Force 1 SP adds a shiny metallic finish to the details that made the original an icon.", "Nothing as fly, nothing as comfortable, nothing as proven. The Nike Air Max 90 stays true to its OG running roots with the iconic Waffle sole, stitched overlays and classic TPU details. Classic colours celebrate your fresh look while Max Air cushioning adds comfort to the journey.", "Built with a carbon-infused nylon plate inspired by the VaporFly 4%\u00e2\u20ac\u201dour most efficient marathon shoe ever\u00e2\u20ac\u201dthe Nike Zoom Fly Men's Running Shoe is the perfect response to the demands of your toughest tempo runs, long runs and race days.", "The Nike MX-720-818 uses materials inspired by space suits for a futuristic take on classic Air Max DNA.", "Responsive and supportive, the Kyrie 5 is made with a soft midsole for responsive cushioning and a curved outsole for multi-directional traction.", "An ideal performer for runs of up to 3 miles, the Nike Free RN 5.0 returns to its roots as a running shoe. A stripped-down upper with single-layer mesh is stretchy to feel like a second skin. The lightweight midsole with less foam makes it easy to hit the ground running.", "The LeBron 17 harnesses LeBron's strength and speed with containment and support for all-court domination. It features a lightweight mix of knit and heat-moulded yarns that gives each one a durable look and feel. Combined cushioning provides LeBron with the impact support and responsive energy return he needs to power through the long season.", "The legend lives on in the Nike Air Force 1 Mid '07 Women's Shoe, a modern take on the icon that blends classic style and fresh, crisp details.", "Designed specifically for a woman's foot, the Nike Air Max Dia delivers a lifted look, an airy aesthetic and a sleek shape. The minimal upper modernises the look, while the Max Air unit, surrounded by clear TPU, is amplified even further by an exaggerated midsole for a boost of style.", "The Nike Air Max 98 features the OG design lines that were inspired by the walls of the Grand Canyon while adding bursts of fresh colour to the upper. The fluid, textured look and full-length Nike Air cushioning set you apart from the pack.", "The Nike Air Max Tailwind IV gives a new look to the '90s classic. Max Air units give you comfort and style that last.", "The Nike Air Force 1 Shadow pays homage to the women who are setting an example for the next generation by being forces of change in their community. This sneaker reflects this ethos in its design with double the Swoosh, double the height and double the force.", "The Nike Benassi JDI BETRUE Slide creates lightweight comfort in a classic design, while the soft foam sole cushions your every step.", "The Nike Air Huarache Ultra Women's Sandal helps keep your feet cool and comfortable on warmer days.", "The Air Max 97 shook up the running world with its revolutionary full-length Nike Air unit. The Nike Air Max 97 remasters the original design with bold new colours and flashes of gold.", "Inspired by the Vaporfly, the Nike Zoom Fly 3 gives distance runners race-day comfort and durability. The power of a carbon-fibre plate keeps you in the running mile after mile.", "\"Soft to the touch, the Nike Epic Phantom React Flyknit is lace-free for a slip-on style that gets you up and running in no time. A snug, secure, sock-like fit within a breathable Flyknit upper feels as though the Phantom \"\"disappears\"\" as you run.\"", "Bring the past into the future with the Nike Air Max 2090, a bold look inspired by the DNA of the iconic Air Max 90. Brand-new Nike Air cushioning underfoot adds unparalleled comfort while transparent fabric on the upper is blended with timeless OG features for an edgy, modernised look.", "Kevin Durant always looks relaxed\u00e2\u20ac\u201duntil he attacks. His game is reserved yet explosive, difficult to guard and impossible to stop. The KD12 was built for his dominance and endless energy all game long, with the latest innovation in Nike Zoom Air technology.", "\"Soft to the touch, the Nike Epic Phantom React Flyknit is lace-free for a slip-on design that gets you up and out the door in no time. A snug, sock-like fit and breathable upper materials will make you feel as though the Phantom \"\"disappears\"\" as you run.\"", "The NikeCourt Air Zoom Vapor X has an updated Dynamic Fit system with a full-length foot frame to provide ultimate control. Its new generative outsole combined with a Zoom Air unit provides a lightweight, responsive feel on the court.", "Alyx founder and creative director Matthew M. Williams is known for his ability to push fashion into new spaces. His angle is simple: Combine the influence of his life in New York and California with the latest innovations. The Nike x MMW Joyride CC3 Setter runs with that idea, bringing you to a world of cushioning and comfort.", "Inspired by the chopping, cutting and rebuilding of custom cars and bikes, the Nike Signal D/MS/X overturns the idea of sportswear with style and attitude. With layered materials and intricate detailing, it uses innovations in an irreverent way that's more aesthetic than athletic.", "The iconic Nike Air Zoom Pegasus 36 returns with more perforations and mesh in the upper for targeted breathability across high-heat areas. A slimmer heel collar and tongue reduces bulk without compromising comfort, while exposed cables give you a snug fit at higher speeds.", "Designed in collaboration with Gilbert Baker, the Nike Air Max 720 BETRUE features a rainbow-coloured upper inspired by, and in celebration of, the LGBTQ community.", "The iconic Nike Air Zoom Pegasus 36 returns with more perforations and engineered mesh in the upper for targeted breathability across high-heat areas. A slimmer heel collar and tongue reduce bulk without compromising comfort, while exposed Flywire cables give you a snug fit at higher speeds.", "Featuring soft foam cushioning and lightweight, woven fabric in the upper, the Jordan Proto-Lyte is made for all-day, bouncy comfort.", "Jun Takahashi's vision of chaos and balance continues with the Nike x Undercover React Presto. An OG Presto design uses new details that pay homage to last season's collaboration, the React Boot.", "\"The Nike Air Max 90 honours the OG with a revamped design that replicates the initial 1990 release. A \"\"clean slate\"\" colourway celebrates the shoe's 30th anniversary with the iconic Waffle sole.\"", "The Nike Potential 3 Unisex Cricket Shoe delivers lightweight cushioning and superb grip on the field with a Phylon midsole and rubber outsole.", "Lounge wherever you go and let the Nike Joyride CC take you into a new world of cosy by placing your feet directly on the soft cushioning of its innovative bead-pods. Bold colour-blocking and exaggerated textures add unrivalled depth to your fun, edgy attitude.", "With DIY attitude and classic tennis shoe appeal, the Nike Drop-Type puts a raw, experimental edge on an iconic look. Featuring distinct lines that borrow from the NikeCourt series, an exposed foam tongue and N354 branding, it lets your shoes do the talking.", "\"Originally designed by Tinker Hatfield in 1990, the Air Max 90 has been re-imagined. Widely considered one of the biggest cross-cultural icons of the early '00s, this iteration pays tribute to the influential 2003 \"\"Snakeskin\"\" release with premium materials and a bold twist on the original.\"", "The Nike Air Max 97 keeps a sneaker icon going strong with the same design details that made its reputation from the beginning: water-ripple lines, reflective piping and full-length Max Air cushioning.", "Why not take the shot? Why not attack the full length of the court? Why not crash the boards and steal every ball and rain assists like water? The Jordan 'Why Not?' The Zer0.2 SE PF celebrates Russell Westbrook's calculated chaos by combining materials that work in lightweight harmony\u00e2\u20ac\u201dbecause, well, why not?", "The Nike Flex RN 2018 Women's Running Shoe delivers a flexible fit with a lightweight knit construction to help your runs feel free and easy.", "Built specifically for trails, the Nike Air Zoom Wildhorse 5 keeps you galloping over rough terrain in breathable, multi-layer fabric. A rock plate helps shield your foot, while a Zoom Air heel unit cushions your stride on and off the path.", "\"Named after the Japanese word for \"\"simplicity\"\"", "Featuring an internal 1/2 sleeve construction, the Air Jordan 1 Nova XX Shoe offers a snug fit without traditional laces. Underfoot, an Air-Sole unit at the heel provides lightweight cushioning that moves with you all day long.", "The Nike Air Force 1 '07 LV8 incorporates the same hoops-inspired performance features of the 1982 original while adding fresh design details for an updated look.", "Nike's first lifestyle Air Max lets you greet the streets with the soft, smooth and resilient ride of the Nike Air Max 270. The design draws inspiration from the Air Max pantheon, showcasing Nike's greatest innovation with its large window and fresh array of colours.", "The Air Jordan XXXIV PF continues the legacy of a cultural icon. Light, responsive and sculpted with aerodynamic precision, it combines a boldly unconventional midsole with herringbone traction to merge innovative and iconic design elements.", "The Nike SB Air Max Stefan Janoski 2 hugs your foot with a breathable textile upper. A Max Air unit in the heel cushions every step, while a flat rubber outsole optimises grip when you're on your board.", "Inspired by outer space flight, the Jordan Proto-Max 720 provides all-day comfort with a future-forward look. An outer shroud covers the sock-like bootie construction, while Nike Air cushions every step.", "Designed to stretch with your foot, the Nike Air Huarache Women's Shoe has remained a sneaker staple since its 1991 debut, when it changed the face of running footwear forever.", "The Nike Classic Cortez Shoe is Nike's original running shoe, designed by Bill Bowerman and released in 1972. This version features a leather and synthetic leather construction for added durability.", "From rain and mud to sunny afternoons, the Wildwood debuted in 1989 as a direct descendent of the Nike Escape. With design influence from the Pegasus, it was designed as an off-road sneaker meant to take you through rough terrain. The special sawtooth Waffle outsole was further proof that conquering bad weather didn't mean drabness.", "Nike's first lifestyle Air Max meets the softest, smoothest, most resilient foam yet in the Nike Air Max 270 React. The design draws inspiration from the Air Max pantheon, showcasing Nike's greatest innovation with its large window and fresh array of colours.", "The Nike Air Max 90 Women's Shoe honours its roots with a supportive upper and the excellent cushioning that made the original a favourite.", "Get your freak on in Giannis Antetokounmpo's debut signature shoe, Nike's first ever for the international basketball sensation. The Zoom Freak 1 has the extra-responsive cushioning, forefoot lockdown and multi-directional traction needed to complement his freakishly athletic game.", "Shane O'Neill put the same attention to detail into every aspect of his signature shoe as he does in his almost otherworldly skating. From the low-key perforated ventilation at the toe, to the double lacing option and the no-break-in remastered sole, the Nike SB Shane gets all the details right.", "Hoops in the park, Sunday BBQs and sunshine. The radiance lives on in the Nike Air Force 1 '07 Essential, the b-ball OG that puts a fresh spin on what you know best: crisp leather, bold colours and the perfect amount of flash to make you shine.", "Bring the past into the future with the Nike Air Max 2090, a bold look inspired by the DNA of the iconic Air Max 90. Brand-new Nike Air cushioning underfoot adds unparalleled comfort while transparent knit and vibrantly coloured textiles on the upper blend with timeless OG features for an edgy, modernised look.", "Designed with every woman in mind, the mixed-material upper features a plush collar, flashy colours and unique stitching patterns. Nike Air cushioning combines with the lifted foam heel for a modern touch, adding comfort and style to your journey.", "The LeBron x John Elliott Icon brings the clean and layered approach of a lifestyle shoe to a hardwood classic. Cushioning from the LeBron 8 combines with court-inspired details and translucent materials as a tribute to Elliott's favourite shoe in the series. The result: Power, unleashed.", "Utilising the latest innovations and Nike's ISPA project\u00e2\u20ac\u201dwhich touts a philosophy of improvise, scavenge, protect and adapt\u00e2\u20ac\u201dthe Nike ISPA Joyride Envelope delivers a futuristic shoe built for taking on the elements. Innovative details provide easy on and off and help support you in wet or warm conditions.", "Inspired by spacesuits, the Jordan Proto-React Z has a futuristic look with a fit and feel made for all-day wear. Responsive cushioning gives you more bounce with less weight, while an aeronautics-inspired shroud and snug bootie help keep you strapped in.", "Part of the N354 family that nods to Steve Prefontaine's fastest mile, the Nike Drop-Type Mid is inspired by classic tennis shoes in the NikeCourt family. With distinct design lines that borrow from the All Court 2, it puts a raw, experimental edge on an iconic look.", "Building on the 360 innovation of the 6, the Nike Mercurial Superfly 7 Elite FG Boot adds a Nike Aerowtrac zone to the forefoot and a slightly stiffer chassis to help supercharge traction.", "Be bouncy and buoyant in the Nike Air VaporMax Flyknit 3. The upper features flowing 2-tone lines of breathable, stretchable Flyknit construction for unique, street-ready style. Revolutionary VaporMax technology keeps a spring in your step with toe-to-heel cushioning.", "Redesigned for casual wear, the Nike Air Max 90 stays true to its '90s running roots with a rubber Waffle sole, stitched overlays and TPU plates. Hair-on leather and felted fabric colours combine with Max Air cushioning for a makeover that goes all out.", "The Nike Air Max 97 keeps a sneaker icon going strong with the same design details that made it famous: water-ripple lines, reflective piping and full-length Max Air cushioning.", "First debuted on the hardwood during one of the King's epic December showdowns, the LeBron 7 returns in familiar festive hues to celebrate the game and the season. Featuring the same supple Team Red upper and black accents as the original iteration, this limited-edition sneaker is expertly engineered for the street and arrives complete with the unmistakable Air iconic to the model.", "The Nike React Element 55 Women's Shoe borrows design lines from heritage Nike runners like the Internationalist, adds reflective graphics and then places it all on Nike React technology.", "Inspired by basketball, the Nike Blazer Low QS Flyleather features an innovative Flyleather upper for a premium look and bold graphics by artist Steven Harrington.", "The Nike Air Zoom Pegasus 35 is built for runners at every level, whether you're a seasoned veteran or just starting out.\u00c2\u00a0It features a breathable mesh upper with an out-turned collar for Achilles comfort. Down below, the cushioning has been updated with full-length Zoom Air for the first time ever, to deliver a smoother, more natural stride.", "The Nike Free TR Ultra is lightweight and flexible to be quick and adaptable for whatever workout you take on. The slip-on design has Flywire cables to securely hold your foot. Soft, flexible foam cushioning has a wider surface area for more stability.", "Named after the Japanese word for simplicity, the Nike Tanjun Women's Shoe offers an elegant, modern design for an elevated everyday look.", "The Nike Air Zoom Winflo 5 Men's Running Shoe provides a responsive ride and durable, multi-surface traction underfoot. Up top, engineered mesh delivers support and breathability where you need them, while an inner sleeve gives you a comfortable, sock-like fit as you hit your stride.", "The game has gone small, so bigs have to be faster, more agile and more versatile to stay relevant. Keeping pace with ever-evolving player needs, the Nike Air Force Max II provides the responsive cushioning that allows big players to keep crashing the boards and banging in the post, while helping them stay light and quick on the break.", "Join the hoops uprising in the AlphaDunk, one of Nike Basketball's bounciest game shoes to date. The revamped upper construction is light and supportive and a large cushioning unit spans nearly the entire forefoot, giving you all the responsiveness you can handle on the court.", "The soft upper of the Nike Mercurial Superfly 7 Academy TF Shoe wraps your foot for a second-skin fit, while the rubber outsole helps supercharge traction on turf.", "Designed in collaboration with Pat Peltier, the mind behind up-cycled vintage label Bandulu, the Kyrie 5 x Bandulu explores process, approach and technique. The brand's signature paint splatters give the shoe an expression that speaks to Kyrie's creativity and dedication to his craft\u00e2\u20ac\u201don and off the court.", "The Nike ZoomX Vista Grind brings you to a bold new place both rebellious and refined. It's comfort you can see and feel in a brand new silhouette.", "The Nike Air Max Impact infuses bold, expressive details into a design that's a beast on the court. Responsive cushioning helps soften hard landings, while the moulded heel clip and dual-strap system combine for a lightweight, locked-in feel.", "The Nike Renew Run keeps you moving with softer foam for a cushioned feel. Designed with the everyday runner in mind, this shoe delivers secure support and durable traction for comfort on the go.", "\"Drawing inspiration from Nike running shoes such as the Nike Zoom Vaporfly Elite, the Nike EXP-X14 SE Men's Shoe races off the track and onto the street with a fast design and shape. Nike React technology delivers lightweight durability and a smooth feel, while the layered upper showcases Flywire cables and a bold \"\"Just Do It\"\" tagline.\"", "The Nike Air Force 1 '07 Premium captures the iconic look of its 1982 predecessor, with full-length cushioning for comfort and premium detailing that honours the original. A rich mix of materials gives an eye-catching look that's ready to hit the streets.", "The Nike Tiempo Legend 8 Elite FG takes the legendary touch of premium kangaroo leather and adds foot-hugging Quad-Fit mesh in the lining and a wrap-around Flyknit tongue that feels supportive under your arch.", "The Nike Legend React Men's Running Shoe features a breathable upper with synthetic overlays that enhance durability while smooth, responsive foam cushions every step as you run.", "The Nike Phantom Vision Academy Dynamic Fit TF Artificial Turf Football Boot provides the precise touch to win small-sided glory, wherever the game finds you. Webbing on the laces provides lockdown while a textured instep is always ready to receive, turn and score.", "Making its debut in 1978 for the Honolulu Marathon, the Nike Air Tailwind was a revolution in cushioning. Now, a racing icon returns with the Nike Air Tailwind 79, featuring nearly original materials and colours, plus the Nike Air unit that made it a winner.", "The Jordan Jumpman 2020 PF delivers lightweight support for dynamic play on the court. A textile upper and secure midfoot webbing keep you moving freely during possessions.", "Fine-tuned with LeBron's ferocious game in mind, the LeBron 17 Low has a sleek, low-top design that features a powerful combination of impact-ready cushioning and responsiveness.", "Hoops in the park, Sunday BBQs and sunshine. The radiance lives on in the Nike Air Force 1 '07, the b-ball OG that puts a fresh spin on what you know best: crisp leather in an all-black colourway for a statement look on and off the court.", "As fresh as its first release, the Air Jordan 4 Retro remakes Michael Jordan's 4th signature shoe for today's streetwear savants. Suede and textile materials provide lightweight durability and support, while Nike Air cushioning offers comfort with every step.", "The Nike Benassi Women's Slide features a lined upper with a bold logo for plush comfort and an athletic look. A foam midsole and outsole provide lightweight impact protection.", "Inspired by patterns of energy radiating from Earth\u00e2\u20ac\u201dlike the flow of lava and the rhythmic ocean waves\u00e2\u20ac\u201dthe Nike Air Max 200 boasts the largest Max Air unit to date. With exceptional cushioning and modern detailing, this shoe radiates cool while providing optimal comfort.", "Feel the Air, both above and below, with the Nike Air Max 270 Flyknit Men's Shoe. It features Nike's biggest heel Air unit yet, plus an ultra-breathable Flyknit upper that helps keep you cool when the temperatures rise. Classic colour combinations nod to iconic Air Max models of the past, delivering a modern, streamlined look that's rooted in Nike sneaker heritage.", "The Nike React Element 55 SE borrows design lines from heritage runners like the Nike Internationalist, adds reflective graphics and combines it with Nike React technology for a smooth ride.", "The Nike Air Max 97 Utility puts a cold-weather spin on a classic style. Synthetic panels, engineered rubber and reflective design touches let you feel secure when hitting the streets.", "Crafted from soft suede, the Nike SB Check is reinforced in key areas for the durability you need to skate all day long.", "The first Nike SB shoe designed specifically for women, the Nike SB Bruin High is built for exceptional comfort and board control. With classic Bruin design lines and details, this is a fresh take on a time-honoured shoe.", "\"One of the game's fiercest competitors, triple-double dynamo Russell Westbrook has the motor, muscle and mentality to match his fearlessness\u00e2\u20ac\u201dwith the stats to back it up. Built to hold up on outdoor courts, the Jordan \"\"Why Not?\"\" Zer0.3 PF is fine-tuned for players like Russ", "Remastered from the OG that shook up the running world, the Nike Air Max 97 elevates the classic design. Memorial Day Parade White and fresh Sky Blue tint the sole. Flex your summertime vibes and float the streets in style.", "In spiritual circles, the colour purple represents enlightenment. It speaks to being fully connected to your spiritual mind by tapping into an inner source of potential that was otherwise undiscovered. The Kyrie 6 'Enlightenment' plays up the unseen spirituality theme with an all-seeing eye graphic on the side of the upper and a purple colour scheme.", "The Nike Zoom Pegasus Turbo Shield delivers your favourite lightweight running shoe in a smart, weatherised design, so you can continue training in confidence despite those dark and rainy months.", "More than 20 years after its initial release, the Nike Air Max Triax 96 returns as a cult classic. Featuring the same iconic shape and large-volume Air unit, it brings back the classic comfort and style you remember.", "Winning in both style and comfort, the NikeCourt Royale AC is as easy to get on as it is to pair with your entire warm-weather wardrobe. A hidden gore strap keeps the canvas upper looking clean and classic while easing it on and off.", "The Nike Air Monarch IV Lifestyle/Gym Shoe delivers lightweight cushioning and durable support with a Phylon midsole and a leather upper. Flex grooves provide natural flexibility with every step.", "The Nike ACG React Terra Gobe combines rugged durability with ACG style to get you where you need to go in comfort. The textile and synthetic upper is breathable and durable, and Nike React technology in the midsole provides an extremely smooth and comfortable ride.", "The Nike React Metcon AMP takes the stability and traction from the original and pairs it with React foam, Nike's most comfortable cushioning. It feels soft and springy with a breathable upper, but it's still stable enough to tackle lifting and high-impact workouts. A glow-in-the-dark rubber sole climbs up the side of the shoe for durability and extra grip during rope climbs.", "Building on the forefoot plate innovation of the 6, the Nike Mercurial Superfly 7 Academy MG Boot adds a versatile multi-ground plate that provides traction on natural- and artificial-grass surfaces.", "Featuring a panther-inspired design that takes after Michael Jordan's on-court presence, the Air Jordan 13 Retro is based on the OG model and has the same responsive cushioning and premium materials that made it famous in the '90s.", "The Nike Daybreak SP marks the return of the 1979 original, featuring suede and nylon on the upper and old-school graphics on the tongue for a '70s runner-inspired look and feel.", "The Nike Air Max Alpha Savage invokes Air Max style, stability and comfort in a modern design. Webbing integrates with the laces for midfoot containment, while Max Air cushioning delivers responsive comfort during your most intense workouts.", "Dream of speed and play fast in the Nike Mercurial Superfly 7 Elite MDS FG. A streamlined upper combines with a Nike Aerowtrac zone for high-speed play and supercharged traction.", "The Nike Joyride Dual Run blazes its own route. Tiny foam beads underfoot combined with traditional cushioning in the forefoot give an incredibly smooth feel that contours to your foot.", "The Air Max 98 rode the wave of its legendary predecessor, debuting with full-length visible Air and fluid design lines. Now it returns, sporting the same signature look and a new run of colours.", "The Nike Phantom Vision 2 Elite Dynamic Fit FG brings a new level of fierce precision to the field. A foot-hugging inner sleeve is concealed in a textured Flyknit outer layer to create a boot for the finishers, the providers and the battlers of tomorrow's game.", "The NikeCourt Air Zoom Resistance delivers lightweight durability on the hard court with a performance leather upper.", "Featuring Revive Foam, a super-soft foam designed to help you relax and recharge, the unrelenting comfort of the Nike Offcourt Slide is sensational. The innovative dual-layered foam and soft jersey lining on the strap ensure a gratifying full-foot experience. The iconic Air Force 1 pivot circle outsole and block lettering on the strap casually nod to heritage hoops.", "Emerging from The 10th, a new label that crosses tried-and-true workwear with Nike innovation, the Nike React Sertu blends handcrafted features with modern, technical elements. Borrowing elements from traditional moccasins and adding a touch of military-inspired detailing, it mixes utility with wearability, bringing a bold new look to the streets.", "The Air Jordan 14 Retro has class, comfort and the singular look of the original, with heritage-inspired colours, full-grain leather and responsive Zoom Air cushioning.", "\"Refresh your look and step into a new AF-1 world with the Nike Air Force 1 React. It fuses modern design with iconic b-ball style for a big, bold look. The oversized Swoosh, large \"\"AIR\"\" on the midsole and new sole pattern let you express your modern world while Nike React technology adds exceptional underfoot comfort.\"", "Always one step ahead, the Nike Air Max 98 LX features the OG design lines that were inspired by the walls of the Grand Canyon while stepping into the future with a colourful medley of recycled materials on the upper. The fluid, textured look and full-length Nike Air cushioning set you apart as you turn waste into style.", "The Nike Free X Metcon will take you from a short run to your gym workout. Superior breathability and comfort combined with durability and response make this stable trainer perfect for even the most ambitious of fitness goals.", "The Nike Zoom Pegasus Turbo 2 is updated with a feather-light upper, while innovative foam brings revolutionary responsiveness to your long-distance training.", "The Air Jordan XXXIII rewrites the story of an iconic basketball shoe. Its revolutionary closure system secures you for flight, while new FlightSpeed technology is tuned for optimal energy return.", "The Nike React Element 55 Shoe borrows design lines from heritage runners like the Nike Internationalist and then places it all on Nike React technology.", "LeBron is unstoppable on the court and just as influential off of it. The year 2003, LeBron's rookie season and a pivotal year in culture, inspires the LeBron 16 Low. It is powered by Max Air and Zoom Air cushioning technologies, and embodies his clout and versatility.", "The Nike Air VaporMax SE wraps your foot in a stretch woven material that gives structure and support to your stride. Underfoot, the lightest, most flexible Air Max cushioning to date gives a super-bouncy sensation that rivals running on air.", "The Nike Drop-Type Premium is inspired by classic tennis shoes in the NikeCourt family. Part of the N354 family that nods to Steve Prefontaine's fastest mile, it offers distinct design lines that borrow from the All Court 2.", "Trail-ready traction makes the Nike ACG Moc 3.0 a go-to for your next outdoor adventure. Designed and tested in Oregon, it features a sticky rubber heel and toe tip.", "Inspired by the original that debuted in 1985, the Air Jordan 1 Low offers a clean, classic look that's familiar yet always fresh. It's made for casual mode, with an iconic design that goes with everything and never goes out of style."], "data": [1, 1, 2, 2, 2, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 2, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 2, 2, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 2, 1, 1, 2, 1, 1, 3, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 2, 1, 1, 1, 1, 1, 2, 2, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 1, 1, 1, 1, 2]}, "label": "description", "count": 335, "min": "\"Breathability and inspiration come together in the Nike Air Zoom Pegasus 36 Premium Rise. A knit-in graphic repeating across the mesh and synthetic upper spells out \"\"Just Do It.\"\" in perforations. Strategically placed", "max": "With the Nike Air Max 90, a legendary shoe gets a luxe material treatment and brash colour palette with a history all of its own. Here, the Air Max 90 silhouette is clad in premium all-over suede with ballistic mesh accents to keep it breathable. This vibrant palette of saturated colours was made famous in the original Viotech release, which launched exclusively in Japan in the early 2000s. The head-turners have another classic to admire."}, {"values": {"label": ["2.6", "3.1", "4.2", " they cover zones where your foot releases the most heat.\"", "3", " the Nike Tanjun Men's Shoe offers a streamlined", "2.7", "4.4", "3.8", "2.9", "4.5", "2.5", "2.4", "4.9", "3.4", "5", "3.3", " the Nike Cortez '72 S.D. returns to the OG design with zigzag edges", "4.3", "3.5", "4.8", "4.1", "4.6", " who beat opponents with linear speed and aggressiveness.\"", " the Nike x Hawkins High Cortez combines premium materials laid out using the Tiger Pride green and orange with hidden details and show references throughout", "3.6", "1.5", "2.8", "3.2", "2.2", "1", "3.7", " nodding to those who feed the city of style.\"", "4.7", "4", "2", "3.9", " while a polka-dotted upper gets you noticed.\""], "data": [3, 4, 18, 1, 14, 1, 5, 19, 8, 3, 33, 1, 1, 5, 5, 115, 2, 1, 19, 9, 18, 14, 17, 1, 1, 7, 1, 3, 2, 1, 6, 15, 1, 13, 30, 5, 11, 1]}, "label": "rating", "count": 38, "min": " nodding to those who feed the city of style.\"", "max": "5"}, {"values": {"label": ["7", "54", "15", "11", "29", "42", "3", "30", "34", "8", "22", " including three distinct \"\"Stranger Things\"\" pins.\"", "16", "71", "47", "223", "5", "31", "18", "61", "27", "17", "26", "78", "6", "68", "19", "23", "25", " modern design for an elevated everyday look.\"", "53", "81", "33", "48", "67", "9", "24", "1", "105", "20", "36", "10", "63", "65", "4", "62", "12", "13", " an exposed foam tongue and minimalist leather. Why? Because you don't change what works.\"", "14", "94", "72", "2", "50", "45"], "data": [9, 1, 4, 8, 1, 1, 35, 3, 7, 10, 1, 1, 2, 1, 2, 1, 34, 4, 9, 2, 2, 6, 2, 1, 17, 1, 7, 4, 3, 1, 1, 1, 2, 1, 1, 8, 3, 98, 1, 6, 1, 11, 2, 1, 21, 1, 9, 7, 1, 4, 1, 1, 48, 1, 3]}, "label": "reviews", "count": 55, "min": " an exposed foam tongue and minimalist leather. Why? Because you don't change what works.\"", "max": "94"}, {"values": {"label": ["0.0 - 27.1", "27.1 - 54.2", "54.2 - 81.3", "81.3 - 108.4", "108.4 - 135.5", "135.5 - 162.6", "162.6 - 189.7", "189.7 - 216.8", "216.8 - 243.9", "243.9 - 271.0"], "data": [86, 54, 54, 54, 30, 27, 27, 27, 27, 28]}, "label": "product_name_stringindexer_transform", "count": 10, "min": 0.0, "max": 271.0}, {"values": {"label": ["0.0 - 36.4", "36.4 - 72.8", "72.8 - 109.2", "109.2 - 145.6", "145.6 - 182.0", "182.0 - 218.4", "218.4 - 254.8", "254.8 - 291.2", "291.2 - 327.6", "327.6 - 364.0"], "data": [74, 48, 37, 36, 36, 37, 36, 37, 36, 37]}, "label": "product_id_stringindexer_transform", "count": 10, "min": 0.0, "max": 364.0}, {"values": {"label": ["0"], "data": [414]}, "label": "brand_stringindexer_transform", "count": 1, "min": "0", "max": "0"}, {"values": {"label": ["0.0 - 33.4", "33.4 - 66.8", "66.8 - 100.2", "100.2 - 133.6", "133.6 - 167.0", "167.0 - 200.4", "200.4 - 233.8", "233.8 - 267.2", "267.2 - 300.6", "300.6 - 334.0"], "data": [76, 66, 38, 33, 33, 34, 33, 34, 33, 34]}, "label": "description_stringindexer_transform", "count": 10, "min": 0.0, "max": 334.0}, {"values": {"label": ["0.0 - 3.7", "3.7 - 7.4", "7.4 - 11.1", "11.1 - 14.8", "14.8 - 18.5", "18.5 - 22.2", "22.2 - 25.9", "25.9 - 29.6", "29.6 - 33.3", "33.3 - 37.0"], "data": [197, 72, 56, 28, 23, 17, 8, 5, 4, 4]}, "label": "rating_stringindexer_transform", "count": 10, "min": 0.0, "max": 37.0}, {"values": {"label": ["0.0 - 5.4", "5.4 - 10.8", "10.8 - 16.2", "16.2 - 21.6", "21.6 - 27.0", "27.0 - 32.4", "32.4 - 37.8", "37.8 - 43.2", "43.2 - 48.6", "48.6 - 54.0"], "data": [253, 48, 43, 22, 14, 12, 5, 6, 5, 6]}, "label": "reviews_stringindexer_transform", "count": 10, "min": 0.0, "max": 54.0}], "stageId": "66ae0e8917c733036b10f54f", "FESamplePath": "/FileStore/platform/sampleData/66ae0e8917c733036b10f54f_AutoFE/part-00000-b14101f4-c9ea-477f-8a29-70b18e967a65-c000.csv", "manualfesamplepath": "/FileStore/platform/sampleData/66ae0e8917c733036b10f54f_AutoFE/part-00000-b14101f4-c9ea-477f-8a29-70b18e967a65-c000.csv", "originalcount": 414, "graphdata": {"product_name": {"label": ["Nike Drop-Type", "Nike Mercurial Superfly 7 Academy IC", "Nike Renew Fusion", "Nike React Element 55 SE", "Nike React Presto Premium", "Nike React Metcon", "Air Jordan 7 Retro", "Nike SB Air Max Stefan Janoski 2", "Nike SB Air Zoom Bruin Edge", "Nike Free TR Ultra", "Nike React Metcon AMP", "Nike Phantom Vision Club Dynamic Fit FG", "Nike Air Monarch IV", "Nike Air Skarn", "Nike Zoom KD12 'YouTube'", "Nike In-Season TR 9", "Nike Air Max Verona", "Nike Joyride Dual Run", "Nike Flex RN 2019", "Nike Classic Cortez", "Nike Air Force 1 SP", "Nike SB Shane", "Nike Air Max Dia SE", "Nike Phantom Venom Academy TF", "Nike SB Zoom Stefan Janoski Canvas RM", "Nike Blazer Low QS Flyleather with at least 50% leather fibre", "Nike Air Force 1 '07 Essential", "Jordan Mars 270", "Nike Huarache Type", "Nike Air Max Dia Winter", "Jordan Proto-Lyte", "Nike Tiempo Legend 8 Academy MG", "Nike ZoomX Vaporfly NEXT%", "NikeCourt Air Zoom Zero", "Nike Air Force 1 Sage Low", "Nike Air VaporMax Flyknit 3", "Nike x Undercover React", "LeBron x John Elliott Icon", "Nike Air Max 2017", "Nike Air Force 1 React", "Nike Air Max 90 FlyEase", "NikeCourt Air Zoom Resistance", "Nike Vandalised LX", "Nike Joyride Run Flyknit", "Nike Free RN Flyknit 3.0", "Nike Air Max 90", "Nike SB Blazer Low GT", "PG 3", "Nike React Presto", "Nike Odyssey React", "Nike ACG MOC 3.0", "Nike SB Check", "Nike Air Force 1 '07 LV8", "Nike Epic Phantom React", "Nike Air Huarache", "Nike Air Max 2090", "Nike Air Max Triax 96 SP", "Nike Air Huarache Ultra", "LeBron 7 QS", "Nike Air Ghost Racer", "Nike Air Streak Lite", "Kyrie 4", "Air Jordan 1 Low", "Nike Air Max Alpha Savage", "Nike Daybreak", "Nike Air Max Impact", "Jordan Proto-React Z", "Kyrie 5", "Jordan Air Latitude 720", "NikeCourt Royale", "Nike Air Zoom Structure 22", "Nike Joyride CC3 Setter", "Nike M2K Tekno", "Nike React Sertu", "Nike x Undercover Air Max 720", "Nike Phantom Venom Academy FG", "Nike Air Max 97 Utility", "Kyrie 6 'Enlightenment'", "Nike Air Max Dia", "Nike Zoom 2K", "Nike ISPA Air Max 720", "Nike Zoom Pegasus Turbo Shield", "LeBron 7", "Air Jordan 12 Retro", "Nike Air Max 720", "Nike Free RN 5.0", "Nike Zoom Fly 3 Premium", "LeBron Soldier 13 SFG", "Nike Mercurial Superfly 7 Elite MDS FG", "Nike x Undercover React Presto", "Nike Air Zoom Terra Kiger 6", "Nike Air Max Dia LX", "Air Jordan XXXIV PF", "Nike Metcon 5 AMP", "Nike Cortez '72 S.D.", "Nike Blazer Low LE", "Nike Metcon 5", "Nike Legend React", "Jordan 'Why Not?' Zer0.2 SE PF", "Nike Free Metcon 3", "LeBron 16 Low", "Nike Air Max Bella TR 2", "Nike Air Max 270 React ENG", "Nike Air VaporMax SE", "Nike Air Max 270", "Nike Air Zoom Vomero 14", "Nike Free RN 5.0 AW", "Nike Daybreak SP", "Nike Metcon Sport", "Nike Air Max FF 720", "LeBron 17 Monstars", "Nike Xarr", "Nike Phantom Vision Academy Dynamic Fit MG", "Nike Zoom Pegasus Turbo XX", "Nike Odyssey React Flyknit 2", "Nike Air Max 720 Waves", "Nike Joyride CC", "Nike Air Max Plus III", "Nike Air Zoom Pegasus 35", "Nike Benassi", "Nike Air Force Max II", "Nike Air Max 97", "Nike x MMW Joyride CC3 Setter", "Nike Air Force 1 '07", "Nike SB Zoom Stefan Janoski Mid RM", "Kyrie 6 EP 'Chinese New Year'", "Nike Benassi JDI Floral", "Nike Drop-Type Mid", "Nike Mercurial Superfly 7 Elite FG", "Nike Zoom Rise", "Nike Air Max2 Light", "Nike Tiempo Legend 8 Elite FG", "Nike Offcourt", "Nike ACG Air Terra Antarktik", "LeBron 17", "Nike ZoomX Vista Grind", "Air Jordan 1 Mid SE", "NikeCourt Air Max Wildcard", "Nike Air Max 90 QS", "Nike MX-720-818", "Jordan Jumpman 2020 PF", "Nike ACG React Terra Gobe", "Nike Air Max 720 BETRUE", "NikeCourt Air Max Vapor Wing MS", "Jordan Trunner NXT React", "Air Jordan 11 Retro Low", "Nike ZoomX Vista Grind SP", "Zoom Freak 1 'Employee of the Month'", "LeBron 17 Low", "Nike Signal D/MS/X", "Nike Zoom Pegasus Turbo 2 Rise", "Nike x Olivia Kim Air Force 1 '07", "PG 3 NASA", "Nike Air Zoom Wildhorse 5", "Nike Tiempo Legend 8 Club IC", "Nike Air Force 1 '07 Premium", "Nike Air Max 98 LX", "Nike iSPA React", "Zoom Freak 1", "Nike Wildhorse 6", "Nike Potential 3", "Nike Pegasus 36 FlyEase (Extra Wide)", "Nike Flex RN 2018", "Nike Zoom Pegasus Turbo 2", "Nike Air Zoom SuperRep", "Nike Air Zoom Winflo 6", "Nike Air Zoom Pegasus 36", "Nike Air Zoom Pegasus 36 FlyEase", "Nike Air Max 720 (OBJ)", "Nike Zoom Fly", "Nike Zoom KD12", "Nike Air Zoom Pegasus 36 Premium Rise", "NikeCourt Royale AC", "Air Jordan 1 Mid", "Nike Air Max Dia Icon Clash", "Nike Zoom Vomero 5 SE SP", "Nike x Carhartt WIP Air Max 95", "Nike Phantom Vision 2 Elite Dynamic Fit FG", "Nike Air Max 270 Flyknit", "Nike Air Max 98", "Nike Air Max 270 Special Edition", "NikeCourt Air Zoom Vapor X", "Nike Air Force 1 Mid '07", "Nike React Ianga", "Nike Epic React Flyknit 2", "Nike Air Max Tailwind IV", "Nike P-6000 Icon Clash", "Nike Air Max 270 SE", "Nike Air Max 95 Premium", "Nike Renew Run", "Nike React Kenny 55", "Nike Benassi JDI BETRUE", "Nike React Element 55", "Nike SB Dunk High Pro", "Nike Mercurial Vapor 13 Elite FG", "Air Jordan 8 Retro", "Jordan Break", "Nike Revolution 5 FlyEase", "NikeCourt Zoom Cage 3", "Nike x Olivia Kim Air Max 98", "Nike Air Force 1 GORE-TEX \u00c2\u00ae", "Nike Air Wildwood ACG", "Nike ISPA Joyride Envelope", "Nike SB Blazer Low XT", "Nike Air Max 270 React", "Nike Phantom Vision Academy Dynamic Fit TF", "Nike Air Force 1 '07 SE", "Nike Epic Phantom React Flyknit", "Nike Air Max 200", "Nike Flex TR 9", "Nike Air Tailwind 79", "Jordan Aerospace 720", "Nike React Vision", "Nike Shox TL Nova SP", "Nike Air DSVM", "Air Jordan XXXIII", "Nike Air Max 90 NS SE", "Air Jordan 10 Retro", "Nike Zoom Gravity", "Air Jordan 14 Retro", "Nike x Hawkins High Cortez", "Nike Air Max 90 Premium", "Kyrie Low 2", "Nike React Infinity Run Flyknit", "Air Jordan 5 Retro", "Nike Mercurial Superfly 7 Academy TF", "Kyrie 5 x Bandulu", "Nike Air VaporMax 360", "Air Jordan 1 Nova XX", "Nike Zoom Pegasus Turbo 2 Special Edition", "Nike Zoom Fly Flyknit", "Nike Air Max Triax 96", "Nike AlphaDunk", "Nike Benassi JDI", "Air Jordan 13 Retro Chinese New Year", "Nike Air VaporMax 2019", "Nike SB Bruin High", "Nike Zoom Fly 3", "Nike SB Zoom Stefan Janoski Canvas RM Premium", "Nike Zoom Pegasus Turbo", "Nike Air Max 90 Essential", "Nike Free X Metcon 2", "Air Jordan 13 Retro", "Nike Air Zoom Winflo 5", "Nike Air Max Tailwind IV SP", "Nike Air Force 1 Low Retro", "Nike Air Max 720 SE", "Nike Air VaporMax 2019 Premium", "NikeCourt Air Zoom Vapor Cage 4", "Nike Kawa Shower", "Nike Air Max 97 SE", "Nike Epic Phantom React A.I.R. Cody Hudson", "Nike SFB Gen 2 20cm (approx.)", "Nike Pre-Love O.X.", "Air Jordan 4 Retro SE", "Nike React Element 55 Premium", "Nike TiempoX Lunar Legend VII Pro TF", "Nike Solarsoft", "Nike EXP-X14 SE", "Nike Tanjun", "Air Jordan 1 Jester XX Low Laced", "Nike Tiempo Legend 8 Academy IC", "Jordan Hydro 8", "Nike Air Force 1 Shadow", "Jordan 'Why Not?' Zer0.3 PF", "Jordan Proto-Max 720", "PG 4 EP", "Nike Air Zoom Pegasus 36 Trail", "Nike Zoom Rival Fly", "Nike Mercurial Superfly 7 Academy MG", "Nike Drop-Type Premium", "Nike Air Max Dia NRG"], "data": [1, 2, 1, 4, 1, 3, 2, 2, 2, 1, 1, 2, 1, 1, 1, 1, 1, 2, 2, 3, 1, 2, 1, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 2, 1, 1, 2, 1, 1, 1, 1, 2, 2, 9, 1, 2, 1, 2, 1, 1, 3, 2, 1, 3, 1, 1, 1, 1, 1, 2, 2, 1, 1, 2, 2, 1, 1, 1, 2, 1, 3, 1, 1, 2, 1, 2, 2, 1, 1, 2, 1, 2, 2, 2, 2, 2, 2, 1, 2, 1, 2, 4, 1, 1, 3, 2, 1, 2, 1, 1, 2, 1, 2, 2, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 2, 1, 2, 1, 5, 1, 2, 2, 1, 1, 1, 2, 2, 1, 2, 1, 1, 2, 1, 1, 2, 1, 2, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 1, 1, 2, 2, 1, 1, 4, 2, 2, 4, 1, 1, 1, 3, 1, 1, 1, 1, 1, 1, 2, 1, 3, 1, 2, 2, 1, 2, 1, 1, 1, 1, 2, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 4, 1, 2, 2, 2, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 2, 3, 2, 1, 3, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 2, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 1]}, "product_id": {"label": ["BQ5401-001", "CK5836-100", "553558-125", "AQ7878-003", "CI1290-100", "AT6099-606", "CI3871-300", "AJ6910-009", "BQ5469-703", "CQ7731-900", "864348-019", "AH6799-300", "CN6916-100", "CD4363-103", "AA1636-406", "AJ1285-101", "AQ7492-010", "AA8027-109", "AH7858-010", "AH1015-010", "918194-003", "922474-001", "CD3395-006", "BQ3177-100", "880848-005", "AV9370-001", "BQ5102-400", "CK3309-001", "BQ6046-010", "BQ4632-602", "CK4363-100", "315123-111", "AO3108-018", "CI3708-700", "CD0917-300", "AR5677-200", "BV6344-001", "CD8526-446", "AQ7489-008", "AQ2456-007", "487471-003", "AV4789-104", "AR4229-003", "BQ3448-400", "CU9174-600", "885118-001", "CI7388-600", "AT5293-004", "CD2182-001", "BQ5240-200", "BQ9138-601", "AO2132-401", "AT5301-003", "415445-102", "BV7106-400", "AO3258-080", "AO1023-005", "CK9671-001", "CD3460-010", "CJ0861-010", "BV0614-005", "CK2595-500", "CI5646-200", "AO3269-717", "CK3314-400", "AQ2730-009", "BV4584-001", "BQ3378-002", "CI3898-200", "CT7698-600", "AV4052-116", "CD6964-002", "315115-112", "CK2630-700", "CQ2503-900", "CD4365-003", "AV4417-002", "640744-016", "AH7249-118", "CT9155-063", "BV6348-300", "BV7099-400", "AT8179-100", "881105-800", "AA0287-002", "CJ0636-100", "CK1195-101", "807471-101", "CI2666-400", "AH7857-009", "BQ3212-600", "AJ6900-102", "CU7623-002", "CK6357-005", "BV0415-300", "AT5292-004", "BV1134-001", "AR6374-402", "CK2351-601", "AQ2568-100", "AO4971-700", "CI0919-100", "CI3835-002", "CD4573-001", "BQ4424-700", "CK2085-002", "CT2692-002", "AO3095-100", "CD5029-001", "849560-001", "BQ2728-012", "AT7978-414", "CQ0989-002", "AR4347-600", "AQ4176-049", "CU0675-300", "921733-104", "AA7408-008", "AO0566-606", "BV1021-007", "852542-087", "BQ5615-002", "AA7406-006", "CD4387-100", "AO7351-104", "CI9367-301", "AO3166-300", "AT6175-100", "CN3591-002", "AT6395-002", "AT5303-100", "BV7775-100", "AQ7497-300", "CI3794-600", "AV6243-400", "AT2863-100", "BQ0129-106", "CD0200-003", "BQ4630-500", "AO3189-600", "CI3446-001", "BQ6826-003", "BQ5422-200", "AV6337-003", "AQ8228-102", "AQ2203-003", "AA8030-108", "AT7324-001", "AO1741-003", "AQ7483-001", "AR9293-603", "BQ8927-102", "BQ7043-668", "AQ8830-016", "AJ6959-717", "AQ5707-001", "CQ0492-001", "CD0916-001", "749571-154", "CJ9712-001", "CI5546-100", "BV7756-001", "CN2932-100", "CI3831-200", "918193-700", "366731-100", "BQ6166-003", "BQ6623-070", "CD2153-001", "CN2408-001", "CD3002-103", "CD4366-002", "AO2607-401", "CT5770-300", "CD7070-009", "BV1357-003", "812654-011", "807471-103", "AA8022-107", "AQ4126-100", "CI1214-004", "AT5292-606", "CI1246-302", "CD7005-001", "923112-001", "704939-103", "AQ7491-008", "AV4126-002", "BV7757-500", "AO9819-001", "807443-503", "AO2982-076", "CI1396-600", "CU0814-102", "CD4372-004", "BV5841-800", "AO1742-004", "AR5676-401", "AQ7487-201", "AH1016-602", "487754-303", "AO2924-401", "618919-031", "AR4225-100", "AO4568-600", "BQ1896-002", "CD0431-107", "BQ3381-600", "CT8919-700", "CI3899-200", "AT3378-471", "CN8490-100", "AR4543-013", "310805-137", "CD0887-201", "CJ9684-001", "849559-004", "BV1507-001", "CI9842-500", "CD7288-001", "AQ2222-200", "BV5502-600", "AT7946-414", "CD4371-001", "CD2803-001", "CJ6971-001", "AT6110-004", "CD0683-600", "CI1236-100", "CU5133-600", "CJ3312-001", "631261-035", "AR6632-603", "BQ3611-100", "CI1396-004", "CQ0912-100", "CD4570-300", "325213-139", "AO7353-105", "488161-602", "AA1640-002", "BV0417-401", "CJ2586-100", "CI1291-400", "CK2718-003", "CT2007-100", "BV7725-500", "CJ6106-100", "AT7975-606", "AR4561-200", "AO3424-001", "CD0490-101", "CU3459-200", "AQ2567-002", "CD0113-400", "CD0881-104", "AT3381-008", "CN7664-800", "AQ5708-201", "AA8018-101", "CD2722-001", "AJ4115-060", "BV0657-400", "CJ5472-900", "BQ4430-400", "AQ0114-101", "343880-090", "921826-016", "AA1625-009", "CI3709-001", "CD5050-400", "AQ1189-009", "942851-002", "528895-003", "BQ3202-011", "BQ9665-301", "CI2668-004", "634835-108", "AV2605-101", "832528-001", "CK2719-400", "CT5543-300", "CJ1794-600", "CQ6549-001", "CJ0219-400", "BQ3203-007", "AR5339-002", "CD0888-002", "CD4373-001", "AA1626-602", "CT1264-101", "CI7815-602", "554724-066", "130690-017", "AQ2210-002", "AT6817-300", "812655-011", "CD5082-001", "749747-010", "CD0490-104", "CN6928-300", "CJ0861-017", "CD2189-002", "AO3116-004", "CK2531-001", "AH8050-100", "AQ4174-049", "CJ0220-400", "BQ5190-101", "CK2630-001", "AT5410-003", "AV5555-001", "AR6631-004", "313358-006", "AO9820-001", "AV3866-001", "AV1201-600", "CT4526-100", "AQ4312-107", "CQ6566-700", "AR4225-003", "AT8240-003", "AT8241-002", "AQ7477-009", "CD5007-102", "AQ1316-500", "CN5455-160", "CT5342-007", "AR7410-603", "BV0612-001", "CI1694-300", "BV5739-500", "343881-412", "315122-001", "AQ2731-500", "AH6789-023", "AT8242-009", "CD6615-100", "BQ8928-011", "943806-602", "CK6360-001", "CD2717-001", "AQ8306-407", "CD4161-606", "BQ6044-100", "CD5036-100", "BV7766-100", "AO0354-108", "AV6259-500", "414571-030", "AT6174-004", "BQ5467-101", "705265-006", "CW4409-100", "AV5187-602", "CI1718-001", "CD4962-001", "CU5646-001", "CD2053-105", "CT7695-401", "AQ1289-003", "CI7523-002", "844127-108", "AO0571-606", "AR7718-001"], "data": [1, 1, 2, 2, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 2, 2, 1, 1, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2]}, "listing_price": {"label": ["0.0 - 1899.5", "1899.5 - 3799.0", "3799.0 - 5698.5", "5698.5 - 7598.0", "7598.0 - 9497.5", "9497.5 - 11397.0", "11397.0 - 13296.5", "13296.5 - 15196.0", "15196.0 - 17095.5", "17095.5 - 18995"], "data": [259, 1, 6, 7, 34, 31, 25, 12, 33, 6]}, "sale_price": {"label": ["1595 - 3935", "3935 - 6275", "6275 - 8615", "8615 - 10955", "10955 - 13295", "13295 - 15635", "15635 - 17975", "17975 - 20315", "20315 - 22655", "22655 - 24995"], "data": [14, 39, 111, 75, 77, 41, 37, 10, 4, 6]}, "discount": {"label": ["0"], "data": [414]}, "brand": {"label": ["Nike"], "data": [414]}, "description": {"label": ["Get your freak on in Giannis Antetokounmpo's debut signature shoe, Nike's first-ever for the international basketball sensation. The Zoom Freak 1 has the extra-responsive cushioning, forefoot stability and multi-directional traction needed to complement his freakishly athletic game.", "The Monstars have crash-landed in the Windy City, prepared to strip us of some of our greatest hardwood heroes. With the game in danger, who can Bugs and the Tune Squad turn to? Who other than The King himself, LeBron James, poised to dash the hopes and dreams of Mr Swackhammer and any team that stands in his way? The LeBron 17 Monstars is here just in time for All-Star in Chicago, where LeBron is ready to represent the Tune Squad and all that is great about the sport of basketball.", "The Nike ZoomX Vaporfly NEXT% clears your path to record-breaking speed with a lighter design and faster feel than before. With more cushioning underfoot and reduced weight up top, the result is unprecedented energy return and comfort.", "The Nike Epic React Flyknit 2 takes a step up from its predecessor with smooth, lightweight performance and a bold look. An updated Flyknit upper contours to your foot with a minimal, supportive design. Underfoot, durable Nike React technology defies the odds by being both soft and responsive, for comfort that lasts as long as you can run.", "The Nike SB Zoom Stefan Janoski Mid RM pairs a minimal look with a modern fit. It has been updated with a new, plush sockliner and a flexible midsole for better boardfeel right out of the box.", "With the Nike Air Max 90, a legendary shoe gets a luxe material treatment and brash colour palette with a history all of its own. Here, the Air Max 90 silhouette is clad in premium all-over suede with ballistic mesh accents to keep it breathable. This vibrant palette of saturated colours was made famous in the original Viotech release, which launched exclusively in Japan in the early 2000s. The head-turners have another classic to admire.", "\"Soft to the touch, the Nike Epic Phantom React A.I.R. lets go of laces for slip-on style that has you up and running in no time. A sock-like fit within breathable Flyknit feels as though the Phantom \"\"disappears\"\" as you run", "The Nike Air Max Tailwind IV SP gives a new look to the '90s classic. Max Air units give you comfort and style that last.", "The radiance lives on in the Nike Air Force 1 '07, the b-ball OG that puts a fresh, outdoorsy spin on what you know best: soft suedes, bold colours and the perfect amount of flash to make you shine.", "Inspired by heritage running shoes like the 2006 Air Max 360, the Nike Air VaporMax 360 re-imagines full-length Air with its lighter, more flexible design. The full-length foam midsole adds to the comfort while bold colours create a fresh, modern look.", "Inspired by Japan's Ekiden relay runners, the Nike Zoom Rival Fly features a futuristic look with a Zoom Air unit in the forefoot that gives you responsive propulsion. Flex grooves underneath optimise toe-off and soft foam cushions your stride. The mesh and synthetic upper blends strength and breathability.", "The Nike React Presto Premium features an innovative React foam midsole that delivers a futuristic look and bouncy, lightweight feel for all-day comfort with a whole lot of personality.", "The NikeCourt Air Zoom Vapor Cage 4 is innovated to last. Rubber and flexible plastic are built to withstand your toughest matches while a unique lacing system keeps your laces hidden for extra durability.", "Featuring the first full-length Zoom Air unit in NikeCourt history, the NikeCourt Air Zoom Zero delivers exceptional responsiveness and great court feel. Its snug-fitting upper and webbed lacing system offer second-skin-like comfort and lockdown.", "Disrupt the atmosphere and let your light shine in the Nike Air Max 720 (OBJ), featuring Nike's tallest Air unit yet. Its colours take inspiration from the natural world, a counterpoint to the shoe's futuristic look.", "The Nike Vandalised LX hacks Nike DNA for a totally new spin on the original 1984 Nike Vandal, a basketball classic. Rearranging all the components creates a bold new look with asymmetrical details.", "The Nike Air Max 2017 Women's Shoe features a seamless Flymesh upper for support and breathability. Iconic Max Air cushioning provides a lightweight, smooth feel with each step, whether you're running your three-miler or running your day.", "The Nike React Metcon takes the stability and traction from the training original and pairs it with Nike's most comfortable cushioning. Tackle high-impact and lifting workouts with a light, breathable upper and durable grip to keep you going.", "The Nike Metcon Sport is designed for heavy weightlifting like all Metcons, but is updated for increased agility during explosive movements and speed drills.", "The Nike Zoom Pegasus Turbo 2 Rise is updated with a featherlight upper, while innovative foam brings revolutionary responsiveness to your long-distance training.", "The Nike Air Max Dia Icon Clash delivers a lifted look and airy aesthetic in a sleek shape. The minimal upper modernises the look, while a Max Air unit, surrounded by clear TPU, is amplified even further by an exaggerated midsole for a boost of style.", "The Nike Air Max 97 shook up the running world with its revolutionary full-length Nike Air unit. The Nike Air Max 97 SE Men's Shoe refreshes the original design with new colours and materials.", "The Nike Benassi JDI Floral Women's Slide is designed with a textured footbed and a lightweight foam midsole/outsole for a soothing, plush feel.", "The Nike Air Zoom Structure 22 Men's Running Shoe looks fast and feels secure. Engineered mesh, a heel overlay and dynamic support throughout the midfoot all work together to provide a smooth, stable ride.", "Part of the N354 family that nods to Steve Prefontaine's fastest mile, the Nike Huarache Type is based on one of the most legendary sneakers from Nike's All Conditions Gear line-up, the Nike Mowabb. Using an adjustable approach to the Huarache system, this shoe is an exploration of fit and comfort.", "Bring the past into the future with the Nike Air Max 2090, a bold look inspired by the DNA of the iconic Air Max 90. Brand-new Nike Air cushioning underfoot adds unparalleled comfort while transparent mesh and vibrantly coloured details on the upper are blended with timeless OG features for an edgy, modernised look.", "The Nike Odyssey React Women's Running Shoe provides crazy comfort that lasts as long as you can run. Its Nike React foam cushioning is responsive yet lightweight, durable yet soft. This attraction of opposites creates a sensation that not only enhances the feeling of moving forwards, but makes running feel fun, too.\u00c2\u00a0The upper of the Nike Odyssey React is built with a lightweight, breathable fabric instead of the premium Flyknit featured on the Nike Epic React.", "Make your head-turning journey to the top comfortable. Built strong and sleek, the LeBron 7 QS features a mix of materials on the upper for a look that lasts. Metal accents and multiple LeBron crests celebrate a king, while full-length cushioning graces your every step.", "The iconic Nike Air Zoom Pegasus 36 returns with more perforations and engineered mesh in the upper, which strategically target breathability across high-heat areas. A slimmer heel collar and tongue reduce bulk without compromising comfort, while exposed Flywire cables give you a snug fit at higher speeds.", "The Nike Air Max 90 Premium pays tribute to the steadfast Royal Mail workers in London. Nike Air cushioning provides comfort for all-day wear, while fabric and leather on the upper combine breathability with durability. Details like crowns on the laces and colours inspired by Royal Mail uniforms nod to those who deliver day in and day out.", "Boasting a bold 720 Air unit, the Jordan Air Latitude 720 offers 360 degrees of cushioning and then some. This attention-grabbing, AJ 8\u00e2\u20ac\u201cinspired shoe is a celebration of '90s Jordan heritage, big-time Air and street-ready comfort.", "Featuring the same Tuned Air technology that originally put it in the sneaker history books, the Nike Air Max Plus III updates the look with TPU fused to the upper while paying homage to the iconic colour fade.", "The Nike Air Zoom Vomero 14 takes responsive cushioning to the next level. A full-length cushioning unit works with Nike React technology to deliver a super-snappy, smooth ride. Up top, the sleek design feels durable and supports your stride through every mile.", "The Nike Renew Fusion blends stability, cushioning and durability for high-impact training sessions. A foam sole cushions heavy-weight, high-paced activities, while a midfoot cage locks your foot down to a flat, wide base for stability.", "The iconic Nike Air Zoom Pegasus 36 returns with more perforations for more cooling. An engineered mesh and synthetic upper strategically targets breathability across high-heat areas. A slimmer heel collar and tongue reduce bulk without compromising comfort, while exposed Flywire cables give you a snug fit at higher speeds.", "The Nike Tiempo Legend 8 Academy IC takes the legendary touch of calfskin leather and adds cushioning that equips you for the court or the streets. A mesh tongue and collar lining add breathability and street style.", "The NikeCourt Air Max Wildcard delivers the comfort you need to hit hard and move fast on the court. A Max Air unit under your heel cushions every step, while an innovative Lunarlon midsole provides a springy underfoot sensation and extra stability.", "The Nike SB Air Zoom Bruin Edge puts a DIY spin on an iconic skate shoe. Frayed stitching, exposed foam and a mix of materials create a patched look that's built to perform. Stencils are included so you can take the DIY look to the next level.", "The Air Jordan 7 Retro celebrates MJ's championship legacy with a reissue of his 7th game shoe, the one he famously wore to gold-medal glory.", "The Nike Air Max 95 Premium retains its iconic look, but is sleeker, lighter and geared for 24/7 comfort and style. It features inspiration from the human body itself. The midsole represents the spine, graduated panels are the muscles, the lace loops are the shoe's ribs and the fabric tongue is its skin.", "The Nike Air Force 1 GORE-TEX \u00c2\u00ae retools the classic Air Force 1 with a street-approved design that meets the standards of GORE-TEX \u00c2\u00ae waterproof technology. It features water-wicking flat laces, a GORE-TEX \u00c2\u00ae bootie and GORE-TEX \u00c2\u00ae branding on the heel.", "The Nike Air VaporMax 2019 Premium Shoe wraps your foot in stretchy woven material that gives structure and support to your stride. Underfoot, the lightest, most flexible Air Max cushioning to date gives a super-bouncy sensation that rivals running on air. Metallic Silver accents spark a sense of style.", "The Air Jordan 8 Retro recaptures the memorable look of the '93 release. It's made from real and synthetic leather and has the same distinct and daring design that made the original such a '90s favourite.", "Inspired by running silhouettes from the early 2000s, the Nike Zoom 2K is reimagining the golden age of running sneakers. A classic Zoom bag takes it back to where it began, while the rubber wings that wrap the outsole push the design into the future.", "In a fluid design that speaks the language of fast, the Nike Air Zoom Winflo 6 has less bulk and a more sculpted profile than previous versions. It has 2 Zoom Air units for targeted responsiveness in the forefoot and heel. On the top, engineered mesh optimises breathability.", "The Nike Pre-Love O.X. Women's Shoe features a running-inspired profile and lightweight foam cushioning for all-day comfort.", "The Nike Air Max 90 SE Women's Shoe combines classic design lines with rich materials for an elevated look that's true to the original.", "The Nike Blazer Low LE refines the old-school basketball icon with updated details.", "The Nike React Kenny 55 lets you rep the classic and the cutting edge at once. The lines are borrowed from OG Nike running shoes like the Internationalist, rooting you to sneaker heritage, while responsive React cushioning adds modern comfort that feels unbelievably soft. Its 2-tone marble print speaks to the duality of the real world. 1 part yin, 1 part yang. Everything in perfect balance.", "Kyrie's ability to make quick, sharp cuts while handling the ball gives his game an unrivalled edge. Loaded with responsive cushioning, the Kyrie Low 2 features a curved outsole and traction that wraps up the sides, ideal for quick players who continually work the angles to break down the defence.", "The Nike Free Metcon 3 combines Nike Free flexibility around the forefoot with Metcon stability in the heel to help you get the most out of your training session.", "The Nike React Element 55 SE borrows design lines from heritage runners like the Nike Internationalist, adds reflective graphics, then places it all on Nike React technology.", "The Nike Air Max 90 stays true to its OG running roots with the iconic Waffle sole. Details and colours nod to the classic Lahar Escape Boot, delivering a vintage look from the wild.", "Inspired by the Vaporfly, the Nike Zoom Fly 3 gives distance runners race-day comfort and durability. The power of a carbon-fibre plate and responsive cushioning keeps you in the running mile after mile.", "The Nike Benassi JDI Slide features a soft foam midsole and plush, jersey fabric lining the strap. Its heritage logo adds the perfect amount of flash.", "The Nike M2K Tekno draws inspiration from the Monarch franchise and pushes it into the future with space-age detailing. Its layered upper mimics the design of the OG Monarch, while the chunky outsole draws on the beloved Monarch IV.", "\"Nodding to Hawkins High from the hit TV show \"\"Stranger Things\"\"", "The Nike Zoom Pegasus Turbo is the Pegasus you know and love with major upgrades for speed. The featherlight upper looks as fast as it feels, while the revolutionary Nike ZoomX foam that was designed for elite Nike runners during the Breaking 2 attempt brings record-breaking speed and responsiveness to your daily training runs.", "Paul George's moon shot took him from Palmdale to basketball stardom, and now he's heading to new heights with clouds under his feet. Built on an outsole inspired by moon craters, the PG 3 combines sensational traction with responsive Zoom Air cushioning that helps you move seamlessly between offence and defence.", "The Nike Air Force 1 '07 SE incorporates the same hoops-inspired performance features of the 1982 original while adding details that call to mind the 2000s aesthetic.", "Featuring a fixed strap over the top of the foot, the Jordan Break Slide features durable synthetic leather and lightweight foam cushioning for underfoot comfort.", "An all-time favourite among players and sneakerheads, the Air Jordan 12 Retro features full-length Zoom Air cushioning and full-grain leather styled with distinct radial stitch lines.", "The Kyrie 4 Men's Basketball Shoe is ultra-flexible, responsive and supportive. It's designed for Kyrie Irving's sudden changes of direction and smooth yet rapid playing style.", "The Nike Air Max 720 goes bigger than ever before with Nike's tallest Air unit yet, offering more air underfoot for unprecedented, all-day comfort. Has Air Max gone too far? We hope so.", "The Nike Air Max 97 Men's Shoe keeps the sneaker favourite going strong with the same design details that made it famous: water-ripple lines, reflective piping and full-length Max Air cushioning.", "The Nike Joyride Run Flyknit is designed to help make running feel easier and give your legs a day off. Tiny foam beads underfoot contour to your foot for cushioning that stands up to your mileage.", "Designed for speed, stability and comfort, the Nike Air Ghost Racer was a hit 20 years ago\u00e2\u20ac\u201dand now it's back in a stitch-for-stitch remake. And though it has all the same features as the original, it might be even better than you remember.", "The Nike Air Max Plus III combines ultra-comfortable Tuned Air Technology with an energetic silhouette made famous by its predecessors. The III updates the look with TPU details fused to the upper while paying homage to the iconic colour fade.", "The Nike Air Zoom Vomero 14 takes responsive cushioning to the next level. The full-length Zoom Air unit works with Nike React cushioning to deliver a super-snappy, smooth ride. On the top, the sleek design is engineered to support your stride.", "Ideal for runs up to 3 miles, the Nike Free RN Flyknit 3.0 delivers a lace-free design so you can slip in and hit your stride. An updated flex groove pattern and modified midsole foam provides more flexibility than its predecessor, creating a barefoot sensation with every step. A mix of supportive and stretchy yarns are zonally placed for comfort that moves with your foot.", "The Nike SB Zoom Stefan Janoski Canvas RM Premium pairs a minimal look with a modern fit. It has been updated with a new, plush sockliner and a flexible outsole for better boardfeel right out of the box.", "The Nike SB Blazer Low XT Men's Skateboarding Shoe retools the classic profile for extra-tough sessions, adding lightweight impact protection.", "Featuring soft, lightweight cushioning, the Air Jordan 10 Retro offers performance-inspired comfort with iconic Air Jordan detailing.", "The Nike x Undercover Air Max 720 brings Jun Takahashi's vision of chaos and balance to Air. 360 degrees of cushioning and a breathable design capture Takahashi's view of the future of fashion.", "Designed specifically for a woman's foot, the Nike Air Max Dia delivers a lifted look and airy aesthetic. The minimal upper modernises the silhouette, while the Max Air unit is amplified even further by an exaggerated midsole for a boost of style.", "Made for athletes to relax in pre- and post-matches, the Jordan Hydro 8 works as an everyday, anytime slide. It offers the plush cushioning of a Solarsoft foam footbed and an adjustable strap.", "The Nike Joyride Dual Run is designed to help make running feel easier and give your legs a day off. Tiny foam beads underfoot contour to your foot for cushioning that stands up to your mileage.", "The Nike Xarr sets you up to take on the elements in style. It's crafted with a water-resistant leather upper to help keep you dry and a rubber outsole to combat the season's wet conditions. With intricate detailing and a stylised tongue cover, it's a fresh new look with lots of attitude.", "The Nike Air Max 270 React uses lightweight, layered, no-sew materials to create a modern style that looks as good as it feels.", "The Nike Air Max 90 Essential Men's Shoe keeps the classic design lines of the 1990 original and the cushioning that made it famous.", "The Nike In-Season TR 9 is light, stable and features deep, comfortable footbed for superior impact absorption and energy return throughout your entire workout.", "With more Air underfoot, the Jordan Aerospace 720 delivers next-generation comfort with signature Jordan heritage.", "With a stretchable knit in the upper, the Nike Flex RN 2019 makes every run comfortable as it expands and contracts along with your foot. Dual-density foam gives you cushioned comfort for pounding out the miles, while grooves in the outsole provide flexibility from heel to toe.", "The Nike Wildhorse 6 keeps it stable, secure and lightweight on the trail. An updated outsole delivers the traction you need, while a foam midsole keeps you cushioned on your run.", "Taking both height and craft to new levels, the Nike Air Force 1 Sage Low features a platform midsole and a pared-down upper for a bold yet feminine look.", "The Nike Air Max Dia SE features sleek lines and a sheer upper that combine classic Air Max elements into a lightweight, comfy and versatile icon. Together with its smart toe-down profile and extra lift, the Nike Air Max Dia SE offers an ever-bigger expression of Nike Air.", "The Nike Air Force 1 '07 LV8 has the same hoops-inspired performance of the '82 OG plus fresh new patterns for a sleek look that turns heads.", "Hiking shoes don't need to be big and bulky, and the Nike Air Skarn proves it. Originally launched in 1997, this reintroduction of a classic is lightweight, comfortable and tougher than it looks.", "The Air Jordan 5 Retro for women gives a colourful makeover to one of MJ's most memorable game shoes. Featuring iconic fighter plane-inspired midsole sculpting and moulded lace toggle, this version flashes an all-over reflective rainbow print for some bold colour and energy.", "The Nike Phantom Venom Academy FG is engineered for powerful, precise strikes that win games. Ridges on the instep create spin to control the flight of the ball, while the firm-ground plate provides the traction needed to unleash at any moment.", "Nike Zoom Fly Flyknit Men's Running Shoe is built for record-breaking speed. The Flyknit upper delivers ultra-lightweight support that fits like a glove.", "Part shoe, part sandal, the Nike Air Max FF 720 takes you into a new realm of Air. Built specifically for a woman's foot, it features premium leather on heightened foam for bold versatility and unbelievable comfort. Cinch it up with its unique drawcord system and make the streets your runway.", "Lounge wherever you go and let the Nike Joyride CC3 Setter take you into a new world of comfort. It places your feet directly on soft foam and innovative bead-pods for extra comfort, while exaggerated textures add unrivalled depth to your edgy attitude.", "An icon hits the paths less travelled in the Nike Air Zoom Pegasus 36 Trail. Perforated mesh upper offers breathable comfort, and double Zoom Air units cushion your stride. Outsole lugs optimise traction when running uphill.", "The Nike Phantom Venom Academy TF is engineered for powerful, precise strikes that win games. Ridges on the instep help create spin to control the flight of the ball. The sole provides the turf traction needed to unleash at any moment.", "The Nike Metcon 5 AMP arms you with stability for heavy lifting and traction for sprints during high-impact training. It combines breathability and durability to be your secret weapon in the gym.", "The Nike React Element 55 borrows design lines from heritage runners like the Nike Internationalist, then places it all on Nike React technology.", "\"The Nike Air Max 90 Premium is built in honour of celebrated Parisian bakers who define French cuisine and hard work. Nike Air cushioning under your feet feels softer than freshly baked brioche while a durable upper features a French flag and baking champion's wheat laurel on opposite heels. \"\"Fresh baked daily\"\" is written on the liner", "The Nike Air Streak Lite puts minimalist style back into the spotlight. Originally created by Nike's first Japanese creation team in 1995, this lightweight, sleek silhouette pushes footwear to a different space.", "Breaking new ground for athletes, KD provides unprecedented access to his life through his YouTube channel. It's this type of authentic connection that KD wanted to create with his fans when he first partnered with YouTube in 2017. In celebration of his channel, the KD12 'YouTube' features co-branded graphic hits on the tongue and heel that celebrate two icons coming together to change the game.", "The Nike Odyssey React Men's Running Shoe provides crazy comfort that lasts as long as you can run. Its Nike React foam cushioning is responsive yet lightweight, durable yet soft. This attraction of opposites creates a sensation that not only enhances the feeling of moving forwards, but makes running feel fun, too.\u00c2\u00a0The upper of the Nike Odyssey React is built with a lightweight, breathable fabric instead of the premium Flyknit featured on the Nike Epic React.", "\"Breathability and inspiration come together in the Nike Air Zoom Pegasus 36 Premium Rise. A knit-in graphic repeating across the mesh and synthetic upper spells out \"\"Just Do It.\"\" in perforations. Strategically placed", "Drawing inspiration from the Monarch franchise, the Nike M2K Tekno combines real and synthetic leathers with textile for a layered look.", "The legend lives on in the Nike Air Force 1 Mid '07 Men's Shoe, a modern take on the icon that blends classic style and fresh, crisp details.", "Disrupt the universe in your Nike MX-720-818. Featuring materials inspired by spacesuits and quilted stitching on the upper, it takes the largest Air unit to date and blends it with the futuristic look of the final frontier. Mesh on the upper keeps your feet cool while the clear sole features the black and grey reminiscent of deep space.", "Bridging performance and style, the Nike Zoom Pegasus Turbo XX Women's Running Shoe combines a full-length ZoomX midsole with an upper re-imagined exclusively for women. This feather-light translucent upper pops with a racing-stripe print that looks as fast as it feels, while Nike ZoomX foam delivers revolutionary responsiveness. A transparent, soft TPU overlay wraps your midfoot for the fit you need.", "An icon trades pavement for path with the Nike Air Zoom Pegasus 36 Trail. A perforated mesh upper adds breathability, as double Zoom Air units underfoot cushion your stride. Opposing lugs on the outsole optimise traction on your uphill climbs.", "Designed for low-impact workouts and circuit training, the Nike Flex TR 9 pairs a breathable mesh and synthetic upper with a supportive platform designed for flexibility and traction.", "Ideal for runs up to 3 miles, the Nike Free RN 5.0 returns to its roots as a natural motion shoe. An updated flex groove pattern and modified midsole foam provides more flexibility than its predecessor, creating a barefoot sensation with every step. At the upper, breathable and stretchy mesh moves with your foot, while synthetic suede overlays provide stable support.", "The Nike Odyssey React Flyknit 2 Women's Running Shoe delivers a strategic combination of lightweight Flyknit and synthetic material for support just where you need it. Underfoot, Nike React cushioning delivers a soft, springy ride for a route that begs to be crushed.", "Clean lines, versatile and timeless\u00e2\u20ac\u201dthe people's shoe returns with the Nike Air Max 90. Featuring the same iconic Waffle sole, stitched overlays and classic TPU accents you've come to love, it lets you walk among the pantheon of Air.", "Designed specifically for a woman's foot, the Nike Air Max Dia LX delivers a lifted and airy aesthetic in a new, sleek shape. The minimal upper modernises your look, while the Max Air unit, surrounded by clear plastic, elevates your style.", "The Nike Air Max 270 React ENG combines a full-length React foam midsole with a 270 Max Air unit for unrivalled comfort and a striking visual experience.", "\"Designed and tested in Oregon, the Nike ACG Antarktik is a \"\"jacket\"\" for your foot. Its tough ripstop upper combines with a GORE-TEX lining to help keep your foot dry. All-new lug details use hard rubber for traction in all conditions.\"", "The Nike Air Max 720 goes bigger than ever before with Nike's tallest Air unit yet, which offers more air underfoot for unprecedented, all-day comfort. Details include bubble wrap accents and colours inspired by the natural world.", "The radiance lives on in the Nike Air Force 1 '07, the b-ball OG that puts a fresh spin on what you know best: crisp leather in an all-white colourway for a statement look on and off the court.", "Utilising the latest innovations and Nike's new iSPA project\u00e2\u20ac\u201dwhich touts a philosophy of improvise, scavenge, protect and adapt\u00e2\u20ac\u201dthe Nike iSPA React takes experimental expression and runs with it. Its low-top design features a tape-like upper nodding to the power of improvisation in the face of adversity.", "The Nike SB Zoom Stefan Janoski Canvas RM pairs a minimal look with a modern fit. It has been updated with a new, plush sockliner and a flexible midsole for better boardfeel right out of the box.", "The Nike Classic Cortez Women's Shoe is Nike's original running shoe, designed by Bill Bowerman and released in 1972. This version features a leather and synthetic leather construction for added durability.", "The Nike Metcon 5 is our most tuned Metcon yet. This means specific stability for heavy lifting, traction made for speed and durability where you need it. It even includes a Hyperlift insert that's compatible with all prior versions of the Metcon. Meet your secret weapon for weight-lifting and high-impact training.", "The NikeCourt Air Zoom Vapor X has an updated Dynamic Fit system with a full-length foot frame to provide ultimate lateral control. Its new generative outsole combined with a Zoom Air unit provides a lightweight, responsive feel on the court.", "According to the four-year cycle of the Chinese zodiac, the year of the mouse represents growth. Through the folk-art tradition of Jianzhi (paper cutting), the Kyrie 6 'Chinese New Year' honours major breakthroughs in Nike innovation with a graphic on the tongue. A watercolour-themed print completes the art-inspired CNY theme.", "The Nike Air Max 270 is inspired by two icons of big Air: Air Max 180 and Air Max 93. It features Nike's biggest heel Air unit yet for a soft ride that feels as remarkable as it looks.", "The Nike React Ianga takes elements from a jungle boot and mixes them with modern, technical details. Part of the 10th Collection, this shoe is a unique, military-inspired expression of the React family.", "\"Michael Jordan's stealthy creativity on the court earned him the nickname \"\"Black Cat\"\". The Air Jordan 13 Retro is based on the OG model and has responsive cushioning and premium materials. This version features special details to honour the Chinese New Year.\"", "Paul George is the rare high-percentage shooter who's also a coach's dream on D. Designed for his unrivalled 2-way game, the PG 4 EP unveils a new cushioning system that's lightweight, articulated and responsive, ideal for players like PG who go hard every play.", "Bounce like never before in the Zoom Rise, Nike Basketball's artfully crafted creation for the upwardly mobile. This mid-top provides containment and support up through the ankle, while an extra-large Nike Zoom Air unit under the ball of your foot redefines how responsive a shoe can be.", "The Nike Air Zoom Pegasus 36 FlyEase maintains everything you love about the Pegasus and adds a zip for effortless on and off. The no-tie lacing system adjusts easily for a secure feel as you tackle your miles.", "Nike Sportswear's first collaboration by the Hatfield brothers, the Nike Air Max 90 FlyEase combines the timelessness of Tinker's original design with Tobie's FlyEase technology. The heel collapses when you step in then snaps back into place, providing quick, easy access to one of history's most iconic sneakers.", "Bring a new point of view to off-court culture in your Nike Air Max 720 Waves. Its low-profile stance showcases Nike's tallest Air unit to date while its D/MS/X design mixes culture with sport, letting you enter a fresh dimension of hoops style with unparalleled comfort.", "The Nike React Element 55 is a balanced blend of classic design and forward-looking innovation. Nike React foam delivers lightweight, bouncy comfort, while rubber outsole pods and an exaggerated outsole offer a cutting-edge look that begs a reaction.", "The Nike Air Max 720 goes bigger than ever before with Nike's tallest Air unit yet, which offers more air underfoot for unimaginable, all-day comfort. Has Air Max gone too far? We hope so.", "Olivia Kim remembers NYC in the '90s. The city danced at all-night raves, and the fashion was bomb dot com. The Nike x Olivia Kim AF-1 '07 captures the outrageous '90s rave spirit with a blue corduroy upper and glow-in-the-dark details.", "The Nike Air Zoom Terra Kiger 6 is built to take on wet and rocky trails. Lightweight in design, it features a sleeker look with a woven heel for a secure fit and feel.", "The Nike Zoom Pegasus Turbo 2 is updated with a featherlight upper, while energy-returning foam brings revolutionary responsiveness to your long-distance training.", "The Nike Air Zoom SuperRep is designed for circuit training, HIIT, short runs and other fast-paced exercise. Zoom Air cushioning in the forefoot combines with a wide, stable heel to keep you moving and lifting comfortably.", "The soft upper of the Nike Mercurial Superfly 7 Academy IC wraps your foot for a second-skin fit, while the rubber outsole helps supercharge traction on the court or street.", "The Air Jordan 5 Retro brings back the original that was inspired by WWII fighter planes, featuring a mid-top profile and synthetic leather. An inner-sleeve creates a snug, comfortable feel.", "The Nike React Element 55 SE borrows design lines from heritage runners like the Nike Internationalist, then places it all on Nike React technology.", "NYC in the '90s\u00e2\u20ac\u201dif you spent much time in one of the many neighbourhoods, you'd hear SUVs driving around bumping Jamaican dancehall music at full blast. The Nike x Olivia Kim Air Max 98 celebrates the music and culture of NYC as remembered by designer Olivia. The fresh red-yellow-green take on the iconic Air Max 98 captures the vibrancy of the city's Rastafarian community.", "Designed to make fast go faster, the Nike Zoom Gravity is built to take you from quick tempo runs to winning races. Snappy forefoot propulsion and grippy, multi-surface traction combine to maximize your stride.", "Paul George's moon shot took him from Palmdale to basketball stardom, and now he's heading to new heights. This space-themed version of the PG 3 offers sensational traction, springy responsiveness and lightweight containment for seamless moves between offence and defence.", "The lightweight Nike Air DSVM gives you all-day comfort and street-ready style in a modern take on a classic silhouette. An adjustable strap lets you change up the fit for a look that's sure to turn heads.", "The legend lives on in the Nike Air Force 1 '07 Men's Shoe, a modern take on the iconic AF-1 that blends classic style and fresh details.", "Utilising the latest innovations and Nike's ISPA project\u00e2\u20ac\u201dwhich touts a philosophy of improvise, scavenge, protect and adapt\u00e2\u20ac\u201dthe Nike ISPA Air Max 720 delivers smooth cushioning. It features an extra-large air unit, providing support along with innovative details inspired by modern life in the city.", "The Nike SB Dunk High Pro pairs iconic Dunk style with a high-top design for a fresh look. A Zoom Air unit in the heel and a padded tongue create a comfortable fit that's made to skate.", "The Nike Air Zoom Pegasus 36 FlyEase (Extra-Wide) maintains everything you love about the Pegasus and adds a zip for effortless on and off. The no-tie lacing system adjusts easily for a secure feel as you tackle your miles.", "Made with soft, pliable foam infused with grooves for superb airflow, the Nike Solarsoft Women's Flip Flop is a must-have in warm weather.", "The Nike Legend React Women's Running Shoe features a breathable upper with synthetic overlays that enhance durability while smooth, responsive foam cushions every step as you run.", "The Nike Air Max 2017 Men's Shoe features a seamless Flymesh upper for support and breathability. Iconic Max Air cushioning provides a lightweight, smooth feel with each step, whether you're running your three-miler or running your day.", "Taking inspiration from the archives, the NikeCourt Royale Men's Shoe brings retro tennis style in a modern package for everyday comfort.", "The Nike ZoomX Vista Grind SP is proof of the improbable, bringing you to a bold new place that's rebellious and forward thinking. Recycled foam from the Nike ZoomX family plus lightweight fabric and durable overlays come together to give the shoe a modern look and classic comfort.", "Featuring the first full-length Zoom Air unit in NikeCourt history, the NikeCourt Air Zoom Zero delivers exceptional responsiveness and great court feel. Its fabric and synthetic upper with a customisable lacing system offers second-skin-like comfort.", "The Nike Tiempo Legend 8 Club IC takes the touch of textured synthetic leather and adds a grippy rubber outsole for multi-directional traction.", "Crisp and clean with the perfect amount of lift, the Nike Air Max Dia is designed to elevate her every day. The minimal upper features no-sew skins and breathable mesh for an airiness that matches the swirled iridescent patterns. Boosting style and comfort, the Max Air unit underfoot joins with the super-soft foam midsole.", "Designed specifically for a woman's foot, the Nike Air Max Dia Winter delivers a lifted and airy aesthetic in a sleek shape. The minimal upper modernises the look, while a Max Air unit is amplified even further by an exaggerated midsole for a boost of style.", "Designed to make fast go faster, the Nike Zoom Gravity is built to take you from quick tempo runs to winning races. Snappy forefoot responsiveness and grippy, multi-surface traction combine to optimise your stride.", "\"Soft to the touch, the Nike Epic Phantom React lets go of laces for a slip-on style that gets you up and running in no time. A snug, secure, sock-like fit within a breathable Flyknit and synthetic upper feels as though the Phantom \"\"disappears\"\" as you run.\"", "Be bouncy and buoyant in the Nike Air VaporMax Flyknit 3. Inspired by high fashion, the upper features flowing lines of breathable, stretchable Flyknit construction. Revolutionary VaporMax Air technology keeps a spring in your step with toe-to-heel cushioning.", "The NikeCourt Zoom Cage 3 offers zoned durability with a lightweight, pliable overlay that moves with you. A Zoom Air unit in the heel delivers a low-profile ride with responsive cushioning.", "The Nike Zoom Pegasus Turbo 2 Hakone is updated with a feather-light upper, while energy-returning foam brings revolutionary responsiveness to your long distance training.", "The Nike Tiempo Legend 8 Academy MG takes the legendary touch of calfskin leather and adds a versatile multi-ground plate for traction on natural- and artificial-grass surfaces.", "An ideal performer for runs up to 3 miles, the Nike Free RN 5.0 AW returns to its roots as a motion shoe. A stripped-down upper with single-layer mesh stretches and moves with you. Less foam in the midsole makes it easy to hit the ground running.", "The Air Jordan 1 Mid SE maintains the timeless appeal of the OG AJ1, revamped with fresh colours and premium materials. Built with a lightweight Air-Sole unit and classic design lines, it captures the essence of the original through a modern lens.", "Designed with a zip closure secured by a midfoot strap, the Nike Revolution 5 FlyEase lets you suit up for your run quickly and easily. Soft foam cushions your stride, while a minimalist design fits in just about anywhere.", "Jun Takahashi's vision of chaos and balance comes to life in the modern age. The Nike x Undercover React pairs a classic welly with several technologies to create a shoe unlike any other.", "Made from durable nylon canvas and synthetic leather, the Nike SFB Gen 2 20cm (approx.) is a lightweight tactical boot designed for speed and flexibility over rough terrain. Inspired by Nike Free technology, the flexible sole is equipped with an aggressive traction pattern for multi-surface grip and an internal rock shield to help prevent punctures.", "The Nike Air Max 270 SE is inspired by 2 icons of Air: the Air Max 180 and the Air Max 93. It features Nike's biggest heel Air unit yet for a super-soft ride that feels as comfortable as it looks.", "In a fluid design that speaks the language of fast, the Nike Air Zoom Winflo 6 has less bulk and a more sculpted profile than previous versions. It has 2 cushioning units for targeted responsiveness in the forefoot and heel. Up top, mesh in the upper provides breathability.", "Designed for running but adopted by the street, the Nike Air VaporMax 2019 features the lightest, most flexible Air Max cushioning to date. A stretch woven material wraps your foot for lightweight support and stability, while an external reinforcement in the heel secures the back of your foot.", "The Nike React Vision is a story of surreal comfort. Layered textures, shapes and vivid colours are combined in a design influenced by the exaggerated world of our dreams, while React foam and an ultra-plush tongue provide surreal comfort. DIMSIX on the tongue tab rises high off the collar to add just a touch of Nike's own origin story.", "Drawing inspiration from four classic Air Jordans, the Jordan Mars 270 is a modern-day remix that offers a heavy dose of heritage, plus an enormous Max Air unit and springy foam for non-stop comfort.", "Originally released in 1979, the Nike Daybreak is a blast from the past. Featuring the same rubber Waffle outsole and nylon upper, it gives you true vintage style.", "\"Inspired by Phil Knight's \"\"Shoe Dog\"\"", "The Air Jordan 1 Jester XX Low knows not to take things too seriously, except comfort. A real and synthetic leather upper is supportive where it counts, while the exaggerated midsole adds a little altitude with responsive cushioning.", "The Nike Air Max 98 brings back retro Air Max style with contemporary comfort innovations. A full-length Max Air unit gives total cushioning in every step.", "A mash-up of Pegasus' past, the Nike P-6000 Icon Clash features breathable mesh with horizontal and vertical overlays for a 2000s running look that is as striking as, say, a majestic winged horse. Drawing on the design of the Nike Pegasus 25 and 2006, its running aesthetic meets all-day comfort for the streets.", "With exceptional cushioning and modern detailing, the Nike Air Max 200 radiates cool while providing extreme comfort. Its design is inspired by patterns of energy radiating from the earth\u00e2\u20ac\u201dlike the flow of lava and the ocean's rhythmic waves.", "Since bursting onto the basketball scene in 1996, the Air Jordan 11 Retro Low Men's Shoe has been one of the most beloved Jordan designs ever. Signature details and Nike Air cushioning combine for the ultimate fusion of style and comfort.", "First released in the late '90s, the Nike Air Max Triax 96 SP now returns as a cult classic. Featuring the same iconic shape and large-volume visible Air unit, it brings back the classic comfort and style you remember.", "Never worry about laces in the Nike Free RN Flyknit 3.0. This remix leaves them out\u00e2\u20ac\u201dletting you slip in quickly and hit your stride even faster. Supportive yarns join stretchy Flyknit for a lightweight upper that feels like a second skin. Heel-to-toe grooves in outsole move and bend with every stride.", "The Nike Air Max Bella TR 2 is a versatile trainer for weight training and station workouts. It's crafted from breathable fabric and features comfortable cushioning underfoot with a flat outsole for stability during workout sessions.", "The stretchable knit upper of the Nike Flex RN 2019 wraps you in softness as it expands and contracts with your foot. Dual-density foam layers supply durable cushioned comfort, while grooves on the outsole give you heel-to-toe flexibility.", "Inspired by the Vaporfly, the Nike Zoom Fly 3 Premium gives distance runners race-day comfort and durability. The power of a carbon-fibre plate keeps you in the running mile after mile.", "The Nike Phantom Vision Academy Dynamic Fit MG brings the fierce precision of street play to the pitch. A foot-hugging sleeve has a custom feel and the Ghost Laces system tights with 1 pull and is hidden for a bigger striking surface.", "The NikeCourt Air Max Vapor Wing MS is the perfect pairing of style and comfort for your match. Translucent textile shows off the technology within, while rubber on the toe increases durability. An Air Max unit provides legendary, lightweight cushioning.", "The 2003 icon returns with new upgrades. Fearless on the streets, the Nike Shox TL Nova takes mechanical cushioning to the next level. A modernised upper combines with Nike Shox columns for a new era.", "Inspired by the early 2000s original, the Nike React Presto puts an exaggerated spin on an unconventional icon. Nike React foam delivers an expressive look with a lightweight, bouncy feel and a whole lot of personality.", "Ready for the toughest workouts, the Jordan Trunner NXT features incredibly responsive cushioning and a breathable, lightweight upper.", "The NikeCourt Air Max Wildcard delivers the comfort you need to hit hard and move fast on the court. A Max Air unit under your heel cushions every step, while an innovative Lunarlon midsole gives you a springy underfoot sensation and extra stability.", "The legend lives on in the Nike Air Force 1 '07 SE. This fresh take on an icon gives you classic style while playing up the AF-1's versatility with new colours and materials.", "The Nike Air Zoom Structure 22 Women's Running Shoe looks fast and feels secure. Engineered mesh, a heel overlay and dynamic support throughout the midfoot all work together to provide a smooth, stable ride.", "Featuring a full-length foam midsole and VaporMax Air unit, the Nike Air VaporMax 360 gives you remarkable underfoot comfort with bold 2000s style inspired by the Air Max 360.", "Originally released in 1994, the Nike Air Max2 Light returns as a near-exact replica of the iconic runner with style for the street. Its mesh and synthetic upper, moulded heel and Max Air unit honour the OG, while the soft foam midsole optimises all-day comfort.", "The Nike Benassi Slide features a lined upper with a bold logo for plush comfort and an athletic look. A foam midsole and outsole provide lightweight impact protection.", "The Nike TiempoX Lunar Legend VII Pro Turf Football Boot features lightweight foam cushioning and a premium leather construction for a flexible fit and dominating touch when playing on turf pitches.", "The Nike SB Blazer Low GT pairs a supportive feel with lightweight, responsive cushioning for everyday use. Just like Grant Taylor, it blends contemporary style with old-school traditions.", "Building on the 360-degree Flyknit innovation of the 12, the Nike Mercurial Vapor 13 Elite FG adds a Nike Aerowtrac zone to the forefoot and a slightly stiffer chassis to help supercharge traction. Inside, an insole with NikeGrip technology provides maximum interior traction underfoot and lightweight cushioning.", "The Nike x Carhartt WIP Air Max 95 features reflective details and neon pops of colour. Carhartt WIP materials help construct the durable upper of a new take on the first sneaker with visible forefoot Nike Air.", "The bold silhouette of Nike Air lifts the Nike Air Max 270 React to new heights, while the Nike React foam midsole delivers exceptional cushioning. Imagine all-day comfort with unstoppable style.", "The Nike Zoom Vomero 5 SE SP wraps your foot in breathable support. A combination of durable synthetic leather and breathable mesh stands ready for the rigours of your day. Soft foam and Zoom Air cushioning deliver lightweight comfort for a smooth ride.", "The Nike Odyssey React Flyknit 2 provides a strategic combination of lightweight Flyknit construction and synthetic material for support. Underfoot, Nike React cushioning delivers a soft, springy ride for a route that begs to be crushed.", "Find unstoppable comfort in the Nike Air Max 270. The eye-catching Max Air 270 unit and Nike React foam midsole deliver cushioning that moves with you. A soft and minimal collar contours to your heel for an amazing fit. A glow-in-the-dark colourway celebrates the New Year.", "The Nike Metcon 5 is the most tuned Metcon yet. This means specific stability for heavy lifting, traction made for speed and durability where you need it. It even includes a Hyperlift insert that's compatible with all prior versions of the Metcon. Meet your secret weapon for weight-lifting and high-impact training.", "The Nike M2K Tekno Shoe draws inspiration from the Monarch franchise and pushes it into today with a futuristic heel counter and plush tongue for additional comfort.", "The Nike React Element 55 SE borrows design lines from heritage runners like the Nike Internationalist, adds premium details and places it all on Nike React technology.", "The Nike Phantom Vision Club Dynamic Fit FG brings the fierce precision of street play to the pitch. A foot-hugging Dynamic Fit collar combines with targeted texture for precision to create a boot for the finishers, the providers and the battlers of tomorrow's game.", "LeBron works hard in the offseason, getting stronger and fine-tuning his already devastating skills. Inspired by his dedication and commitment to inclusivity, the Soldier 13 SFG combines LeBron-tested cushioning, containment and support with a wide, flexible collar and lace-free closure that lets all players get in and out of the shoe with ease.", "The Air Jordan 1 Mid Shoe is inspired by the first AJ1, offering OG fans a look at how far the Jordan brand has come since 1985.", "The Nike Kawa Shower Men's Slide is designed to help feet recover after competition. A textured Solarsoft footbed and flexible foam outsole offer lightweight comfort.", "The Nike Air Force 1 SP adds a shiny metallic finish to the details that made the original an icon.", "Nothing as fly, nothing as comfortable, nothing as proven. The Nike Air Max 90 stays true to its OG running roots with the iconic Waffle sole, stitched overlays and classic TPU details. Classic colours celebrate your fresh look while Max Air cushioning adds comfort to the journey.", "Built with a carbon-infused nylon plate inspired by the VaporFly 4%\u00e2\u20ac\u201dour most efficient marathon shoe ever\u00e2\u20ac\u201dthe Nike Zoom Fly Men's Running Shoe is the perfect response to the demands of your toughest tempo runs, long runs and race days.", "The Nike MX-720-818 uses materials inspired by space suits for a futuristic take on classic Air Max DNA.", "Responsive and supportive, the Kyrie 5 is made with a soft midsole for responsive cushioning and a curved outsole for multi-directional traction.", "An ideal performer for runs of up to 3 miles, the Nike Free RN 5.0 returns to its roots as a running shoe. A stripped-down upper with single-layer mesh is stretchy to feel like a second skin. The lightweight midsole with less foam makes it easy to hit the ground running.", "The LeBron 17 harnesses LeBron's strength and speed with containment and support for all-court domination. It features a lightweight mix of knit and heat-moulded yarns that gives each one a durable look and feel. Combined cushioning provides LeBron with the impact support and responsive energy return he needs to power through the long season.", "The legend lives on in the Nike Air Force 1 Mid '07 Women's Shoe, a modern take on the icon that blends classic style and fresh, crisp details.", "Designed specifically for a woman's foot, the Nike Air Max Dia delivers a lifted look, an airy aesthetic and a sleek shape. The minimal upper modernises the look, while the Max Air unit, surrounded by clear TPU, is amplified even further by an exaggerated midsole for a boost of style.", "The Nike Air Max 98 features the OG design lines that were inspired by the walls of the Grand Canyon while adding bursts of fresh colour to the upper. The fluid, textured look and full-length Nike Air cushioning set you apart from the pack.", "The Nike Air Max Tailwind IV gives a new look to the '90s classic. Max Air units give you comfort and style that last.", "The Nike Air Force 1 Shadow pays homage to the women who are setting an example for the next generation by being forces of change in their community. This sneaker reflects this ethos in its design with double the Swoosh, double the height and double the force.", "The Nike Benassi JDI BETRUE Slide creates lightweight comfort in a classic design, while the soft foam sole cushions your every step.", "The Nike Air Huarache Ultra Women's Sandal helps keep your feet cool and comfortable on warmer days.", "The Air Max 97 shook up the running world with its revolutionary full-length Nike Air unit. The Nike Air Max 97 remasters the original design with bold new colours and flashes of gold.", "Inspired by the Vaporfly, the Nike Zoom Fly 3 gives distance runners race-day comfort and durability. The power of a carbon-fibre plate keeps you in the running mile after mile.", "\"Soft to the touch, the Nike Epic Phantom React Flyknit is lace-free for a slip-on style that gets you up and running in no time. A snug, secure, sock-like fit within a breathable Flyknit upper feels as though the Phantom \"\"disappears\"\" as you run.\"", "Bring the past into the future with the Nike Air Max 2090, a bold look inspired by the DNA of the iconic Air Max 90. Brand-new Nike Air cushioning underfoot adds unparalleled comfort while transparent fabric on the upper is blended with timeless OG features for an edgy, modernised look.", "Kevin Durant always looks relaxed\u00e2\u20ac\u201duntil he attacks. His game is reserved yet explosive, difficult to guard and impossible to stop. The KD12 was built for his dominance and endless energy all game long, with the latest innovation in Nike Zoom Air technology.", "\"Soft to the touch, the Nike Epic Phantom React Flyknit is lace-free for a slip-on design that gets you up and out the door in no time. A snug, sock-like fit and breathable upper materials will make you feel as though the Phantom \"\"disappears\"\" as you run.\"", "The NikeCourt Air Zoom Vapor X has an updated Dynamic Fit system with a full-length foot frame to provide ultimate control. Its new generative outsole combined with a Zoom Air unit provides a lightweight, responsive feel on the court.", "Alyx founder and creative director Matthew M. Williams is known for his ability to push fashion into new spaces. His angle is simple: Combine the influence of his life in New York and California with the latest innovations. The Nike x MMW Joyride CC3 Setter runs with that idea, bringing you to a world of cushioning and comfort.", "Inspired by the chopping, cutting and rebuilding of custom cars and bikes, the Nike Signal D/MS/X overturns the idea of sportswear with style and attitude. With layered materials and intricate detailing, it uses innovations in an irreverent way that's more aesthetic than athletic.", "The iconic Nike Air Zoom Pegasus 36 returns with more perforations and mesh in the upper for targeted breathability across high-heat areas. A slimmer heel collar and tongue reduces bulk without compromising comfort, while exposed cables give you a snug fit at higher speeds.", "Designed in collaboration with Gilbert Baker, the Nike Air Max 720 BETRUE features a rainbow-coloured upper inspired by, and in celebration of, the LGBTQ community.", "The iconic Nike Air Zoom Pegasus 36 returns with more perforations and engineered mesh in the upper for targeted breathability across high-heat areas. A slimmer heel collar and tongue reduce bulk without compromising comfort, while exposed Flywire cables give you a snug fit at higher speeds.", "Featuring soft foam cushioning and lightweight, woven fabric in the upper, the Jordan Proto-Lyte is made for all-day, bouncy comfort.", "Jun Takahashi's vision of chaos and balance continues with the Nike x Undercover React Presto. An OG Presto design uses new details that pay homage to last season's collaboration, the React Boot.", "\"The Nike Air Max 90 honours the OG with a revamped design that replicates the initial 1990 release. A \"\"clean slate\"\" colourway celebrates the shoe's 30th anniversary with the iconic Waffle sole.\"", "The Nike Potential 3 Unisex Cricket Shoe delivers lightweight cushioning and superb grip on the field with a Phylon midsole and rubber outsole.", "Lounge wherever you go and let the Nike Joyride CC take you into a new world of cosy by placing your feet directly on the soft cushioning of its innovative bead-pods. Bold colour-blocking and exaggerated textures add unrivalled depth to your fun, edgy attitude.", "With DIY attitude and classic tennis shoe appeal, the Nike Drop-Type puts a raw, experimental edge on an iconic look. Featuring distinct lines that borrow from the NikeCourt series, an exposed foam tongue and N354 branding, it lets your shoes do the talking.", "\"Originally designed by Tinker Hatfield in 1990, the Air Max 90 has been re-imagined. Widely considered one of the biggest cross-cultural icons of the early '00s, this iteration pays tribute to the influential 2003 \"\"Snakeskin\"\" release with premium materials and a bold twist on the original.\"", "The Nike Air Max 97 keeps a sneaker icon going strong with the same design details that made its reputation from the beginning: water-ripple lines, reflective piping and full-length Max Air cushioning.", "Why not take the shot? Why not attack the full length of the court? Why not crash the boards and steal every ball and rain assists like water? The Jordan 'Why Not?' The Zer0.2 SE PF celebrates Russell Westbrook's calculated chaos by combining materials that work in lightweight harmony\u00e2\u20ac\u201dbecause, well, why not?", "The Nike Flex RN 2018 Women's Running Shoe delivers a flexible fit with a lightweight knit construction to help your runs feel free and easy.", "Built specifically for trails, the Nike Air Zoom Wildhorse 5 keeps you galloping over rough terrain in breathable, multi-layer fabric. A rock plate helps shield your foot, while a Zoom Air heel unit cushions your stride on and off the path.", "\"Named after the Japanese word for \"\"simplicity\"\"", "Featuring an internal 1/2 sleeve construction, the Air Jordan 1 Nova XX Shoe offers a snug fit without traditional laces. Underfoot, an Air-Sole unit at the heel provides lightweight cushioning that moves with you all day long.", "The Nike Air Force 1 '07 LV8 incorporates the same hoops-inspired performance features of the 1982 original while adding fresh design details for an updated look.", "Nike's first lifestyle Air Max lets you greet the streets with the soft, smooth and resilient ride of the Nike Air Max 270. The design draws inspiration from the Air Max pantheon, showcasing Nike's greatest innovation with its large window and fresh array of colours.", "The Air Jordan XXXIV PF continues the legacy of a cultural icon. Light, responsive and sculpted with aerodynamic precision, it combines a boldly unconventional midsole with herringbone traction to merge innovative and iconic design elements.", "The Nike SB Air Max Stefan Janoski 2 hugs your foot with a breathable textile upper. A Max Air unit in the heel cushions every step, while a flat rubber outsole optimises grip when you're on your board.", "Inspired by outer space flight, the Jordan Proto-Max 720 provides all-day comfort with a future-forward look. An outer shroud covers the sock-like bootie construction, while Nike Air cushions every step.", "Designed to stretch with your foot, the Nike Air Huarache Women's Shoe has remained a sneaker staple since its 1991 debut, when it changed the face of running footwear forever.", "The Nike Classic Cortez Shoe is Nike's original running shoe, designed by Bill Bowerman and released in 1972. This version features a leather and synthetic leather construction for added durability.", "From rain and mud to sunny afternoons, the Wildwood debuted in 1989 as a direct descendent of the Nike Escape. With design influence from the Pegasus, it was designed as an off-road sneaker meant to take you through rough terrain. The special sawtooth Waffle outsole was further proof that conquering bad weather didn't mean drabness.", "Nike's first lifestyle Air Max meets the softest, smoothest, most resilient foam yet in the Nike Air Max 270 React. The design draws inspiration from the Air Max pantheon, showcasing Nike's greatest innovation with its large window and fresh array of colours.", "The Nike Air Max 90 Women's Shoe honours its roots with a supportive upper and the excellent cushioning that made the original a favourite.", "Get your freak on in Giannis Antetokounmpo's debut signature shoe, Nike's first ever for the international basketball sensation. The Zoom Freak 1 has the extra-responsive cushioning, forefoot lockdown and multi-directional traction needed to complement his freakishly athletic game.", "Shane O'Neill put the same attention to detail into every aspect of his signature shoe as he does in his almost otherworldly skating. From the low-key perforated ventilation at the toe, to the double lacing option and the no-break-in remastered sole, the Nike SB Shane gets all the details right.", "Hoops in the park, Sunday BBQs and sunshine. The radiance lives on in the Nike Air Force 1 '07 Essential, the b-ball OG that puts a fresh spin on what you know best: crisp leather, bold colours and the perfect amount of flash to make you shine.", "Bring the past into the future with the Nike Air Max 2090, a bold look inspired by the DNA of the iconic Air Max 90. Brand-new Nike Air cushioning underfoot adds unparalleled comfort while transparent knit and vibrantly coloured textiles on the upper blend with timeless OG features for an edgy, modernised look.", "Designed with every woman in mind, the mixed-material upper features a plush collar, flashy colours and unique stitching patterns. Nike Air cushioning combines with the lifted foam heel for a modern touch, adding comfort and style to your journey.", "The LeBron x John Elliott Icon brings the clean and layered approach of a lifestyle shoe to a hardwood classic. Cushioning from the LeBron 8 combines with court-inspired details and translucent materials as a tribute to Elliott's favourite shoe in the series. The result: Power, unleashed.", "Utilising the latest innovations and Nike's ISPA project\u00e2\u20ac\u201dwhich touts a philosophy of improvise, scavenge, protect and adapt\u00e2\u20ac\u201dthe Nike ISPA Joyride Envelope delivers a futuristic shoe built for taking on the elements. Innovative details provide easy on and off and help support you in wet or warm conditions.", "Inspired by spacesuits, the Jordan Proto-React Z has a futuristic look with a fit and feel made for all-day wear. Responsive cushioning gives you more bounce with less weight, while an aeronautics-inspired shroud and snug bootie help keep you strapped in.", "Part of the N354 family that nods to Steve Prefontaine's fastest mile, the Nike Drop-Type Mid is inspired by classic tennis shoes in the NikeCourt family. With distinct design lines that borrow from the All Court 2, it puts a raw, experimental edge on an iconic look.", "Building on the 360 innovation of the 6, the Nike Mercurial Superfly 7 Elite FG Boot adds a Nike Aerowtrac zone to the forefoot and a slightly stiffer chassis to help supercharge traction.", "Be bouncy and buoyant in the Nike Air VaporMax Flyknit 3. The upper features flowing 2-tone lines of breathable, stretchable Flyknit construction for unique, street-ready style. Revolutionary VaporMax technology keeps a spring in your step with toe-to-heel cushioning.", "Redesigned for casual wear, the Nike Air Max 90 stays true to its '90s running roots with a rubber Waffle sole, stitched overlays and TPU plates. Hair-on leather and felted fabric colours combine with Max Air cushioning for a makeover that goes all out.", "The Nike Air Max 97 keeps a sneaker icon going strong with the same design details that made it famous: water-ripple lines, reflective piping and full-length Max Air cushioning.", "First debuted on the hardwood during one of the King's epic December showdowns, the LeBron 7 returns in familiar festive hues to celebrate the game and the season. Featuring the same supple Team Red upper and black accents as the original iteration, this limited-edition sneaker is expertly engineered for the street and arrives complete with the unmistakable Air iconic to the model.", "The Nike React Element 55 Women's Shoe borrows design lines from heritage Nike runners like the Internationalist, adds reflective graphics and then places it all on Nike React technology.", "Inspired by basketball, the Nike Blazer Low QS Flyleather features an innovative Flyleather upper for a premium look and bold graphics by artist Steven Harrington.", "The Nike Air Zoom Pegasus 35 is built for runners at every level, whether you're a seasoned veteran or just starting out.\u00c2\u00a0It features a breathable mesh upper with an out-turned collar for Achilles comfort. Down below, the cushioning has been updated with full-length Zoom Air for the first time ever, to deliver a smoother, more natural stride.", "The Nike Free TR Ultra is lightweight and flexible to be quick and adaptable for whatever workout you take on. The slip-on design has Flywire cables to securely hold your foot. Soft, flexible foam cushioning has a wider surface area for more stability.", "Named after the Japanese word for simplicity, the Nike Tanjun Women's Shoe offers an elegant, modern design for an elevated everyday look.", "The Nike Air Zoom Winflo 5 Men's Running Shoe provides a responsive ride and durable, multi-surface traction underfoot. Up top, engineered mesh delivers support and breathability where you need them, while an inner sleeve gives you a comfortable, sock-like fit as you hit your stride.", "The game has gone small, so bigs have to be faster, more agile and more versatile to stay relevant. Keeping pace with ever-evolving player needs, the Nike Air Force Max II provides the responsive cushioning that allows big players to keep crashing the boards and banging in the post, while helping them stay light and quick on the break.", "Join the hoops uprising in the AlphaDunk, one of Nike Basketball's bounciest game shoes to date. The revamped upper construction is light and supportive and a large cushioning unit spans nearly the entire forefoot, giving you all the responsiveness you can handle on the court.", "The soft upper of the Nike Mercurial Superfly 7 Academy TF Shoe wraps your foot for a second-skin fit, while the rubber outsole helps supercharge traction on turf.", "Designed in collaboration with Pat Peltier, the mind behind up-cycled vintage label Bandulu, the Kyrie 5 x Bandulu explores process, approach and technique. The brand's signature paint splatters give the shoe an expression that speaks to Kyrie's creativity and dedication to his craft\u00e2\u20ac\u201don and off the court.", "The Nike ZoomX Vista Grind brings you to a bold new place both rebellious and refined. It's comfort you can see and feel in a brand new silhouette.", "The Nike Air Max Impact infuses bold, expressive details into a design that's a beast on the court. Responsive cushioning helps soften hard landings, while the moulded heel clip and dual-strap system combine for a lightweight, locked-in feel.", "The Nike Renew Run keeps you moving with softer foam for a cushioned feel. Designed with the everyday runner in mind, this shoe delivers secure support and durable traction for comfort on the go.", "\"Drawing inspiration from Nike running shoes such as the Nike Zoom Vaporfly Elite, the Nike EXP-X14 SE Men's Shoe races off the track and onto the street with a fast design and shape. Nike React technology delivers lightweight durability and a smooth feel, while the layered upper showcases Flywire cables and a bold \"\"Just Do It\"\" tagline.\"", "The Nike Air Force 1 '07 Premium captures the iconic look of its 1982 predecessor, with full-length cushioning for comfort and premium detailing that honours the original. A rich mix of materials gives an eye-catching look that's ready to hit the streets.", "The Nike Tiempo Legend 8 Elite FG takes the legendary touch of premium kangaroo leather and adds foot-hugging Quad-Fit mesh in the lining and a wrap-around Flyknit tongue that feels supportive under your arch.", "The Nike Legend React Men's Running Shoe features a breathable upper with synthetic overlays that enhance durability while smooth, responsive foam cushions every step as you run.", "The Nike Phantom Vision Academy Dynamic Fit TF Artificial Turf Football Boot provides the precise touch to win small-sided glory, wherever the game finds you. Webbing on the laces provides lockdown while a textured instep is always ready to receive, turn and score.", "Making its debut in 1978 for the Honolulu Marathon, the Nike Air Tailwind was a revolution in cushioning. Now, a racing icon returns with the Nike Air Tailwind 79, featuring nearly original materials and colours, plus the Nike Air unit that made it a winner.", "The Jordan Jumpman 2020 PF delivers lightweight support for dynamic play on the court. A textile upper and secure midfoot webbing keep you moving freely during possessions.", "Fine-tuned with LeBron's ferocious game in mind, the LeBron 17 Low has a sleek, low-top design that features a powerful combination of impact-ready cushioning and responsiveness.", "Hoops in the park, Sunday BBQs and sunshine. The radiance lives on in the Nike Air Force 1 '07, the b-ball OG that puts a fresh spin on what you know best: crisp leather in an all-black colourway for a statement look on and off the court.", "As fresh as its first release, the Air Jordan 4 Retro remakes Michael Jordan's 4th signature shoe for today's streetwear savants. Suede and textile materials provide lightweight durability and support, while Nike Air cushioning offers comfort with every step.", "The Nike Benassi Women's Slide features a lined upper with a bold logo for plush comfort and an athletic look. A foam midsole and outsole provide lightweight impact protection.", "Inspired by patterns of energy radiating from Earth\u00e2\u20ac\u201dlike the flow of lava and the rhythmic ocean waves\u00e2\u20ac\u201dthe Nike Air Max 200 boasts the largest Max Air unit to date. With exceptional cushioning and modern detailing, this shoe radiates cool while providing optimal comfort.", "Feel the Air, both above and below, with the Nike Air Max 270 Flyknit Men's Shoe. It features Nike's biggest heel Air unit yet, plus an ultra-breathable Flyknit upper that helps keep you cool when the temperatures rise. Classic colour combinations nod to iconic Air Max models of the past, delivering a modern, streamlined look that's rooted in Nike sneaker heritage.", "The Nike React Element 55 SE borrows design lines from heritage runners like the Nike Internationalist, adds reflective graphics and combines it with Nike React technology for a smooth ride.", "The Nike Air Max 97 Utility puts a cold-weather spin on a classic style. Synthetic panels, engineered rubber and reflective design touches let you feel secure when hitting the streets.", "Crafted from soft suede, the Nike SB Check is reinforced in key areas for the durability you need to skate all day long.", "The first Nike SB shoe designed specifically for women, the Nike SB Bruin High is built for exceptional comfort and board control. With classic Bruin design lines and details, this is a fresh take on a time-honoured shoe.", "\"One of the game's fiercest competitors, triple-double dynamo Russell Westbrook has the motor, muscle and mentality to match his fearlessness\u00e2\u20ac\u201dwith the stats to back it up. Built to hold up on outdoor courts, the Jordan \"\"Why Not?\"\" Zer0.3 PF is fine-tuned for players like Russ", "Remastered from the OG that shook up the running world, the Nike Air Max 97 elevates the classic design. Memorial Day Parade White and fresh Sky Blue tint the sole. Flex your summertime vibes and float the streets in style.", "In spiritual circles, the colour purple represents enlightenment. It speaks to being fully connected to your spiritual mind by tapping into an inner source of potential that was otherwise undiscovered. The Kyrie 6 'Enlightenment' plays up the unseen spirituality theme with an all-seeing eye graphic on the side of the upper and a purple colour scheme.", "The Nike Zoom Pegasus Turbo Shield delivers your favourite lightweight running shoe in a smart, weatherised design, so you can continue training in confidence despite those dark and rainy months.", "More than 20 years after its initial release, the Nike Air Max Triax 96 returns as a cult classic. Featuring the same iconic shape and large-volume Air unit, it brings back the classic comfort and style you remember.", "Winning in both style and comfort, the NikeCourt Royale AC is as easy to get on as it is to pair with your entire warm-weather wardrobe. A hidden gore strap keeps the canvas upper looking clean and classic while easing it on and off.", "The Nike Air Monarch IV Lifestyle/Gym Shoe delivers lightweight cushioning and durable support with a Phylon midsole and a leather upper. Flex grooves provide natural flexibility with every step.", "The Nike ACG React Terra Gobe combines rugged durability with ACG style to get you where you need to go in comfort. The textile and synthetic upper is breathable and durable, and Nike React technology in the midsole provides an extremely smooth and comfortable ride.", "The Nike React Metcon AMP takes the stability and traction from the original and pairs it with React foam, Nike's most comfortable cushioning. It feels soft and springy with a breathable upper, but it's still stable enough to tackle lifting and high-impact workouts. A glow-in-the-dark rubber sole climbs up the side of the shoe for durability and extra grip during rope climbs.", "Building on the forefoot plate innovation of the 6, the Nike Mercurial Superfly 7 Academy MG Boot adds a versatile multi-ground plate that provides traction on natural- and artificial-grass surfaces.", "Featuring a panther-inspired design that takes after Michael Jordan's on-court presence, the Air Jordan 13 Retro is based on the OG model and has the same responsive cushioning and premium materials that made it famous in the '90s.", "The Nike Daybreak SP marks the return of the 1979 original, featuring suede and nylon on the upper and old-school graphics on the tongue for a '70s runner-inspired look and feel.", "The Nike Air Max Alpha Savage invokes Air Max style, stability and comfort in a modern design. Webbing integrates with the laces for midfoot containment, while Max Air cushioning delivers responsive comfort during your most intense workouts.", "Dream of speed and play fast in the Nike Mercurial Superfly 7 Elite MDS FG. A streamlined upper combines with a Nike Aerowtrac zone for high-speed play and supercharged traction.", "The Nike Joyride Dual Run blazes its own route. Tiny foam beads underfoot combined with traditional cushioning in the forefoot give an incredibly smooth feel that contours to your foot.", "The Air Max 98 rode the wave of its legendary predecessor, debuting with full-length visible Air and fluid design lines. Now it returns, sporting the same signature look and a new run of colours.", "The Nike Phantom Vision 2 Elite Dynamic Fit FG brings a new level of fierce precision to the field. A foot-hugging inner sleeve is concealed in a textured Flyknit outer layer to create a boot for the finishers, the providers and the battlers of tomorrow's game.", "The NikeCourt Air Zoom Resistance delivers lightweight durability on the hard court with a performance leather upper.", "Featuring Revive Foam, a super-soft foam designed to help you relax and recharge, the unrelenting comfort of the Nike Offcourt Slide is sensational. The innovative dual-layered foam and soft jersey lining on the strap ensure a gratifying full-foot experience. The iconic Air Force 1 pivot circle outsole and block lettering on the strap casually nod to heritage hoops.", "Emerging from The 10th, a new label that crosses tried-and-true workwear with Nike innovation, the Nike React Sertu blends handcrafted features with modern, technical elements. Borrowing elements from traditional moccasins and adding a touch of military-inspired detailing, it mixes utility with wearability, bringing a bold new look to the streets.", "The Air Jordan 14 Retro has class, comfort and the singular look of the original, with heritage-inspired colours, full-grain leather and responsive Zoom Air cushioning.", "\"Refresh your look and step into a new AF-1 world with the Nike Air Force 1 React. It fuses modern design with iconic b-ball style for a big, bold look. The oversized Swoosh, large \"\"AIR\"\" on the midsole and new sole pattern let you express your modern world while Nike React technology adds exceptional underfoot comfort.\"", "Always one step ahead, the Nike Air Max 98 LX features the OG design lines that were inspired by the walls of the Grand Canyon while stepping into the future with a colourful medley of recycled materials on the upper. The fluid, textured look and full-length Nike Air cushioning set you apart as you turn waste into style.", "The Nike Free X Metcon will take you from a short run to your gym workout. Superior breathability and comfort combined with durability and response make this stable trainer perfect for even the most ambitious of fitness goals.", "The Nike Zoom Pegasus Turbo 2 is updated with a feather-light upper, while innovative foam brings revolutionary responsiveness to your long-distance training.", "The Air Jordan XXXIII rewrites the story of an iconic basketball shoe. Its revolutionary closure system secures you for flight, while new FlightSpeed technology is tuned for optimal energy return.", "The Nike React Element 55 Shoe borrows design lines from heritage runners like the Nike Internationalist and then places it all on Nike React technology.", "LeBron is unstoppable on the court and just as influential off of it. The year 2003, LeBron's rookie season and a pivotal year in culture, inspires the LeBron 16 Low. It is powered by Max Air and Zoom Air cushioning technologies, and embodies his clout and versatility.", "The Nike Air VaporMax SE wraps your foot in a stretch woven material that gives structure and support to your stride. Underfoot, the lightest, most flexible Air Max cushioning to date gives a super-bouncy sensation that rivals running on air.", "The Nike Drop-Type Premium is inspired by classic tennis shoes in the NikeCourt family. Part of the N354 family that nods to Steve Prefontaine's fastest mile, it offers distinct design lines that borrow from the All Court 2.", "Trail-ready traction makes the Nike ACG Moc 3.0 a go-to for your next outdoor adventure. Designed and tested in Oregon, it features a sticky rubber heel and toe tip.", "Inspired by the original that debuted in 1985, the Air Jordan 1 Low offers a clean, classic look that's familiar yet always fresh. It's made for casual mode, with an iconic design that goes with everything and never goes out of style."], "data": [1, 1, 2, 2, 2, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 2, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 2, 2, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 2, 1, 1, 2, 1, 1, 3, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 2, 1, 1, 1, 1, 1, 2, 2, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 1, 1, 1, 1, 2]}, "rating": {"label": ["2.6", "3.1", "4.2", " they cover zones where your foot releases the most heat.\"", "3", " the Nike Tanjun Men's Shoe offers a streamlined", "2.7", "4.4", "3.8", "2.9", "4.5", "2.5", "2.4", "4.9", "3.4", "5", "3.3", " the Nike Cortez '72 S.D. returns to the OG design with zigzag edges", "4.3", "3.5", "4.8", "4.1", "4.6", " who beat opponents with linear speed and aggressiveness.\"", " the Nike x Hawkins High Cortez combines premium materials laid out using the Tiger Pride green and orange with hidden details and show references throughout", "3.6", "1.5", "2.8", "3.2", "2.2", "1", "3.7", " nodding to those who feed the city of style.\"", "4.7", "4", "2", "3.9", " while a polka-dotted upper gets you noticed.\""], "data": [3, 4, 18, 1, 14, 1, 5, 19, 8, 3, 33, 1, 1, 5, 5, 115, 2, 1, 19, 9, 18, 14, 17, 1, 1, 7, 1, 3, 2, 1, 6, 15, 1, 13, 30, 5, 11, 1]}, "reviews": {"label": ["7", "54", "15", "11", "29", "42", "3", "30", "34", "8", "22", " including three distinct \"\"Stranger Things\"\" pins.\"", "16", "71", "47", "223", "5", "31", "18", "61", "27", "17", "26", "78", "6", "68", "19", "23", "25", " modern design for an elevated everyday look.\"", "53", "81", "33", "48", "67", "9", "24", "1", "105", "20", "36", "10", "63", "65", "4", "62", "12", "13", " an exposed foam tongue and minimalist leather. Why? Because you don't change what works.\"", "14", "94", "72", "2", "50", "45"], "data": [9, 1, 4, 8, 1, 1, 35, 3, 7, 10, 1, 1, 2, 1, 2, 1, 34, 4, 9, 2, 2, 6, 2, 1, 17, 1, 7, 4, 3, 1, 1, 1, 2, 1, 1, 8, 3, 98, 1, 6, 1, 11, 2, 1, 21, 1, 9, 7, 1, 4, 1, 1, 48, 1, 3]}, "product_name_stringindexer_transform": {"label": ["0.0 - 27.1", "27.1 - 54.2", "54.2 - 81.3", "81.3 - 108.4", "108.4 - 135.5", "135.5 - 162.6", "162.6 - 189.7", "189.7 - 216.8", "216.8 - 243.9", "243.9 - 271.0"], "data": [86, 54, 54, 54, 30, 27, 27, 27, 27, 28]}, "product_id_stringindexer_transform": {"label": ["0.0 - 36.4", "36.4 - 72.8", "72.8 - 109.2", "109.2 - 145.6", "145.6 - 182.0", "182.0 - 218.4", "218.4 - 254.8", "254.8 - 291.2", "291.2 - 327.6", "327.6 - 364.0"], "data": [74, 48, 37, 36, 36, 37, 36, 37, 36, 37]}, "brand_stringindexer_transform": {"label": ["0"], "data": [414]}, "description_stringindexer_transform": {"label": ["0.0 - 33.4", "33.4 - 66.8", "66.8 - 100.2", "100.2 - 133.6", "133.6 - 167.0", "167.0 - 200.4", "200.4 - 233.8", "233.8 - 267.2", "267.2 - 300.6", "300.6 - 334.0"], "data": [76, 66, 38, 33, 33, 34, 33, 34, 33, 34]}, "rating_stringindexer_transform": {"label": ["0.0 - 3.7", "3.7 - 7.4", "7.4 - 11.1", "11.1 - 14.8", "14.8 - 18.5", "18.5 - 22.2", "22.2 - 25.9", "25.9 - 29.6", "29.6 - 33.3", "33.3 - 37.0"], "data": [197, 72, 56, 28, 23, 17, 8, 5, 4, 4]}, "reviews_stringindexer_transform": {"label": ["0.0 - 5.4", "5.4 - 10.8", "10.8 - 16.2", "16.2 - 21.6", "21.6 - 27.0", "27.0 - 32.4", "32.4 - 37.8", "37.8 - 43.2", "43.2 - 48.6", "48.6 - 54.0"], "data": [253, 48, 43, 22, 14, 12, 5, 6, 5, 6]}}}, "ManualFE": {"FE": [{"transformationsData": [{"feature_label": "product_name", "transformation_label": "String Indexer"}], "feature": "product_name", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "414", "mean": "", "stddev": "", "min": "Air Jordan 1 Jester XX Low Laced", "max": "Zoom Freak 1 'Employee of the Month'", "missing": "0", "distinct": "272"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "product_name"}, {"transformationsData": [{"feature_label": "product_id", "transformation_label": "String Indexer"}], "feature": "product_id", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "414", "mean": "", "stddev": "", "min": "130690-017", "max": "CW4409-100", "missing": "0", "distinct": "365"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "product_id"}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "listing_price", "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "type": "numeric", "replaceby": "mean", "selected": true, "stats": {"count": "414", "mean": "4397.16", "stddev": "6112.7", "min": "0", "max": "18995", "missing": "0"}, "updatedLabel": "listing_price"}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "sale_price", "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "type": "numeric", "replaceby": "mean", "selected": true, "stats": {"count": "414", "mean": "10429.25", "stddev": "4260.23", "min": "1595", "max": "24995", "missing": "0"}, "updatedLabel": "sale_price"}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "discount", "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "type": "numeric", "replaceby": "mean", "selected": true, "stats": {"count": "414", "mean": "0.0", "stddev": "0.0", "min": "0", "max": "0", "missing": "0"}, "updatedLabel": "discount"}, {"transformationsData": [{"feature_label": "brand", "transformation_label": "String Indexer"}], "feature": "brand", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "414", "mean": "", "stddev": "", "min": "Nike", "max": "Nike", "missing": "0", "distinct": "1"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "brand"}, {"transformationsData": [{"feature_label": "description", "transformation_label": "String Indexer"}], "feature": "description", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "411", "mean": "", "stddev": "", "min": "\"Breathability and inspiration come together in the Nike Air Zoom Pegasus 36 Premium Rise. A knit-in graphic repeating across the mesh and synthetic upper spells out \"\"Just Do It.\"\" in perforations. Strategically placed", "max": "With the Nike Air Max 90, a legendary shoe gets a luxe material treatment and brash colour palette with a history all of its own. Here, the Air Max 90 silhouette is clad in premium all-over suede with ballistic mesh accents to keep it breathable. This vibrant palette of saturated colours was made famous in the original Viotech release, which launched exclusively in Japan in the early 2000s. The head-turners have another classic to admire.", "missing": "3", "distinct": "335"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "description"}, {"transformationsData": [{"feature_label": "rating", "transformation_label": "String Indexer"}], "feature": "rating", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "414", "mean": "4.24", "stddev": "0.82", "min": " nodding to those who feed the city of style.\"", "max": "5", "missing": "0", "distinct": "38"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "rating"}, {"transformationsData": [{"feature_label": "reviews", "transformation_label": "String Indexer"}], "feature": "reviews", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "414", "mean": "11.17", "stddev": "18.8", "min": " an exposed foam tongue and minimalist leather. Why? Because you don't change what works.\"", "max": "94", "missing": "0", "distinct": "55"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "reviews"}, {"feature": "product_name_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "414", "mean": "104.42", "stddev": "79.66", "min": "0.0", "max": "271.0", "missing": "0"}, "updatedLabel": "product_name_stringindexe..."}, {"feature": "product_id_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "414", "mean": "163.3", "stddev": "111.56", "min": "0.0", "max": "364.0", "missing": "0"}, "updatedLabel": "product_id_stringindexer_..."}, {"feature": "brand_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "numeric", "selected": true, "stats": {"count": "414", "mean": "0.0", "stddev": "0.0", "min": "0", "max": "0", "missing": "0"}, "updatedLabel": "brand_stringindexer_trans..."}, {"feature": "description_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "414", "mean": "141.17", "stddev": "102.53", "min": "0.0", "max": "334.0", "missing": "0"}, "updatedLabel": "description_stringindexer..."}, {"feature": "rating_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "414", "mean": "6.64", "stddev": "7.71", "min": "0.0", "max": "37.0", "missing": "0"}, "updatedLabel": "rating_stringindexer_tran..."}, {"feature": "reviews_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "414", "mean": "8.21", "stddev": "11.33", "min": "0.0", "max": "54.0", "missing": "0"}, "updatedLabel": "reviews_stringindexer_tra..."}], "message": "Successfully executed", "status": 1, "userid": "7b254440-ce6b-4cbe-9a6b-9ca33491250a", "autoFE_flag": true, "stageId": "66ae0e8917c733036b10f54f", "FESamplePath": "/FileStore/platform/sampleData/66ae0e8917c733036b10f54f_AutoFE/part-00000-b14101f4-c9ea-477f-8a29-70b18e967a65-c000.csv", "manualfesamplepath": "/FileStore/platform/sampleData/66ae0e8917c733036b10f54f_AutoFE/part-00000-b14101f4-c9ea-477f-8a29-70b18e967a65-c000.csv", "samplecount": 414, "originalcount": 414, "dataPercentage": "10", "FEGraph": [{"values": {"label": ["Nike Drop-Type", "Nike Mercurial Superfly 7 Academy IC", "Nike Renew Fusion", "Nike React Element 55 SE", "Nike React Presto Premium", "Nike React Metcon", "Air Jordan 7 Retro", "Nike SB Air Max Stefan Janoski 2", "Nike SB Air Zoom Bruin Edge", "Nike Free TR Ultra", "Nike React Metcon AMP", "Nike Phantom Vision Club Dynamic Fit FG", "Nike Air Monarch IV", "Nike Air Skarn", "Nike Zoom KD12 'YouTube'", "Nike In-Season TR 9", "Nike Air Max Verona", "Nike Joyride Dual Run", "Nike Flex RN 2019", "Nike Classic Cortez", "Nike Air Force 1 SP", "Nike SB Shane", "Nike Air Max Dia SE", "Nike Phantom Venom Academy TF", "Nike SB Zoom Stefan Janoski Canvas RM", "Nike Blazer Low QS Flyleather with at least 50% leather fibre", "Nike Air Force 1 '07 Essential", "Jordan Mars 270", "Nike Huarache Type", "Nike Air Max Dia Winter", "Jordan Proto-Lyte", "Nike Tiempo Legend 8 Academy MG", "Nike ZoomX Vaporfly NEXT%", "NikeCourt Air Zoom Zero", "Nike Air Force 1 Sage Low", "Nike Air VaporMax Flyknit 3", "Nike x Undercover React", "LeBron x John Elliott Icon", "Nike Air Max 2017", "Nike Air Force 1 React", "Nike Air Max 90 FlyEase", "NikeCourt Air Zoom Resistance", "Nike Vandalised LX", "Nike Joyride Run Flyknit", "Nike Free RN Flyknit 3.0", "Nike Air Max 90", "Nike SB Blazer Low GT", "PG 3", "Nike React Presto", "Nike Odyssey React", "Nike ACG MOC 3.0", "Nike SB Check", "Nike Air Force 1 '07 LV8", "Nike Epic Phantom React", "Nike Air Huarache", "Nike Air Max 2090", "Nike Air Max Triax 96 SP", "Nike Air Huarache Ultra", "LeBron 7 QS", "Nike Air Ghost Racer", "Nike Air Streak Lite", "Kyrie 4", "Air Jordan 1 Low", "Nike Air Max Alpha Savage", "Nike Daybreak", "Nike Air Max Impact", "Jordan Proto-React Z", "Kyrie 5", "Jordan Air Latitude 720", "NikeCourt Royale", "Nike Air Zoom Structure 22", "Nike Joyride CC3 Setter", "Nike M2K Tekno", "Nike React Sertu", "Nike x Undercover Air Max 720", "Nike Phantom Venom Academy FG", "Nike Air Max 97 Utility", "Kyrie 6 'Enlightenment'", "Nike Air Max Dia", "Nike Zoom 2K", "Nike ISPA Air Max 720", "Nike Zoom Pegasus Turbo Shield", "LeBron 7", "Air Jordan 12 Retro", "Nike Air Max 720", "Nike Free RN 5.0", "Nike Zoom Fly 3 Premium", "LeBron Soldier 13 SFG", "Nike Mercurial Superfly 7 Elite MDS FG", "Nike x Undercover React Presto", "Nike Air Zoom Terra Kiger 6", "Nike Air Max Dia LX", "Air Jordan XXXIV PF", "Nike Metcon 5 AMP", "Nike Cortez '72 S.D.", "Nike Blazer Low LE", "Nike Metcon 5", "Nike Legend React", "Jordan 'Why Not?' Zer0.2 SE PF", "Nike Free Metcon 3", "LeBron 16 Low", "Nike Air Max Bella TR 2", "Nike Air Max 270 React ENG", "Nike Air VaporMax SE", "Nike Air Max 270", "Nike Air Zoom Vomero 14", "Nike Free RN 5.0 AW", "Nike Daybreak SP", "Nike Metcon Sport", "Nike Air Max FF 720", "LeBron 17 Monstars", "Nike Xarr", "Nike Phantom Vision Academy Dynamic Fit MG", "Nike Zoom Pegasus Turbo XX", "Nike Odyssey React Flyknit 2", "Nike Air Max 720 Waves", "Nike Joyride CC", "Nike Air Max Plus III", "Nike Air Zoom Pegasus 35", "Nike Benassi", "Nike Air Force Max II", "Nike Air Max 97", "Nike x MMW Joyride CC3 Setter", "Nike Air Force 1 '07", "Nike SB Zoom Stefan Janoski Mid RM", "Kyrie 6 EP 'Chinese New Year'", "Nike Benassi JDI Floral", "Nike Drop-Type Mid", "Nike Mercurial Superfly 7 Elite FG", "Nike Zoom Rise", "Nike Air Max2 Light", "Nike Tiempo Legend 8 Elite FG", "Nike Offcourt", "Nike ACG Air Terra Antarktik", "LeBron 17", "Nike ZoomX Vista Grind", "Air Jordan 1 Mid SE", "NikeCourt Air Max Wildcard", "Nike Air Max 90 QS", "Nike MX-720-818", "Jordan Jumpman 2020 PF", "Nike ACG React Terra Gobe", "Nike Air Max 720 BETRUE", "NikeCourt Air Max Vapor Wing MS", "Jordan Trunner NXT React", "Air Jordan 11 Retro Low", "Nike ZoomX Vista Grind SP", "Zoom Freak 1 'Employee of the Month'", "LeBron 17 Low", "Nike Signal D/MS/X", "Nike Zoom Pegasus Turbo 2 Rise", "Nike x Olivia Kim Air Force 1 '07", "PG 3 NASA", "Nike Air Zoom Wildhorse 5", "Nike Tiempo Legend 8 Club IC", "Nike Air Force 1 '07 Premium", "Nike Air Max 98 LX", "Nike iSPA React", "Zoom Freak 1", "Nike Wildhorse 6", "Nike Potential 3", "Nike Pegasus 36 FlyEase (Extra Wide)", "Nike Flex RN 2018", "Nike Zoom Pegasus Turbo 2", "Nike Air Zoom SuperRep", "Nike Air Zoom Winflo 6", "Nike Air Zoom Pegasus 36", "Nike Air Zoom Pegasus 36 FlyEase", "Nike Air Max 720 (OBJ)", "Nike Zoom Fly", "Nike Zoom KD12", "Nike Air Zoom Pegasus 36 Premium Rise", "NikeCourt Royale AC", "Air Jordan 1 Mid", "Nike Air Max Dia Icon Clash", "Nike Zoom Vomero 5 SE SP", "Nike x Carhartt WIP Air Max 95", "Nike Phantom Vision 2 Elite Dynamic Fit FG", "Nike Air Max 270 Flyknit", "Nike Air Max 98", "Nike Air Max 270 Special Edition", "NikeCourt Air Zoom Vapor X", "Nike Air Force 1 Mid '07", "Nike React Ianga", "Nike Epic React Flyknit 2", "Nike Air Max Tailwind IV", "Nike P-6000 Icon Clash", "Nike Air Max 270 SE", "Nike Air Max 95 Premium", "Nike Renew Run", "Nike React Kenny 55", "Nike Benassi JDI BETRUE", "Nike React Element 55", "Nike SB Dunk High Pro", "Nike Mercurial Vapor 13 Elite FG", "Air Jordan 8 Retro", "Jordan Break", "Nike Revolution 5 FlyEase", "NikeCourt Zoom Cage 3", "Nike x Olivia Kim Air Max 98", "Nike Air Force 1 GORE-TEX \u00c2\u00ae", "Nike Air Wildwood ACG", "Nike ISPA Joyride Envelope", "Nike SB Blazer Low XT", "Nike Air Max 270 React", "Nike Phantom Vision Academy Dynamic Fit TF", "Nike Air Force 1 '07 SE", "Nike Epic Phantom React Flyknit", "Nike Air Max 200", "Nike Flex TR 9", "Nike Air Tailwind 79", "Jordan Aerospace 720", "Nike React Vision", "Nike Shox TL Nova SP", "Nike Air DSVM", "Air Jordan XXXIII", "Nike Air Max 90 NS SE", "Air Jordan 10 Retro", "Nike Zoom Gravity", "Air Jordan 14 Retro", "Nike x Hawkins High Cortez", "Nike Air Max 90 Premium", "Kyrie Low 2", "Nike React Infinity Run Flyknit", "Air Jordan 5 Retro", "Nike Mercurial Superfly 7 Academy TF", "Kyrie 5 x Bandulu", "Nike Air VaporMax 360", "Air Jordan 1 Nova XX", "Nike Zoom Pegasus Turbo 2 Special Edition", "Nike Zoom Fly Flyknit", "Nike Air Max Triax 96", "Nike AlphaDunk", "Nike Benassi JDI", "Air Jordan 13 Retro Chinese New Year", "Nike Air VaporMax 2019", "Nike SB Bruin High", "Nike Zoom Fly 3", "Nike SB Zoom Stefan Janoski Canvas RM Premium", "Nike Zoom Pegasus Turbo", "Nike Air Max 90 Essential", "Nike Free X Metcon 2", "Air Jordan 13 Retro", "Nike Air Zoom Winflo 5", "Nike Air Max Tailwind IV SP", "Nike Air Force 1 Low Retro", "Nike Air Max 720 SE", "Nike Air VaporMax 2019 Premium", "NikeCourt Air Zoom Vapor Cage 4", "Nike Kawa Shower", "Nike Air Max 97 SE", "Nike Epic Phantom React A.I.R. Cody Hudson", "Nike SFB Gen 2 20cm (approx.)", "Nike Pre-Love O.X.", "Air Jordan 4 Retro SE", "Nike React Element 55 Premium", "Nike TiempoX Lunar Legend VII Pro TF", "Nike Solarsoft", "Nike EXP-X14 SE", "Nike Tanjun", "Air Jordan 1 Jester XX Low Laced", "Nike Tiempo Legend 8 Academy IC", "Jordan Hydro 8", "Nike Air Force 1 Shadow", "Jordan 'Why Not?' Zer0.3 PF", "Jordan Proto-Max 720", "PG 4 EP", "Nike Air Zoom Pegasus 36 Trail", "Nike Zoom Rival Fly", "Nike Mercurial Superfly 7 Academy MG", "Nike Drop-Type Premium", "Nike Air Max Dia NRG"], "data": [1, 2, 1, 4, 1, 3, 2, 2, 2, 1, 1, 2, 1, 1, 1, 1, 1, 2, 2, 3, 1, 2, 1, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 2, 1, 1, 2, 1, 1, 1, 1, 2, 2, 9, 1, 2, 1, 2, 1, 1, 3, 2, 1, 3, 1, 1, 1, 1, 1, 2, 2, 1, 1, 2, 2, 1, 1, 1, 2, 1, 3, 1, 1, 2, 1, 2, 2, 1, 1, 2, 1, 2, 2, 2, 2, 2, 2, 1, 2, 1, 2, 4, 1, 1, 3, 2, 1, 2, 1, 1, 2, 1, 2, 2, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 2, 1, 2, 1, 5, 1, 2, 2, 1, 1, 1, 2, 2, 1, 2, 1, 1, 2, 1, 1, 2, 1, 2, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 1, 1, 2, 2, 1, 1, 4, 2, 2, 4, 1, 1, 1, 3, 1, 1, 1, 1, 1, 1, 2, 1, 3, 1, 2, 2, 1, 2, 1, 1, 1, 1, 2, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 4, 1, 2, 2, 2, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 2, 3, 2, 1, 3, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 2, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 1]}, "label": "product_name", "count": 272, "min": "Air Jordan 1 Jester XX Low Laced", "max": "Zoom Freak 1 'Employee of the Month'"}, {"values": {"label": ["BQ5401-001", "CK5836-100", "553558-125", "AQ7878-003", "CI1290-100", "AT6099-606", "CI3871-300", "AJ6910-009", "BQ5469-703", "CQ7731-900", "864348-019", "AH6799-300", "CN6916-100", "CD4363-103", "AA1636-406", "AJ1285-101", "AQ7492-010", "AA8027-109", "AH7858-010", "AH1015-010", "918194-003", "922474-001", "CD3395-006", "BQ3177-100", "880848-005", "AV9370-001", "BQ5102-400", "CK3309-001", "BQ6046-010", "BQ4632-602", "CK4363-100", "315123-111", "AO3108-018", "CI3708-700", "CD0917-300", "AR5677-200", "BV6344-001", "CD8526-446", "AQ7489-008", "AQ2456-007", "487471-003", "AV4789-104", "AR4229-003", "BQ3448-400", "CU9174-600", "885118-001", "CI7388-600", "AT5293-004", "CD2182-001", "BQ5240-200", "BQ9138-601", "AO2132-401", "AT5301-003", "415445-102", "BV7106-400", "AO3258-080", "AO1023-005", "CK9671-001", "CD3460-010", "CJ0861-010", "BV0614-005", "CK2595-500", "CI5646-200", "AO3269-717", "CK3314-400", "AQ2730-009", "BV4584-001", "BQ3378-002", "CI3898-200", "CT7698-600", "AV4052-116", "CD6964-002", "315115-112", "CK2630-700", "CQ2503-900", "CD4365-003", "AV4417-002", "640744-016", "AH7249-118", "CT9155-063", "BV6348-300", "BV7099-400", "AT8179-100", "881105-800", "AA0287-002", "CJ0636-100", "CK1195-101", "807471-101", "CI2666-400", "AH7857-009", "BQ3212-600", "AJ6900-102", "CU7623-002", "CK6357-005", "BV0415-300", "AT5292-004", "BV1134-001", "AR6374-402", "CK2351-601", "AQ2568-100", "AO4971-700", "CI0919-100", "CI3835-002", "CD4573-001", "BQ4424-700", "CK2085-002", "CT2692-002", "AO3095-100", "CD5029-001", "849560-001", "BQ2728-012", "AT7978-414", "CQ0989-002", "AR4347-600", "AQ4176-049", "CU0675-300", "921733-104", "AA7408-008", "AO0566-606", "BV1021-007", "852542-087", "BQ5615-002", "AA7406-006", "CD4387-100", "AO7351-104", "CI9367-301", "AO3166-300", "AT6175-100", "CN3591-002", "AT6395-002", "AT5303-100", "BV7775-100", "AQ7497-300", "CI3794-600", "AV6243-400", "AT2863-100", "BQ0129-106", "CD0200-003", "BQ4630-500", "AO3189-600", "CI3446-001", "BQ6826-003", "BQ5422-200", "AV6337-003", "AQ8228-102", "AQ2203-003", "AA8030-108", "AT7324-001", "AO1741-003", "AQ7483-001", "AR9293-603", "BQ8927-102", "BQ7043-668", "AQ8830-016", "AJ6959-717", "AQ5707-001", "CQ0492-001", "CD0916-001", "749571-154", "CJ9712-001", "CI5546-100", "BV7756-001", "CN2932-100", "CI3831-200", "918193-700", "366731-100", "BQ6166-003", "BQ6623-070", "CD2153-001", "CN2408-001", "CD3002-103", "CD4366-002", "AO2607-401", "CT5770-300", "CD7070-009", "BV1357-003", "812654-011", "807471-103", "AA8022-107", "AQ4126-100", "CI1214-004", "AT5292-606", "CI1246-302", "CD7005-001", "923112-001", "704939-103", "AQ7491-008", "AV4126-002", "BV7757-500", "AO9819-001", "807443-503", "AO2982-076", "CI1396-600", "CU0814-102", "CD4372-004", "BV5841-800", "AO1742-004", "AR5676-401", "AQ7487-201", "AH1016-602", "487754-303", "AO2924-401", "618919-031", "AR4225-100", "AO4568-600", "BQ1896-002", "CD0431-107", "BQ3381-600", "CT8919-700", "CI3899-200", "AT3378-471", "CN8490-100", "AR4543-013", "310805-137", "CD0887-201", "CJ9684-001", "849559-004", "BV1507-001", "CI9842-500", "CD7288-001", "AQ2222-200", "BV5502-600", "AT7946-414", "CD4371-001", "CD2803-001", "CJ6971-001", "AT6110-004", "CD0683-600", "CI1236-100", "CU5133-600", "CJ3312-001", "631261-035", "AR6632-603", "BQ3611-100", "CI1396-004", "CQ0912-100", "CD4570-300", "325213-139", "AO7353-105", "488161-602", "AA1640-002", "BV0417-401", "CJ2586-100", "CI1291-400", "CK2718-003", "CT2007-100", "BV7725-500", "CJ6106-100", "AT7975-606", "AR4561-200", "AO3424-001", "CD0490-101", "CU3459-200", "AQ2567-002", "CD0113-400", "CD0881-104", "AT3381-008", "CN7664-800", "AQ5708-201", "AA8018-101", "CD2722-001", "AJ4115-060", "BV0657-400", "CJ5472-900", "BQ4430-400", "AQ0114-101", "343880-090", "921826-016", "AA1625-009", "CI3709-001", "CD5050-400", "AQ1189-009", "942851-002", "528895-003", "BQ3202-011", "BQ9665-301", "CI2668-004", "634835-108", "AV2605-101", "832528-001", "CK2719-400", "CT5543-300", "CJ1794-600", "CQ6549-001", "CJ0219-400", "BQ3203-007", "AR5339-002", "CD0888-002", "CD4373-001", "AA1626-602", "CT1264-101", "CI7815-602", "554724-066", "130690-017", "AQ2210-002", "AT6817-300", "812655-011", "CD5082-001", "749747-010", "CD0490-104", "CN6928-300", "CJ0861-017", "CD2189-002", "AO3116-004", "CK2531-001", "AH8050-100", "AQ4174-049", "CJ0220-400", "BQ5190-101", "CK2630-001", "AT5410-003", "AV5555-001", "AR6631-004", "313358-006", "AO9820-001", "AV3866-001", "AV1201-600", "CT4526-100", "AQ4312-107", "CQ6566-700", "AR4225-003", "AT8240-003", "AT8241-002", "AQ7477-009", "CD5007-102", "AQ1316-500", "CN5455-160", "CT5342-007", "AR7410-603", "BV0612-001", "CI1694-300", "BV5739-500", "343881-412", "315122-001", "AQ2731-500", "AH6789-023", "AT8242-009", "CD6615-100", "BQ8928-011", "943806-602", "CK6360-001", "CD2717-001", "AQ8306-407", "CD4161-606", "BQ6044-100", "CD5036-100", "BV7766-100", "AO0354-108", "AV6259-500", "414571-030", "AT6174-004", "BQ5467-101", "705265-006", "CW4409-100", "AV5187-602", "CI1718-001", "CD4962-001", "CU5646-001", "CD2053-105", "CT7695-401", "AQ1289-003", "CI7523-002", "844127-108", "AO0571-606", "AR7718-001"], "data": [1, 1, 2, 2, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 2, 2, 1, 1, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2]}, "label": "product_id", "count": 365, "min": "130690-017", "max": "CW4409-100"}, {"values": {"label": ["0.0 - 1899.5", "1899.5 - 3799.0", "3799.0 - 5698.5", "5698.5 - 7598.0", "7598.0 - 9497.5", "9497.5 - 11397.0", "11397.0 - 13296.5", "13296.5 - 15196.0", "15196.0 - 17095.5", "17095.5 - 18995"], "data": [259, 1, 6, 7, 34, 31, 25, 12, 33, 6]}, "label": "listing_price", "count": 10, "min": 0.0, "max": 18995}, {"values": {"label": ["1595 - 3935", "3935 - 6275", "6275 - 8615", "8615 - 10955", "10955 - 13295", "13295 - 15635", "15635 - 17975", "17975 - 20315", "20315 - 22655", "22655 - 24995"], "data": [14, 39, 111, 75, 77, 41, 37, 10, 4, 6]}, "label": "sale_price", "count": 10, "min": 1595, "max": 24995}, {"values": {"label": ["0"], "data": [414]}, "label": "discount", "count": 1, "min": "0", "max": "0"}, {"values": {"label": ["Nike"], "data": [414]}, "label": "brand", "count": 1, "min": "Nike", "max": "Nike"}, {"values": {"label": ["Get your freak on in Giannis Antetokounmpo's debut signature shoe, Nike's first-ever for the international basketball sensation. The Zoom Freak 1 has the extra-responsive cushioning, forefoot stability and multi-directional traction needed to complement his freakishly athletic game.", "The Monstars have crash-landed in the Windy City, prepared to strip us of some of our greatest hardwood heroes. With the game in danger, who can Bugs and the Tune Squad turn to? Who other than The King himself, LeBron James, poised to dash the hopes and dreams of Mr Swackhammer and any team that stands in his way? The LeBron 17 Monstars is here just in time for All-Star in Chicago, where LeBron is ready to represent the Tune Squad and all that is great about the sport of basketball.", "The Nike ZoomX Vaporfly NEXT% clears your path to record-breaking speed with a lighter design and faster feel than before. With more cushioning underfoot and reduced weight up top, the result is unprecedented energy return and comfort.", "The Nike Epic React Flyknit 2 takes a step up from its predecessor with smooth, lightweight performance and a bold look. An updated Flyknit upper contours to your foot with a minimal, supportive design. Underfoot, durable Nike React technology defies the odds by being both soft and responsive, for comfort that lasts as long as you can run.", "The Nike SB Zoom Stefan Janoski Mid RM pairs a minimal look with a modern fit. It has been updated with a new, plush sockliner and a flexible midsole for better boardfeel right out of the box.", "With the Nike Air Max 90, a legendary shoe gets a luxe material treatment and brash colour palette with a history all of its own. Here, the Air Max 90 silhouette is clad in premium all-over suede with ballistic mesh accents to keep it breathable. This vibrant palette of saturated colours was made famous in the original Viotech release, which launched exclusively in Japan in the early 2000s. The head-turners have another classic to admire.", "\"Soft to the touch, the Nike Epic Phantom React A.I.R. lets go of laces for slip-on style that has you up and running in no time. A sock-like fit within breathable Flyknit feels as though the Phantom \"\"disappears\"\" as you run", "The Nike Air Max Tailwind IV SP gives a new look to the '90s classic. Max Air units give you comfort and style that last.", "The radiance lives on in the Nike Air Force 1 '07, the b-ball OG that puts a fresh, outdoorsy spin on what you know best: soft suedes, bold colours and the perfect amount of flash to make you shine.", "Inspired by heritage running shoes like the 2006 Air Max 360, the Nike Air VaporMax 360 re-imagines full-length Air with its lighter, more flexible design. The full-length foam midsole adds to the comfort while bold colours create a fresh, modern look.", "Inspired by Japan's Ekiden relay runners, the Nike Zoom Rival Fly features a futuristic look with a Zoom Air unit in the forefoot that gives you responsive propulsion. Flex grooves underneath optimise toe-off and soft foam cushions your stride. The mesh and synthetic upper blends strength and breathability.", "The Nike React Presto Premium features an innovative React foam midsole that delivers a futuristic look and bouncy, lightweight feel for all-day comfort with a whole lot of personality.", "The NikeCourt Air Zoom Vapor Cage 4 is innovated to last. Rubber and flexible plastic are built to withstand your toughest matches while a unique lacing system keeps your laces hidden for extra durability.", "Featuring the first full-length Zoom Air unit in NikeCourt history, the NikeCourt Air Zoom Zero delivers exceptional responsiveness and great court feel. Its snug-fitting upper and webbed lacing system offer second-skin-like comfort and lockdown.", "Disrupt the atmosphere and let your light shine in the Nike Air Max 720 (OBJ), featuring Nike's tallest Air unit yet. Its colours take inspiration from the natural world, a counterpoint to the shoe's futuristic look.", "The Nike Vandalised LX hacks Nike DNA for a totally new spin on the original 1984 Nike Vandal, a basketball classic. Rearranging all the components creates a bold new look with asymmetrical details.", "The Nike Air Max 2017 Women's Shoe features a seamless Flymesh upper for support and breathability. Iconic Max Air cushioning provides a lightweight, smooth feel with each step, whether you're running your three-miler or running your day.", "The Nike React Metcon takes the stability and traction from the training original and pairs it with Nike's most comfortable cushioning. Tackle high-impact and lifting workouts with a light, breathable upper and durable grip to keep you going.", "The Nike Metcon Sport is designed for heavy weightlifting like all Metcons, but is updated for increased agility during explosive movements and speed drills.", "The Nike Zoom Pegasus Turbo 2 Rise is updated with a featherlight upper, while innovative foam brings revolutionary responsiveness to your long-distance training.", "The Nike Air Max Dia Icon Clash delivers a lifted look and airy aesthetic in a sleek shape. The minimal upper modernises the look, while a Max Air unit, surrounded by clear TPU, is amplified even further by an exaggerated midsole for a boost of style.", "The Nike Air Max 97 shook up the running world with its revolutionary full-length Nike Air unit. The Nike Air Max 97 SE Men's Shoe refreshes the original design with new colours and materials.", "The Nike Benassi JDI Floral Women's Slide is designed with a textured footbed and a lightweight foam midsole/outsole for a soothing, plush feel.", "The Nike Air Zoom Structure 22 Men's Running Shoe looks fast and feels secure. Engineered mesh, a heel overlay and dynamic support throughout the midfoot all work together to provide a smooth, stable ride.", "Part of the N354 family that nods to Steve Prefontaine's fastest mile, the Nike Huarache Type is based on one of the most legendary sneakers from Nike's All Conditions Gear line-up, the Nike Mowabb. Using an adjustable approach to the Huarache system, this shoe is an exploration of fit and comfort.", "Bring the past into the future with the Nike Air Max 2090, a bold look inspired by the DNA of the iconic Air Max 90. Brand-new Nike Air cushioning underfoot adds unparalleled comfort while transparent mesh and vibrantly coloured details on the upper are blended with timeless OG features for an edgy, modernised look.", "The Nike Odyssey React Women's Running Shoe provides crazy comfort that lasts as long as you can run. Its Nike React foam cushioning is responsive yet lightweight, durable yet soft. This attraction of opposites creates a sensation that not only enhances the feeling of moving forwards, but makes running feel fun, too.\u00c2\u00a0The upper of the Nike Odyssey React is built with a lightweight, breathable fabric instead of the premium Flyknit featured on the Nike Epic React.", "Make your head-turning journey to the top comfortable. Built strong and sleek, the LeBron 7 QS features a mix of materials on the upper for a look that lasts. Metal accents and multiple LeBron crests celebrate a king, while full-length cushioning graces your every step.", "The iconic Nike Air Zoom Pegasus 36 returns with more perforations and engineered mesh in the upper, which strategically target breathability across high-heat areas. A slimmer heel collar and tongue reduce bulk without compromising comfort, while exposed Flywire cables give you a snug fit at higher speeds.", "The Nike Air Max 90 Premium pays tribute to the steadfast Royal Mail workers in London. Nike Air cushioning provides comfort for all-day wear, while fabric and leather on the upper combine breathability with durability. Details like crowns on the laces and colours inspired by Royal Mail uniforms nod to those who deliver day in and day out.", "Boasting a bold 720 Air unit, the Jordan Air Latitude 720 offers 360 degrees of cushioning and then some. This attention-grabbing, AJ 8\u00e2\u20ac\u201cinspired shoe is a celebration of '90s Jordan heritage, big-time Air and street-ready comfort.", "Featuring the same Tuned Air technology that originally put it in the sneaker history books, the Nike Air Max Plus III updates the look with TPU fused to the upper while paying homage to the iconic colour fade.", "The Nike Air Zoom Vomero 14 takes responsive cushioning to the next level. A full-length cushioning unit works with Nike React technology to deliver a super-snappy, smooth ride. Up top, the sleek design feels durable and supports your stride through every mile.", "The Nike Renew Fusion blends stability, cushioning and durability for high-impact training sessions. A foam sole cushions heavy-weight, high-paced activities, while a midfoot cage locks your foot down to a flat, wide base for stability.", "The iconic Nike Air Zoom Pegasus 36 returns with more perforations for more cooling. An engineered mesh and synthetic upper strategically targets breathability across high-heat areas. A slimmer heel collar and tongue reduce bulk without compromising comfort, while exposed Flywire cables give you a snug fit at higher speeds.", "The Nike Tiempo Legend 8 Academy IC takes the legendary touch of calfskin leather and adds cushioning that equips you for the court or the streets. A mesh tongue and collar lining add breathability and street style.", "The NikeCourt Air Max Wildcard delivers the comfort you need to hit hard and move fast on the court. A Max Air unit under your heel cushions every step, while an innovative Lunarlon midsole provides a springy underfoot sensation and extra stability.", "The Nike SB Air Zoom Bruin Edge puts a DIY spin on an iconic skate shoe. Frayed stitching, exposed foam and a mix of materials create a patched look that's built to perform. Stencils are included so you can take the DIY look to the next level.", "The Air Jordan 7 Retro celebrates MJ's championship legacy with a reissue of his 7th game shoe, the one he famously wore to gold-medal glory.", "The Nike Air Max 95 Premium retains its iconic look, but is sleeker, lighter and geared for 24/7 comfort and style. It features inspiration from the human body itself. The midsole represents the spine, graduated panels are the muscles, the lace loops are the shoe's ribs and the fabric tongue is its skin.", "The Nike Air Force 1 GORE-TEX \u00c2\u00ae retools the classic Air Force 1 with a street-approved design that meets the standards of GORE-TEX \u00c2\u00ae waterproof technology. It features water-wicking flat laces, a GORE-TEX \u00c2\u00ae bootie and GORE-TEX \u00c2\u00ae branding on the heel.", "The Nike Air VaporMax 2019 Premium Shoe wraps your foot in stretchy woven material that gives structure and support to your stride. Underfoot, the lightest, most flexible Air Max cushioning to date gives a super-bouncy sensation that rivals running on air. Metallic Silver accents spark a sense of style.", "The Air Jordan 8 Retro recaptures the memorable look of the '93 release. It's made from real and synthetic leather and has the same distinct and daring design that made the original such a '90s favourite.", "Inspired by running silhouettes from the early 2000s, the Nike Zoom 2K is reimagining the golden age of running sneakers. A classic Zoom bag takes it back to where it began, while the rubber wings that wrap the outsole push the design into the future.", "In a fluid design that speaks the language of fast, the Nike Air Zoom Winflo 6 has less bulk and a more sculpted profile than previous versions. It has 2 Zoom Air units for targeted responsiveness in the forefoot and heel. On the top, engineered mesh optimises breathability.", "The Nike Pre-Love O.X. Women's Shoe features a running-inspired profile and lightweight foam cushioning for all-day comfort.", "The Nike Air Max 90 SE Women's Shoe combines classic design lines with rich materials for an elevated look that's true to the original.", "The Nike Blazer Low LE refines the old-school basketball icon with updated details.", "The Nike React Kenny 55 lets you rep the classic and the cutting edge at once. The lines are borrowed from OG Nike running shoes like the Internationalist, rooting you to sneaker heritage, while responsive React cushioning adds modern comfort that feels unbelievably soft. Its 2-tone marble print speaks to the duality of the real world. 1 part yin, 1 part yang. Everything in perfect balance.", "Kyrie's ability to make quick, sharp cuts while handling the ball gives his game an unrivalled edge. Loaded with responsive cushioning, the Kyrie Low 2 features a curved outsole and traction that wraps up the sides, ideal for quick players who continually work the angles to break down the defence.", "The Nike Free Metcon 3 combines Nike Free flexibility around the forefoot with Metcon stability in the heel to help you get the most out of your training session.", "The Nike React Element 55 SE borrows design lines from heritage runners like the Nike Internationalist, adds reflective graphics, then places it all on Nike React technology.", "The Nike Air Max 90 stays true to its OG running roots with the iconic Waffle sole. Details and colours nod to the classic Lahar Escape Boot, delivering a vintage look from the wild.", "Inspired by the Vaporfly, the Nike Zoom Fly 3 gives distance runners race-day comfort and durability. The power of a carbon-fibre plate and responsive cushioning keeps you in the running mile after mile.", "The Nike Benassi JDI Slide features a soft foam midsole and plush, jersey fabric lining the strap. Its heritage logo adds the perfect amount of flash.", "The Nike M2K Tekno draws inspiration from the Monarch franchise and pushes it into the future with space-age detailing. Its layered upper mimics the design of the OG Monarch, while the chunky outsole draws on the beloved Monarch IV.", "\"Nodding to Hawkins High from the hit TV show \"\"Stranger Things\"\"", "The Nike Zoom Pegasus Turbo is the Pegasus you know and love with major upgrades for speed. The featherlight upper looks as fast as it feels, while the revolutionary Nike ZoomX foam that was designed for elite Nike runners during the Breaking 2 attempt brings record-breaking speed and responsiveness to your daily training runs.", "Paul George's moon shot took him from Palmdale to basketball stardom, and now he's heading to new heights with clouds under his feet. Built on an outsole inspired by moon craters, the PG 3 combines sensational traction with responsive Zoom Air cushioning that helps you move seamlessly between offence and defence.", "The Nike Air Force 1 '07 SE incorporates the same hoops-inspired performance features of the 1982 original while adding details that call to mind the 2000s aesthetic.", "Featuring a fixed strap over the top of the foot, the Jordan Break Slide features durable synthetic leather and lightweight foam cushioning for underfoot comfort.", "An all-time favourite among players and sneakerheads, the Air Jordan 12 Retro features full-length Zoom Air cushioning and full-grain leather styled with distinct radial stitch lines.", "The Kyrie 4 Men's Basketball Shoe is ultra-flexible, responsive and supportive. It's designed for Kyrie Irving's sudden changes of direction and smooth yet rapid playing style.", "The Nike Air Max 720 goes bigger than ever before with Nike's tallest Air unit yet, offering more air underfoot for unprecedented, all-day comfort. Has Air Max gone too far? We hope so.", "The Nike Air Max 97 Men's Shoe keeps the sneaker favourite going strong with the same design details that made it famous: water-ripple lines, reflective piping and full-length Max Air cushioning.", "The Nike Joyride Run Flyknit is designed to help make running feel easier and give your legs a day off. Tiny foam beads underfoot contour to your foot for cushioning that stands up to your mileage.", "Designed for speed, stability and comfort, the Nike Air Ghost Racer was a hit 20 years ago\u00e2\u20ac\u201dand now it's back in a stitch-for-stitch remake. And though it has all the same features as the original, it might be even better than you remember.", "The Nike Air Max Plus III combines ultra-comfortable Tuned Air Technology with an energetic silhouette made famous by its predecessors. The III updates the look with TPU details fused to the upper while paying homage to the iconic colour fade.", "The Nike Air Zoom Vomero 14 takes responsive cushioning to the next level. The full-length Zoom Air unit works with Nike React cushioning to deliver a super-snappy, smooth ride. On the top, the sleek design is engineered to support your stride.", "Ideal for runs up to 3 miles, the Nike Free RN Flyknit 3.0 delivers a lace-free design so you can slip in and hit your stride. An updated flex groove pattern and modified midsole foam provides more flexibility than its predecessor, creating a barefoot sensation with every step. A mix of supportive and stretchy yarns are zonally placed for comfort that moves with your foot.", "The Nike SB Zoom Stefan Janoski Canvas RM Premium pairs a minimal look with a modern fit. It has been updated with a new, plush sockliner and a flexible outsole for better boardfeel right out of the box.", "The Nike SB Blazer Low XT Men's Skateboarding Shoe retools the classic profile for extra-tough sessions, adding lightweight impact protection.", "Featuring soft, lightweight cushioning, the Air Jordan 10 Retro offers performance-inspired comfort with iconic Air Jordan detailing.", "The Nike x Undercover Air Max 720 brings Jun Takahashi's vision of chaos and balance to Air. 360 degrees of cushioning and a breathable design capture Takahashi's view of the future of fashion.", "Designed specifically for a woman's foot, the Nike Air Max Dia delivers a lifted look and airy aesthetic. The minimal upper modernises the silhouette, while the Max Air unit is amplified even further by an exaggerated midsole for a boost of style.", "Made for athletes to relax in pre- and post-matches, the Jordan Hydro 8 works as an everyday, anytime slide. It offers the plush cushioning of a Solarsoft foam footbed and an adjustable strap.", "The Nike Joyride Dual Run is designed to help make running feel easier and give your legs a day off. Tiny foam beads underfoot contour to your foot for cushioning that stands up to your mileage.", "The Nike Xarr sets you up to take on the elements in style. It's crafted with a water-resistant leather upper to help keep you dry and a rubber outsole to combat the season's wet conditions. With intricate detailing and a stylised tongue cover, it's a fresh new look with lots of attitude.", "The Nike Air Max 270 React uses lightweight, layered, no-sew materials to create a modern style that looks as good as it feels.", "The Nike Air Max 90 Essential Men's Shoe keeps the classic design lines of the 1990 original and the cushioning that made it famous.", "The Nike In-Season TR 9 is light, stable and features deep, comfortable footbed for superior impact absorption and energy return throughout your entire workout.", "With more Air underfoot, the Jordan Aerospace 720 delivers next-generation comfort with signature Jordan heritage.", "With a stretchable knit in the upper, the Nike Flex RN 2019 makes every run comfortable as it expands and contracts along with your foot. Dual-density foam gives you cushioned comfort for pounding out the miles, while grooves in the outsole provide flexibility from heel to toe.", "The Nike Wildhorse 6 keeps it stable, secure and lightweight on the trail. An updated outsole delivers the traction you need, while a foam midsole keeps you cushioned on your run.", "Taking both height and craft to new levels, the Nike Air Force 1 Sage Low features a platform midsole and a pared-down upper for a bold yet feminine look.", "The Nike Air Max Dia SE features sleek lines and a sheer upper that combine classic Air Max elements into a lightweight, comfy and versatile icon. Together with its smart toe-down profile and extra lift, the Nike Air Max Dia SE offers an ever-bigger expression of Nike Air.", "The Nike Air Force 1 '07 LV8 has the same hoops-inspired performance of the '82 OG plus fresh new patterns for a sleek look that turns heads.", "Hiking shoes don't need to be big and bulky, and the Nike Air Skarn proves it. Originally launched in 1997, this reintroduction of a classic is lightweight, comfortable and tougher than it looks.", "The Air Jordan 5 Retro for women gives a colourful makeover to one of MJ's most memorable game shoes. Featuring iconic fighter plane-inspired midsole sculpting and moulded lace toggle, this version flashes an all-over reflective rainbow print for some bold colour and energy.", "The Nike Phantom Venom Academy FG is engineered for powerful, precise strikes that win games. Ridges on the instep create spin to control the flight of the ball, while the firm-ground plate provides the traction needed to unleash at any moment.", "Nike Zoom Fly Flyknit Men's Running Shoe is built for record-breaking speed. The Flyknit upper delivers ultra-lightweight support that fits like a glove.", "Part shoe, part sandal, the Nike Air Max FF 720 takes you into a new realm of Air. Built specifically for a woman's foot, it features premium leather on heightened foam for bold versatility and unbelievable comfort. Cinch it up with its unique drawcord system and make the streets your runway.", "Lounge wherever you go and let the Nike Joyride CC3 Setter take you into a new world of comfort. It places your feet directly on soft foam and innovative bead-pods for extra comfort, while exaggerated textures add unrivalled depth to your edgy attitude.", "An icon hits the paths less travelled in the Nike Air Zoom Pegasus 36 Trail. Perforated mesh upper offers breathable comfort, and double Zoom Air units cushion your stride. Outsole lugs optimise traction when running uphill.", "The Nike Phantom Venom Academy TF is engineered for powerful, precise strikes that win games. Ridges on the instep help create spin to control the flight of the ball. The sole provides the turf traction needed to unleash at any moment.", "The Nike Metcon 5 AMP arms you with stability for heavy lifting and traction for sprints during high-impact training. It combines breathability and durability to be your secret weapon in the gym.", "The Nike React Element 55 borrows design lines from heritage runners like the Nike Internationalist, then places it all on Nike React technology.", "\"The Nike Air Max 90 Premium is built in honour of celebrated Parisian bakers who define French cuisine and hard work. Nike Air cushioning under your feet feels softer than freshly baked brioche while a durable upper features a French flag and baking champion's wheat laurel on opposite heels. \"\"Fresh baked daily\"\" is written on the liner", "The Nike Air Streak Lite puts minimalist style back into the spotlight. Originally created by Nike's first Japanese creation team in 1995, this lightweight, sleek silhouette pushes footwear to a different space.", "Breaking new ground for athletes, KD provides unprecedented access to his life through his YouTube channel. It's this type of authentic connection that KD wanted to create with his fans when he first partnered with YouTube in 2017. In celebration of his channel, the KD12 'YouTube' features co-branded graphic hits on the tongue and heel that celebrate two icons coming together to change the game.", "The Nike Odyssey React Men's Running Shoe provides crazy comfort that lasts as long as you can run. Its Nike React foam cushioning is responsive yet lightweight, durable yet soft. This attraction of opposites creates a sensation that not only enhances the feeling of moving forwards, but makes running feel fun, too.\u00c2\u00a0The upper of the Nike Odyssey React is built with a lightweight, breathable fabric instead of the premium Flyknit featured on the Nike Epic React.", "\"Breathability and inspiration come together in the Nike Air Zoom Pegasus 36 Premium Rise. A knit-in graphic repeating across the mesh and synthetic upper spells out \"\"Just Do It.\"\" in perforations. Strategically placed", "Drawing inspiration from the Monarch franchise, the Nike M2K Tekno combines real and synthetic leathers with textile for a layered look.", "The legend lives on in the Nike Air Force 1 Mid '07 Men's Shoe, a modern take on the icon that blends classic style and fresh, crisp details.", "Disrupt the universe in your Nike MX-720-818. Featuring materials inspired by spacesuits and quilted stitching on the upper, it takes the largest Air unit to date and blends it with the futuristic look of the final frontier. Mesh on the upper keeps your feet cool while the clear sole features the black and grey reminiscent of deep space.", "Bridging performance and style, the Nike Zoom Pegasus Turbo XX Women's Running Shoe combines a full-length ZoomX midsole with an upper re-imagined exclusively for women. This feather-light translucent upper pops with a racing-stripe print that looks as fast as it feels, while Nike ZoomX foam delivers revolutionary responsiveness. A transparent, soft TPU overlay wraps your midfoot for the fit you need.", "An icon trades pavement for path with the Nike Air Zoom Pegasus 36 Trail. A perforated mesh upper adds breathability, as double Zoom Air units underfoot cushion your stride. Opposing lugs on the outsole optimise traction on your uphill climbs.", "Designed for low-impact workouts and circuit training, the Nike Flex TR 9 pairs a breathable mesh and synthetic upper with a supportive platform designed for flexibility and traction.", "Ideal for runs up to 3 miles, the Nike Free RN 5.0 returns to its roots as a natural motion shoe. An updated flex groove pattern and modified midsole foam provides more flexibility than its predecessor, creating a barefoot sensation with every step. At the upper, breathable and stretchy mesh moves with your foot, while synthetic suede overlays provide stable support.", "The Nike Odyssey React Flyknit 2 Women's Running Shoe delivers a strategic combination of lightweight Flyknit and synthetic material for support just where you need it. Underfoot, Nike React cushioning delivers a soft, springy ride for a route that begs to be crushed.", "Clean lines, versatile and timeless\u00e2\u20ac\u201dthe people's shoe returns with the Nike Air Max 90. Featuring the same iconic Waffle sole, stitched overlays and classic TPU accents you've come to love, it lets you walk among the pantheon of Air.", "Designed specifically for a woman's foot, the Nike Air Max Dia LX delivers a lifted and airy aesthetic in a new, sleek shape. The minimal upper modernises your look, while the Max Air unit, surrounded by clear plastic, elevates your style.", "The Nike Air Max 270 React ENG combines a full-length React foam midsole with a 270 Max Air unit for unrivalled comfort and a striking visual experience.", "\"Designed and tested in Oregon, the Nike ACG Antarktik is a \"\"jacket\"\" for your foot. Its tough ripstop upper combines with a GORE-TEX lining to help keep your foot dry. All-new lug details use hard rubber for traction in all conditions.\"", "The Nike Air Max 720 goes bigger than ever before with Nike's tallest Air unit yet, which offers more air underfoot for unprecedented, all-day comfort. Details include bubble wrap accents and colours inspired by the natural world.", "The radiance lives on in the Nike Air Force 1 '07, the b-ball OG that puts a fresh spin on what you know best: crisp leather in an all-white colourway for a statement look on and off the court.", "Utilising the latest innovations and Nike's new iSPA project\u00e2\u20ac\u201dwhich touts a philosophy of improvise, scavenge, protect and adapt\u00e2\u20ac\u201dthe Nike iSPA React takes experimental expression and runs with it. Its low-top design features a tape-like upper nodding to the power of improvisation in the face of adversity.", "The Nike SB Zoom Stefan Janoski Canvas RM pairs a minimal look with a modern fit. It has been updated with a new, plush sockliner and a flexible midsole for better boardfeel right out of the box.", "The Nike Classic Cortez Women's Shoe is Nike's original running shoe, designed by Bill Bowerman and released in 1972. This version features a leather and synthetic leather construction for added durability.", "The Nike Metcon 5 is our most tuned Metcon yet. This means specific stability for heavy lifting, traction made for speed and durability where you need it. It even includes a Hyperlift insert that's compatible with all prior versions of the Metcon. Meet your secret weapon for weight-lifting and high-impact training.", "The NikeCourt Air Zoom Vapor X has an updated Dynamic Fit system with a full-length foot frame to provide ultimate lateral control. Its new generative outsole combined with a Zoom Air unit provides a lightweight, responsive feel on the court.", "According to the four-year cycle of the Chinese zodiac, the year of the mouse represents growth. Through the folk-art tradition of Jianzhi (paper cutting), the Kyrie 6 'Chinese New Year' honours major breakthroughs in Nike innovation with a graphic on the tongue. A watercolour-themed print completes the art-inspired CNY theme.", "The Nike Air Max 270 is inspired by two icons of big Air: Air Max 180 and Air Max 93. It features Nike's biggest heel Air unit yet for a soft ride that feels as remarkable as it looks.", "The Nike React Ianga takes elements from a jungle boot and mixes them with modern, technical details. Part of the 10th Collection, this shoe is a unique, military-inspired expression of the React family.", "\"Michael Jordan's stealthy creativity on the court earned him the nickname \"\"Black Cat\"\". The Air Jordan 13 Retro is based on the OG model and has responsive cushioning and premium materials. This version features special details to honour the Chinese New Year.\"", "Paul George is the rare high-percentage shooter who's also a coach's dream on D. Designed for his unrivalled 2-way game, the PG 4 EP unveils a new cushioning system that's lightweight, articulated and responsive, ideal for players like PG who go hard every play.", "Bounce like never before in the Zoom Rise, Nike Basketball's artfully crafted creation for the upwardly mobile. This mid-top provides containment and support up through the ankle, while an extra-large Nike Zoom Air unit under the ball of your foot redefines how responsive a shoe can be.", "The Nike Air Zoom Pegasus 36 FlyEase maintains everything you love about the Pegasus and adds a zip for effortless on and off. The no-tie lacing system adjusts easily for a secure feel as you tackle your miles.", "Nike Sportswear's first collaboration by the Hatfield brothers, the Nike Air Max 90 FlyEase combines the timelessness of Tinker's original design with Tobie's FlyEase technology. The heel collapses when you step in then snaps back into place, providing quick, easy access to one of history's most iconic sneakers.", "Bring a new point of view to off-court culture in your Nike Air Max 720 Waves. Its low-profile stance showcases Nike's tallest Air unit to date while its D/MS/X design mixes culture with sport, letting you enter a fresh dimension of hoops style with unparalleled comfort.", "The Nike React Element 55 is a balanced blend of classic design and forward-looking innovation. Nike React foam delivers lightweight, bouncy comfort, while rubber outsole pods and an exaggerated outsole offer a cutting-edge look that begs a reaction.", "The Nike Air Max 720 goes bigger than ever before with Nike's tallest Air unit yet, which offers more air underfoot for unimaginable, all-day comfort. Has Air Max gone too far? We hope so.", "Olivia Kim remembers NYC in the '90s. The city danced at all-night raves, and the fashion was bomb dot com. The Nike x Olivia Kim AF-1 '07 captures the outrageous '90s rave spirit with a blue corduroy upper and glow-in-the-dark details.", "The Nike Air Zoom Terra Kiger 6 is built to take on wet and rocky trails. Lightweight in design, it features a sleeker look with a woven heel for a secure fit and feel.", "The Nike Zoom Pegasus Turbo 2 is updated with a featherlight upper, while energy-returning foam brings revolutionary responsiveness to your long-distance training.", "The Nike Air Zoom SuperRep is designed for circuit training, HIIT, short runs and other fast-paced exercise. Zoom Air cushioning in the forefoot combines with a wide, stable heel to keep you moving and lifting comfortably.", "The soft upper of the Nike Mercurial Superfly 7 Academy IC wraps your foot for a second-skin fit, while the rubber outsole helps supercharge traction on the court or street.", "The Air Jordan 5 Retro brings back the original that was inspired by WWII fighter planes, featuring a mid-top profile and synthetic leather. An inner-sleeve creates a snug, comfortable feel.", "The Nike React Element 55 SE borrows design lines from heritage runners like the Nike Internationalist, then places it all on Nike React technology.", "NYC in the '90s\u00e2\u20ac\u201dif you spent much time in one of the many neighbourhoods, you'd hear SUVs driving around bumping Jamaican dancehall music at full blast. The Nike x Olivia Kim Air Max 98 celebrates the music and culture of NYC as remembered by designer Olivia. The fresh red-yellow-green take on the iconic Air Max 98 captures the vibrancy of the city's Rastafarian community.", "Designed to make fast go faster, the Nike Zoom Gravity is built to take you from quick tempo runs to winning races. Snappy forefoot propulsion and grippy, multi-surface traction combine to maximize your stride.", "Paul George's moon shot took him from Palmdale to basketball stardom, and now he's heading to new heights. This space-themed version of the PG 3 offers sensational traction, springy responsiveness and lightweight containment for seamless moves between offence and defence.", "The lightweight Nike Air DSVM gives you all-day comfort and street-ready style in a modern take on a classic silhouette. An adjustable strap lets you change up the fit for a look that's sure to turn heads.", "The legend lives on in the Nike Air Force 1 '07 Men's Shoe, a modern take on the iconic AF-1 that blends classic style and fresh details.", "Utilising the latest innovations and Nike's ISPA project\u00e2\u20ac\u201dwhich touts a philosophy of improvise, scavenge, protect and adapt\u00e2\u20ac\u201dthe Nike ISPA Air Max 720 delivers smooth cushioning. It features an extra-large air unit, providing support along with innovative details inspired by modern life in the city.", "The Nike SB Dunk High Pro pairs iconic Dunk style with a high-top design for a fresh look. A Zoom Air unit in the heel and a padded tongue create a comfortable fit that's made to skate.", "The Nike Air Zoom Pegasus 36 FlyEase (Extra-Wide) maintains everything you love about the Pegasus and adds a zip for effortless on and off. The no-tie lacing system adjusts easily for a secure feel as you tackle your miles.", "Made with soft, pliable foam infused with grooves for superb airflow, the Nike Solarsoft Women's Flip Flop is a must-have in warm weather.", "The Nike Legend React Women's Running Shoe features a breathable upper with synthetic overlays that enhance durability while smooth, responsive foam cushions every step as you run.", "The Nike Air Max 2017 Men's Shoe features a seamless Flymesh upper for support and breathability. Iconic Max Air cushioning provides a lightweight, smooth feel with each step, whether you're running your three-miler or running your day.", "Taking inspiration from the archives, the NikeCourt Royale Men's Shoe brings retro tennis style in a modern package for everyday comfort.", "The Nike ZoomX Vista Grind SP is proof of the improbable, bringing you to a bold new place that's rebellious and forward thinking. Recycled foam from the Nike ZoomX family plus lightweight fabric and durable overlays come together to give the shoe a modern look and classic comfort.", "Featuring the first full-length Zoom Air unit in NikeCourt history, the NikeCourt Air Zoom Zero delivers exceptional responsiveness and great court feel. Its fabric and synthetic upper with a customisable lacing system offers second-skin-like comfort.", "The Nike Tiempo Legend 8 Club IC takes the touch of textured synthetic leather and adds a grippy rubber outsole for multi-directional traction.", "Crisp and clean with the perfect amount of lift, the Nike Air Max Dia is designed to elevate her every day. The minimal upper features no-sew skins and breathable mesh for an airiness that matches the swirled iridescent patterns. Boosting style and comfort, the Max Air unit underfoot joins with the super-soft foam midsole.", "Designed specifically for a woman's foot, the Nike Air Max Dia Winter delivers a lifted and airy aesthetic in a sleek shape. The minimal upper modernises the look, while a Max Air unit is amplified even further by an exaggerated midsole for a boost of style.", "Designed to make fast go faster, the Nike Zoom Gravity is built to take you from quick tempo runs to winning races. Snappy forefoot responsiveness and grippy, multi-surface traction combine to optimise your stride.", "\"Soft to the touch, the Nike Epic Phantom React lets go of laces for a slip-on style that gets you up and running in no time. A snug, secure, sock-like fit within a breathable Flyknit and synthetic upper feels as though the Phantom \"\"disappears\"\" as you run.\"", "Be bouncy and buoyant in the Nike Air VaporMax Flyknit 3. Inspired by high fashion, the upper features flowing lines of breathable, stretchable Flyknit construction. Revolutionary VaporMax Air technology keeps a spring in your step with toe-to-heel cushioning.", "The NikeCourt Zoom Cage 3 offers zoned durability with a lightweight, pliable overlay that moves with you. A Zoom Air unit in the heel delivers a low-profile ride with responsive cushioning.", "The Nike Zoom Pegasus Turbo 2 Hakone is updated with a feather-light upper, while energy-returning foam brings revolutionary responsiveness to your long distance training.", "The Nike Tiempo Legend 8 Academy MG takes the legendary touch of calfskin leather and adds a versatile multi-ground plate for traction on natural- and artificial-grass surfaces.", "An ideal performer for runs up to 3 miles, the Nike Free RN 5.0 AW returns to its roots as a motion shoe. A stripped-down upper with single-layer mesh stretches and moves with you. Less foam in the midsole makes it easy to hit the ground running.", "The Air Jordan 1 Mid SE maintains the timeless appeal of the OG AJ1, revamped with fresh colours and premium materials. Built with a lightweight Air-Sole unit and classic design lines, it captures the essence of the original through a modern lens.", "Designed with a zip closure secured by a midfoot strap, the Nike Revolution 5 FlyEase lets you suit up for your run quickly and easily. Soft foam cushions your stride, while a minimalist design fits in just about anywhere.", "Jun Takahashi's vision of chaos and balance comes to life in the modern age. The Nike x Undercover React pairs a classic welly with several technologies to create a shoe unlike any other.", "Made from durable nylon canvas and synthetic leather, the Nike SFB Gen 2 20cm (approx.) is a lightweight tactical boot designed for speed and flexibility over rough terrain. Inspired by Nike Free technology, the flexible sole is equipped with an aggressive traction pattern for multi-surface grip and an internal rock shield to help prevent punctures.", "The Nike Air Max 270 SE is inspired by 2 icons of Air: the Air Max 180 and the Air Max 93. It features Nike's biggest heel Air unit yet for a super-soft ride that feels as comfortable as it looks.", "In a fluid design that speaks the language of fast, the Nike Air Zoom Winflo 6 has less bulk and a more sculpted profile than previous versions. It has 2 cushioning units for targeted responsiveness in the forefoot and heel. Up top, mesh in the upper provides breathability.", "Designed for running but adopted by the street, the Nike Air VaporMax 2019 features the lightest, most flexible Air Max cushioning to date. A stretch woven material wraps your foot for lightweight support and stability, while an external reinforcement in the heel secures the back of your foot.", "The Nike React Vision is a story of surreal comfort. Layered textures, shapes and vivid colours are combined in a design influenced by the exaggerated world of our dreams, while React foam and an ultra-plush tongue provide surreal comfort. DIMSIX on the tongue tab rises high off the collar to add just a touch of Nike's own origin story.", "Drawing inspiration from four classic Air Jordans, the Jordan Mars 270 is a modern-day remix that offers a heavy dose of heritage, plus an enormous Max Air unit and springy foam for non-stop comfort.", "Originally released in 1979, the Nike Daybreak is a blast from the past. Featuring the same rubber Waffle outsole and nylon upper, it gives you true vintage style.", "\"Inspired by Phil Knight's \"\"Shoe Dog\"\"", "The Air Jordan 1 Jester XX Low knows not to take things too seriously, except comfort. A real and synthetic leather upper is supportive where it counts, while the exaggerated midsole adds a little altitude with responsive cushioning.", "The Nike Air Max 98 brings back retro Air Max style with contemporary comfort innovations. A full-length Max Air unit gives total cushioning in every step.", "A mash-up of Pegasus' past, the Nike P-6000 Icon Clash features breathable mesh with horizontal and vertical overlays for a 2000s running look that is as striking as, say, a majestic winged horse. Drawing on the design of the Nike Pegasus 25 and 2006, its running aesthetic meets all-day comfort for the streets.", "With exceptional cushioning and modern detailing, the Nike Air Max 200 radiates cool while providing extreme comfort. Its design is inspired by patterns of energy radiating from the earth\u00e2\u20ac\u201dlike the flow of lava and the ocean's rhythmic waves.", "Since bursting onto the basketball scene in 1996, the Air Jordan 11 Retro Low Men's Shoe has been one of the most beloved Jordan designs ever. Signature details and Nike Air cushioning combine for the ultimate fusion of style and comfort.", "First released in the late '90s, the Nike Air Max Triax 96 SP now returns as a cult classic. Featuring the same iconic shape and large-volume visible Air unit, it brings back the classic comfort and style you remember.", "Never worry about laces in the Nike Free RN Flyknit 3.0. This remix leaves them out\u00e2\u20ac\u201dletting you slip in quickly and hit your stride even faster. Supportive yarns join stretchy Flyknit for a lightweight upper that feels like a second skin. Heel-to-toe grooves in outsole move and bend with every stride.", "The Nike Air Max Bella TR 2 is a versatile trainer for weight training and station workouts. It's crafted from breathable fabric and features comfortable cushioning underfoot with a flat outsole for stability during workout sessions.", "The stretchable knit upper of the Nike Flex RN 2019 wraps you in softness as it expands and contracts with your foot. Dual-density foam layers supply durable cushioned comfort, while grooves on the outsole give you heel-to-toe flexibility.", "Inspired by the Vaporfly, the Nike Zoom Fly 3 Premium gives distance runners race-day comfort and durability. The power of a carbon-fibre plate keeps you in the running mile after mile.", "The Nike Phantom Vision Academy Dynamic Fit MG brings the fierce precision of street play to the pitch. A foot-hugging sleeve has a custom feel and the Ghost Laces system tights with 1 pull and is hidden for a bigger striking surface.", "The NikeCourt Air Max Vapor Wing MS is the perfect pairing of style and comfort for your match. Translucent textile shows off the technology within, while rubber on the toe increases durability. An Air Max unit provides legendary, lightweight cushioning.", "The 2003 icon returns with new upgrades. Fearless on the streets, the Nike Shox TL Nova takes mechanical cushioning to the next level. A modernised upper combines with Nike Shox columns for a new era.", "Inspired by the early 2000s original, the Nike React Presto puts an exaggerated spin on an unconventional icon. Nike React foam delivers an expressive look with a lightweight, bouncy feel and a whole lot of personality.", "Ready for the toughest workouts, the Jordan Trunner NXT features incredibly responsive cushioning and a breathable, lightweight upper.", "The NikeCourt Air Max Wildcard delivers the comfort you need to hit hard and move fast on the court. A Max Air unit under your heel cushions every step, while an innovative Lunarlon midsole gives you a springy underfoot sensation and extra stability.", "The legend lives on in the Nike Air Force 1 '07 SE. This fresh take on an icon gives you classic style while playing up the AF-1's versatility with new colours and materials.", "The Nike Air Zoom Structure 22 Women's Running Shoe looks fast and feels secure. Engineered mesh, a heel overlay and dynamic support throughout the midfoot all work together to provide a smooth, stable ride.", "Featuring a full-length foam midsole and VaporMax Air unit, the Nike Air VaporMax 360 gives you remarkable underfoot comfort with bold 2000s style inspired by the Air Max 360.", "Originally released in 1994, the Nike Air Max2 Light returns as a near-exact replica of the iconic runner with style for the street. Its mesh and synthetic upper, moulded heel and Max Air unit honour the OG, while the soft foam midsole optimises all-day comfort.", "The Nike Benassi Slide features a lined upper with a bold logo for plush comfort and an athletic look. A foam midsole and outsole provide lightweight impact protection.", "The Nike TiempoX Lunar Legend VII Pro Turf Football Boot features lightweight foam cushioning and a premium leather construction for a flexible fit and dominating touch when playing on turf pitches.", "The Nike SB Blazer Low GT pairs a supportive feel with lightweight, responsive cushioning for everyday use. Just like Grant Taylor, it blends contemporary style with old-school traditions.", "Building on the 360-degree Flyknit innovation of the 12, the Nike Mercurial Vapor 13 Elite FG adds a Nike Aerowtrac zone to the forefoot and a slightly stiffer chassis to help supercharge traction. Inside, an insole with NikeGrip technology provides maximum interior traction underfoot and lightweight cushioning.", "The Nike x Carhartt WIP Air Max 95 features reflective details and neon pops of colour. Carhartt WIP materials help construct the durable upper of a new take on the first sneaker with visible forefoot Nike Air.", "The bold silhouette of Nike Air lifts the Nike Air Max 270 React to new heights, while the Nike React foam midsole delivers exceptional cushioning. Imagine all-day comfort with unstoppable style.", "The Nike Zoom Vomero 5 SE SP wraps your foot in breathable support. A combination of durable synthetic leather and breathable mesh stands ready for the rigours of your day. Soft foam and Zoom Air cushioning deliver lightweight comfort for a smooth ride.", "The Nike Odyssey React Flyknit 2 provides a strategic combination of lightweight Flyknit construction and synthetic material for support. Underfoot, Nike React cushioning delivers a soft, springy ride for a route that begs to be crushed.", "Find unstoppable comfort in the Nike Air Max 270. The eye-catching Max Air 270 unit and Nike React foam midsole deliver cushioning that moves with you. A soft and minimal collar contours to your heel for an amazing fit. A glow-in-the-dark colourway celebrates the New Year.", "The Nike Metcon 5 is the most tuned Metcon yet. This means specific stability for heavy lifting, traction made for speed and durability where you need it. It even includes a Hyperlift insert that's compatible with all prior versions of the Metcon. Meet your secret weapon for weight-lifting and high-impact training.", "The Nike M2K Tekno Shoe draws inspiration from the Monarch franchise and pushes it into today with a futuristic heel counter and plush tongue for additional comfort.", "The Nike React Element 55 SE borrows design lines from heritage runners like the Nike Internationalist, adds premium details and places it all on Nike React technology.", "The Nike Phantom Vision Club Dynamic Fit FG brings the fierce precision of street play to the pitch. A foot-hugging Dynamic Fit collar combines with targeted texture for precision to create a boot for the finishers, the providers and the battlers of tomorrow's game.", "LeBron works hard in the offseason, getting stronger and fine-tuning his already devastating skills. Inspired by his dedication and commitment to inclusivity, the Soldier 13 SFG combines LeBron-tested cushioning, containment and support with a wide, flexible collar and lace-free closure that lets all players get in and out of the shoe with ease.", "The Air Jordan 1 Mid Shoe is inspired by the first AJ1, offering OG fans a look at how far the Jordan brand has come since 1985.", "The Nike Kawa Shower Men's Slide is designed to help feet recover after competition. A textured Solarsoft footbed and flexible foam outsole offer lightweight comfort.", "The Nike Air Force 1 SP adds a shiny metallic finish to the details that made the original an icon.", "Nothing as fly, nothing as comfortable, nothing as proven. The Nike Air Max 90 stays true to its OG running roots with the iconic Waffle sole, stitched overlays and classic TPU details. Classic colours celebrate your fresh look while Max Air cushioning adds comfort to the journey.", "Built with a carbon-infused nylon plate inspired by the VaporFly 4%\u00e2\u20ac\u201dour most efficient marathon shoe ever\u00e2\u20ac\u201dthe Nike Zoom Fly Men's Running Shoe is the perfect response to the demands of your toughest tempo runs, long runs and race days.", "The Nike MX-720-818 uses materials inspired by space suits for a futuristic take on classic Air Max DNA.", "Responsive and supportive, the Kyrie 5 is made with a soft midsole for responsive cushioning and a curved outsole for multi-directional traction.", "An ideal performer for runs of up to 3 miles, the Nike Free RN 5.0 returns to its roots as a running shoe. A stripped-down upper with single-layer mesh is stretchy to feel like a second skin. The lightweight midsole with less foam makes it easy to hit the ground running.", "The LeBron 17 harnesses LeBron's strength and speed with containment and support for all-court domination. It features a lightweight mix of knit and heat-moulded yarns that gives each one a durable look and feel. Combined cushioning provides LeBron with the impact support and responsive energy return he needs to power through the long season.", "The legend lives on in the Nike Air Force 1 Mid '07 Women's Shoe, a modern take on the icon that blends classic style and fresh, crisp details.", "Designed specifically for a woman's foot, the Nike Air Max Dia delivers a lifted look, an airy aesthetic and a sleek shape. The minimal upper modernises the look, while the Max Air unit, surrounded by clear TPU, is amplified even further by an exaggerated midsole for a boost of style.", "The Nike Air Max 98 features the OG design lines that were inspired by the walls of the Grand Canyon while adding bursts of fresh colour to the upper. The fluid, textured look and full-length Nike Air cushioning set you apart from the pack.", "The Nike Air Max Tailwind IV gives a new look to the '90s classic. Max Air units give you comfort and style that last.", "The Nike Air Force 1 Shadow pays homage to the women who are setting an example for the next generation by being forces of change in their community. This sneaker reflects this ethos in its design with double the Swoosh, double the height and double the force.", "The Nike Benassi JDI BETRUE Slide creates lightweight comfort in a classic design, while the soft foam sole cushions your every step.", "The Nike Air Huarache Ultra Women's Sandal helps keep your feet cool and comfortable on warmer days.", "The Air Max 97 shook up the running world with its revolutionary full-length Nike Air unit. The Nike Air Max 97 remasters the original design with bold new colours and flashes of gold.", "Inspired by the Vaporfly, the Nike Zoom Fly 3 gives distance runners race-day comfort and durability. The power of a carbon-fibre plate keeps you in the running mile after mile.", "\"Soft to the touch, the Nike Epic Phantom React Flyknit is lace-free for a slip-on style that gets you up and running in no time. A snug, secure, sock-like fit within a breathable Flyknit upper feels as though the Phantom \"\"disappears\"\" as you run.\"", "Bring the past into the future with the Nike Air Max 2090, a bold look inspired by the DNA of the iconic Air Max 90. Brand-new Nike Air cushioning underfoot adds unparalleled comfort while transparent fabric on the upper is blended with timeless OG features for an edgy, modernised look.", "Kevin Durant always looks relaxed\u00e2\u20ac\u201duntil he attacks. His game is reserved yet explosive, difficult to guard and impossible to stop. The KD12 was built for his dominance and endless energy all game long, with the latest innovation in Nike Zoom Air technology.", "\"Soft to the touch, the Nike Epic Phantom React Flyknit is lace-free for a slip-on design that gets you up and out the door in no time. A snug, sock-like fit and breathable upper materials will make you feel as though the Phantom \"\"disappears\"\" as you run.\"", "The NikeCourt Air Zoom Vapor X has an updated Dynamic Fit system with a full-length foot frame to provide ultimate control. Its new generative outsole combined with a Zoom Air unit provides a lightweight, responsive feel on the court.", "Alyx founder and creative director Matthew M. Williams is known for his ability to push fashion into new spaces. His angle is simple: Combine the influence of his life in New York and California with the latest innovations. The Nike x MMW Joyride CC3 Setter runs with that idea, bringing you to a world of cushioning and comfort.", "Inspired by the chopping, cutting and rebuilding of custom cars and bikes, the Nike Signal D/MS/X overturns the idea of sportswear with style and attitude. With layered materials and intricate detailing, it uses innovations in an irreverent way that's more aesthetic than athletic.", "The iconic Nike Air Zoom Pegasus 36 returns with more perforations and mesh in the upper for targeted breathability across high-heat areas. A slimmer heel collar and tongue reduces bulk without compromising comfort, while exposed cables give you a snug fit at higher speeds.", "Designed in collaboration with Gilbert Baker, the Nike Air Max 720 BETRUE features a rainbow-coloured upper inspired by, and in celebration of, the LGBTQ community.", "The iconic Nike Air Zoom Pegasus 36 returns with more perforations and engineered mesh in the upper for targeted breathability across high-heat areas. A slimmer heel collar and tongue reduce bulk without compromising comfort, while exposed Flywire cables give you a snug fit at higher speeds.", "Featuring soft foam cushioning and lightweight, woven fabric in the upper, the Jordan Proto-Lyte is made for all-day, bouncy comfort.", "Jun Takahashi's vision of chaos and balance continues with the Nike x Undercover React Presto. An OG Presto design uses new details that pay homage to last season's collaboration, the React Boot.", "\"The Nike Air Max 90 honours the OG with a revamped design that replicates the initial 1990 release. A \"\"clean slate\"\" colourway celebrates the shoe's 30th anniversary with the iconic Waffle sole.\"", "The Nike Potential 3 Unisex Cricket Shoe delivers lightweight cushioning and superb grip on the field with a Phylon midsole and rubber outsole.", "Lounge wherever you go and let the Nike Joyride CC take you into a new world of cosy by placing your feet directly on the soft cushioning of its innovative bead-pods. Bold colour-blocking and exaggerated textures add unrivalled depth to your fun, edgy attitude.", "With DIY attitude and classic tennis shoe appeal, the Nike Drop-Type puts a raw, experimental edge on an iconic look. Featuring distinct lines that borrow from the NikeCourt series, an exposed foam tongue and N354 branding, it lets your shoes do the talking.", "\"Originally designed by Tinker Hatfield in 1990, the Air Max 90 has been re-imagined. Widely considered one of the biggest cross-cultural icons of the early '00s, this iteration pays tribute to the influential 2003 \"\"Snakeskin\"\" release with premium materials and a bold twist on the original.\"", "The Nike Air Max 97 keeps a sneaker icon going strong with the same design details that made its reputation from the beginning: water-ripple lines, reflective piping and full-length Max Air cushioning.", "Why not take the shot? Why not attack the full length of the court? Why not crash the boards and steal every ball and rain assists like water? The Jordan 'Why Not?' The Zer0.2 SE PF celebrates Russell Westbrook's calculated chaos by combining materials that work in lightweight harmony\u00e2\u20ac\u201dbecause, well, why not?", "The Nike Flex RN 2018 Women's Running Shoe delivers a flexible fit with a lightweight knit construction to help your runs feel free and easy.", "Built specifically for trails, the Nike Air Zoom Wildhorse 5 keeps you galloping over rough terrain in breathable, multi-layer fabric. A rock plate helps shield your foot, while a Zoom Air heel unit cushions your stride on and off the path.", "\"Named after the Japanese word for \"\"simplicity\"\"", "Featuring an internal 1/2 sleeve construction, the Air Jordan 1 Nova XX Shoe offers a snug fit without traditional laces. Underfoot, an Air-Sole unit at the heel provides lightweight cushioning that moves with you all day long.", "The Nike Air Force 1 '07 LV8 incorporates the same hoops-inspired performance features of the 1982 original while adding fresh design details for an updated look.", "Nike's first lifestyle Air Max lets you greet the streets with the soft, smooth and resilient ride of the Nike Air Max 270. The design draws inspiration from the Air Max pantheon, showcasing Nike's greatest innovation with its large window and fresh array of colours.", "The Air Jordan XXXIV PF continues the legacy of a cultural icon. Light, responsive and sculpted with aerodynamic precision, it combines a boldly unconventional midsole with herringbone traction to merge innovative and iconic design elements.", "The Nike SB Air Max Stefan Janoski 2 hugs your foot with a breathable textile upper. A Max Air unit in the heel cushions every step, while a flat rubber outsole optimises grip when you're on your board.", "Inspired by outer space flight, the Jordan Proto-Max 720 provides all-day comfort with a future-forward look. An outer shroud covers the sock-like bootie construction, while Nike Air cushions every step.", "Designed to stretch with your foot, the Nike Air Huarache Women's Shoe has remained a sneaker staple since its 1991 debut, when it changed the face of running footwear forever.", "The Nike Classic Cortez Shoe is Nike's original running shoe, designed by Bill Bowerman and released in 1972. This version features a leather and synthetic leather construction for added durability.", "From rain and mud to sunny afternoons, the Wildwood debuted in 1989 as a direct descendent of the Nike Escape. With design influence from the Pegasus, it was designed as an off-road sneaker meant to take you through rough terrain. The special sawtooth Waffle outsole was further proof that conquering bad weather didn't mean drabness.", "Nike's first lifestyle Air Max meets the softest, smoothest, most resilient foam yet in the Nike Air Max 270 React. The design draws inspiration from the Air Max pantheon, showcasing Nike's greatest innovation with its large window and fresh array of colours.", "The Nike Air Max 90 Women's Shoe honours its roots with a supportive upper and the excellent cushioning that made the original a favourite.", "Get your freak on in Giannis Antetokounmpo's debut signature shoe, Nike's first ever for the international basketball sensation. The Zoom Freak 1 has the extra-responsive cushioning, forefoot lockdown and multi-directional traction needed to complement his freakishly athletic game.", "Shane O'Neill put the same attention to detail into every aspect of his signature shoe as he does in his almost otherworldly skating. From the low-key perforated ventilation at the toe, to the double lacing option and the no-break-in remastered sole, the Nike SB Shane gets all the details right.", "Hoops in the park, Sunday BBQs and sunshine. The radiance lives on in the Nike Air Force 1 '07 Essential, the b-ball OG that puts a fresh spin on what you know best: crisp leather, bold colours and the perfect amount of flash to make you shine.", "Bring the past into the future with the Nike Air Max 2090, a bold look inspired by the DNA of the iconic Air Max 90. Brand-new Nike Air cushioning underfoot adds unparalleled comfort while transparent knit and vibrantly coloured textiles on the upper blend with timeless OG features for an edgy, modernised look.", "Designed with every woman in mind, the mixed-material upper features a plush collar, flashy colours and unique stitching patterns. Nike Air cushioning combines with the lifted foam heel for a modern touch, adding comfort and style to your journey.", "The LeBron x John Elliott Icon brings the clean and layered approach of a lifestyle shoe to a hardwood classic. Cushioning from the LeBron 8 combines with court-inspired details and translucent materials as a tribute to Elliott's favourite shoe in the series. The result: Power, unleashed.", "Utilising the latest innovations and Nike's ISPA project\u00e2\u20ac\u201dwhich touts a philosophy of improvise, scavenge, protect and adapt\u00e2\u20ac\u201dthe Nike ISPA Joyride Envelope delivers a futuristic shoe built for taking on the elements. Innovative details provide easy on and off and help support you in wet or warm conditions.", "Inspired by spacesuits, the Jordan Proto-React Z has a futuristic look with a fit and feel made for all-day wear. Responsive cushioning gives you more bounce with less weight, while an aeronautics-inspired shroud and snug bootie help keep you strapped in.", "Part of the N354 family that nods to Steve Prefontaine's fastest mile, the Nike Drop-Type Mid is inspired by classic tennis shoes in the NikeCourt family. With distinct design lines that borrow from the All Court 2, it puts a raw, experimental edge on an iconic look.", "Building on the 360 innovation of the 6, the Nike Mercurial Superfly 7 Elite FG Boot adds a Nike Aerowtrac zone to the forefoot and a slightly stiffer chassis to help supercharge traction.", "Be bouncy and buoyant in the Nike Air VaporMax Flyknit 3. The upper features flowing 2-tone lines of breathable, stretchable Flyknit construction for unique, street-ready style. Revolutionary VaporMax technology keeps a spring in your step with toe-to-heel cushioning.", "Redesigned for casual wear, the Nike Air Max 90 stays true to its '90s running roots with a rubber Waffle sole, stitched overlays and TPU plates. Hair-on leather and felted fabric colours combine with Max Air cushioning for a makeover that goes all out.", "The Nike Air Max 97 keeps a sneaker icon going strong with the same design details that made it famous: water-ripple lines, reflective piping and full-length Max Air cushioning.", "First debuted on the hardwood during one of the King's epic December showdowns, the LeBron 7 returns in familiar festive hues to celebrate the game and the season. Featuring the same supple Team Red upper and black accents as the original iteration, this limited-edition sneaker is expertly engineered for the street and arrives complete with the unmistakable Air iconic to the model.", "The Nike React Element 55 Women's Shoe borrows design lines from heritage Nike runners like the Internationalist, adds reflective graphics and then places it all on Nike React technology.", "Inspired by basketball, the Nike Blazer Low QS Flyleather features an innovative Flyleather upper for a premium look and bold graphics by artist Steven Harrington.", "The Nike Air Zoom Pegasus 35 is built for runners at every level, whether you're a seasoned veteran or just starting out.\u00c2\u00a0It features a breathable mesh upper with an out-turned collar for Achilles comfort. Down below, the cushioning has been updated with full-length Zoom Air for the first time ever, to deliver a smoother, more natural stride.", "The Nike Free TR Ultra is lightweight and flexible to be quick and adaptable for whatever workout you take on. The slip-on design has Flywire cables to securely hold your foot. Soft, flexible foam cushioning has a wider surface area for more stability.", "Named after the Japanese word for simplicity, the Nike Tanjun Women's Shoe offers an elegant, modern design for an elevated everyday look.", "The Nike Air Zoom Winflo 5 Men's Running Shoe provides a responsive ride and durable, multi-surface traction underfoot. Up top, engineered mesh delivers support and breathability where you need them, while an inner sleeve gives you a comfortable, sock-like fit as you hit your stride.", "The game has gone small, so bigs have to be faster, more agile and more versatile to stay relevant. Keeping pace with ever-evolving player needs, the Nike Air Force Max II provides the responsive cushioning that allows big players to keep crashing the boards and banging in the post, while helping them stay light and quick on the break.", "Join the hoops uprising in the AlphaDunk, one of Nike Basketball's bounciest game shoes to date. The revamped upper construction is light and supportive and a large cushioning unit spans nearly the entire forefoot, giving you all the responsiveness you can handle on the court.", "The soft upper of the Nike Mercurial Superfly 7 Academy TF Shoe wraps your foot for a second-skin fit, while the rubber outsole helps supercharge traction on turf.", "Designed in collaboration with Pat Peltier, the mind behind up-cycled vintage label Bandulu, the Kyrie 5 x Bandulu explores process, approach and technique. The brand's signature paint splatters give the shoe an expression that speaks to Kyrie's creativity and dedication to his craft\u00e2\u20ac\u201don and off the court.", "The Nike ZoomX Vista Grind brings you to a bold new place both rebellious and refined. It's comfort you can see and feel in a brand new silhouette.", "The Nike Air Max Impact infuses bold, expressive details into a design that's a beast on the court. Responsive cushioning helps soften hard landings, while the moulded heel clip and dual-strap system combine for a lightweight, locked-in feel.", "The Nike Renew Run keeps you moving with softer foam for a cushioned feel. Designed with the everyday runner in mind, this shoe delivers secure support and durable traction for comfort on the go.", "\"Drawing inspiration from Nike running shoes such as the Nike Zoom Vaporfly Elite, the Nike EXP-X14 SE Men's Shoe races off the track and onto the street with a fast design and shape. Nike React technology delivers lightweight durability and a smooth feel, while the layered upper showcases Flywire cables and a bold \"\"Just Do It\"\" tagline.\"", "The Nike Air Force 1 '07 Premium captures the iconic look of its 1982 predecessor, with full-length cushioning for comfort and premium detailing that honours the original. A rich mix of materials gives an eye-catching look that's ready to hit the streets.", "The Nike Tiempo Legend 8 Elite FG takes the legendary touch of premium kangaroo leather and adds foot-hugging Quad-Fit mesh in the lining and a wrap-around Flyknit tongue that feels supportive under your arch.", "The Nike Legend React Men's Running Shoe features a breathable upper with synthetic overlays that enhance durability while smooth, responsive foam cushions every step as you run.", "The Nike Phantom Vision Academy Dynamic Fit TF Artificial Turf Football Boot provides the precise touch to win small-sided glory, wherever the game finds you. Webbing on the laces provides lockdown while a textured instep is always ready to receive, turn and score.", "Making its debut in 1978 for the Honolulu Marathon, the Nike Air Tailwind was a revolution in cushioning. Now, a racing icon returns with the Nike Air Tailwind 79, featuring nearly original materials and colours, plus the Nike Air unit that made it a winner.", "The Jordan Jumpman 2020 PF delivers lightweight support for dynamic play on the court. A textile upper and secure midfoot webbing keep you moving freely during possessions.", "Fine-tuned with LeBron's ferocious game in mind, the LeBron 17 Low has a sleek, low-top design that features a powerful combination of impact-ready cushioning and responsiveness.", "Hoops in the park, Sunday BBQs and sunshine. The radiance lives on in the Nike Air Force 1 '07, the b-ball OG that puts a fresh spin on what you know best: crisp leather in an all-black colourway for a statement look on and off the court.", "As fresh as its first release, the Air Jordan 4 Retro remakes Michael Jordan's 4th signature shoe for today's streetwear savants. Suede and textile materials provide lightweight durability and support, while Nike Air cushioning offers comfort with every step.", "The Nike Benassi Women's Slide features a lined upper with a bold logo for plush comfort and an athletic look. A foam midsole and outsole provide lightweight impact protection.", "Inspired by patterns of energy radiating from Earth\u00e2\u20ac\u201dlike the flow of lava and the rhythmic ocean waves\u00e2\u20ac\u201dthe Nike Air Max 200 boasts the largest Max Air unit to date. With exceptional cushioning and modern detailing, this shoe radiates cool while providing optimal comfort.", "Feel the Air, both above and below, with the Nike Air Max 270 Flyknit Men's Shoe. It features Nike's biggest heel Air unit yet, plus an ultra-breathable Flyknit upper that helps keep you cool when the temperatures rise. Classic colour combinations nod to iconic Air Max models of the past, delivering a modern, streamlined look that's rooted in Nike sneaker heritage.", "The Nike React Element 55 SE borrows design lines from heritage runners like the Nike Internationalist, adds reflective graphics and combines it with Nike React technology for a smooth ride.", "The Nike Air Max 97 Utility puts a cold-weather spin on a classic style. Synthetic panels, engineered rubber and reflective design touches let you feel secure when hitting the streets.", "Crafted from soft suede, the Nike SB Check is reinforced in key areas for the durability you need to skate all day long.", "The first Nike SB shoe designed specifically for women, the Nike SB Bruin High is built for exceptional comfort and board control. With classic Bruin design lines and details, this is a fresh take on a time-honoured shoe.", "\"One of the game's fiercest competitors, triple-double dynamo Russell Westbrook has the motor, muscle and mentality to match his fearlessness\u00e2\u20ac\u201dwith the stats to back it up. Built to hold up on outdoor courts, the Jordan \"\"Why Not?\"\" Zer0.3 PF is fine-tuned for players like Russ", "Remastered from the OG that shook up the running world, the Nike Air Max 97 elevates the classic design. Memorial Day Parade White and fresh Sky Blue tint the sole. Flex your summertime vibes and float the streets in style.", "In spiritual circles, the colour purple represents enlightenment. It speaks to being fully connected to your spiritual mind by tapping into an inner source of potential that was otherwise undiscovered. The Kyrie 6 'Enlightenment' plays up the unseen spirituality theme with an all-seeing eye graphic on the side of the upper and a purple colour scheme.", "The Nike Zoom Pegasus Turbo Shield delivers your favourite lightweight running shoe in a smart, weatherised design, so you can continue training in confidence despite those dark and rainy months.", "More than 20 years after its initial release, the Nike Air Max Triax 96 returns as a cult classic. Featuring the same iconic shape and large-volume Air unit, it brings back the classic comfort and style you remember.", "Winning in both style and comfort, the NikeCourt Royale AC is as easy to get on as it is to pair with your entire warm-weather wardrobe. A hidden gore strap keeps the canvas upper looking clean and classic while easing it on and off.", "The Nike Air Monarch IV Lifestyle/Gym Shoe delivers lightweight cushioning and durable support with a Phylon midsole and a leather upper. Flex grooves provide natural flexibility with every step.", "The Nike ACG React Terra Gobe combines rugged durability with ACG style to get you where you need to go in comfort. The textile and synthetic upper is breathable and durable, and Nike React technology in the midsole provides an extremely smooth and comfortable ride.", "The Nike React Metcon AMP takes the stability and traction from the original and pairs it with React foam, Nike's most comfortable cushioning. It feels soft and springy with a breathable upper, but it's still stable enough to tackle lifting and high-impact workouts. A glow-in-the-dark rubber sole climbs up the side of the shoe for durability and extra grip during rope climbs.", "Building on the forefoot plate innovation of the 6, the Nike Mercurial Superfly 7 Academy MG Boot adds a versatile multi-ground plate that provides traction on natural- and artificial-grass surfaces.", "Featuring a panther-inspired design that takes after Michael Jordan's on-court presence, the Air Jordan 13 Retro is based on the OG model and has the same responsive cushioning and premium materials that made it famous in the '90s.", "The Nike Daybreak SP marks the return of the 1979 original, featuring suede and nylon on the upper and old-school graphics on the tongue for a '70s runner-inspired look and feel.", "The Nike Air Max Alpha Savage invokes Air Max style, stability and comfort in a modern design. Webbing integrates with the laces for midfoot containment, while Max Air cushioning delivers responsive comfort during your most intense workouts.", "Dream of speed and play fast in the Nike Mercurial Superfly 7 Elite MDS FG. A streamlined upper combines with a Nike Aerowtrac zone for high-speed play and supercharged traction.", "The Nike Joyride Dual Run blazes its own route. Tiny foam beads underfoot combined with traditional cushioning in the forefoot give an incredibly smooth feel that contours to your foot.", "The Air Max 98 rode the wave of its legendary predecessor, debuting with full-length visible Air and fluid design lines. Now it returns, sporting the same signature look and a new run of colours.", "The Nike Phantom Vision 2 Elite Dynamic Fit FG brings a new level of fierce precision to the field. A foot-hugging inner sleeve is concealed in a textured Flyknit outer layer to create a boot for the finishers, the providers and the battlers of tomorrow's game.", "The NikeCourt Air Zoom Resistance delivers lightweight durability on the hard court with a performance leather upper.", "Featuring Revive Foam, a super-soft foam designed to help you relax and recharge, the unrelenting comfort of the Nike Offcourt Slide is sensational. The innovative dual-layered foam and soft jersey lining on the strap ensure a gratifying full-foot experience. The iconic Air Force 1 pivot circle outsole and block lettering on the strap casually nod to heritage hoops.", "Emerging from The 10th, a new label that crosses tried-and-true workwear with Nike innovation, the Nike React Sertu blends handcrafted features with modern, technical elements. Borrowing elements from traditional moccasins and adding a touch of military-inspired detailing, it mixes utility with wearability, bringing a bold new look to the streets.", "The Air Jordan 14 Retro has class, comfort and the singular look of the original, with heritage-inspired colours, full-grain leather and responsive Zoom Air cushioning.", "\"Refresh your look and step into a new AF-1 world with the Nike Air Force 1 React. It fuses modern design with iconic b-ball style for a big, bold look. The oversized Swoosh, large \"\"AIR\"\" on the midsole and new sole pattern let you express your modern world while Nike React technology adds exceptional underfoot comfort.\"", "Always one step ahead, the Nike Air Max 98 LX features the OG design lines that were inspired by the walls of the Grand Canyon while stepping into the future with a colourful medley of recycled materials on the upper. The fluid, textured look and full-length Nike Air cushioning set you apart as you turn waste into style.", "The Nike Free X Metcon will take you from a short run to your gym workout. Superior breathability and comfort combined with durability and response make this stable trainer perfect for even the most ambitious of fitness goals.", "The Nike Zoom Pegasus Turbo 2 is updated with a feather-light upper, while innovative foam brings revolutionary responsiveness to your long-distance training.", "The Air Jordan XXXIII rewrites the story of an iconic basketball shoe. Its revolutionary closure system secures you for flight, while new FlightSpeed technology is tuned for optimal energy return.", "The Nike React Element 55 Shoe borrows design lines from heritage runners like the Nike Internationalist and then places it all on Nike React technology.", "LeBron is unstoppable on the court and just as influential off of it. The year 2003, LeBron's rookie season and a pivotal year in culture, inspires the LeBron 16 Low. It is powered by Max Air and Zoom Air cushioning technologies, and embodies his clout and versatility.", "The Nike Air VaporMax SE wraps your foot in a stretch woven material that gives structure and support to your stride. Underfoot, the lightest, most flexible Air Max cushioning to date gives a super-bouncy sensation that rivals running on air.", "The Nike Drop-Type Premium is inspired by classic tennis shoes in the NikeCourt family. Part of the N354 family that nods to Steve Prefontaine's fastest mile, it offers distinct design lines that borrow from the All Court 2.", "Trail-ready traction makes the Nike ACG Moc 3.0 a go-to for your next outdoor adventure. Designed and tested in Oregon, it features a sticky rubber heel and toe tip.", "Inspired by the original that debuted in 1985, the Air Jordan 1 Low offers a clean, classic look that's familiar yet always fresh. It's made for casual mode, with an iconic design that goes with everything and never goes out of style."], "data": [1, 1, 2, 2, 2, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 2, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 2, 2, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 2, 1, 1, 2, 1, 1, 3, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 2, 1, 1, 1, 1, 1, 2, 2, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 1, 1, 1, 1, 2]}, "label": "description", "count": 335, "min": "\"Breathability and inspiration come together in the Nike Air Zoom Pegasus 36 Premium Rise. A knit-in graphic repeating across the mesh and synthetic upper spells out \"\"Just Do It.\"\" in perforations. Strategically placed", "max": "With the Nike Air Max 90, a legendary shoe gets a luxe material treatment and brash colour palette with a history all of its own. Here, the Air Max 90 silhouette is clad in premium all-over suede with ballistic mesh accents to keep it breathable. This vibrant palette of saturated colours was made famous in the original Viotech release, which launched exclusively in Japan in the early 2000s. The head-turners have another classic to admire."}, {"values": {"label": ["2.6", "3.1", "4.2", " they cover zones where your foot releases the most heat.\"", "3", " the Nike Tanjun Men's Shoe offers a streamlined", "2.7", "4.4", "3.8", "2.9", "4.5", "2.5", "2.4", "4.9", "3.4", "5", "3.3", " the Nike Cortez '72 S.D. returns to the OG design with zigzag edges", "4.3", "3.5", "4.8", "4.1", "4.6", " who beat opponents with linear speed and aggressiveness.\"", " the Nike x Hawkins High Cortez combines premium materials laid out using the Tiger Pride green and orange with hidden details and show references throughout", "3.6", "1.5", "2.8", "3.2", "2.2", "1", "3.7", " nodding to those who feed the city of style.\"", "4.7", "4", "2", "3.9", " while a polka-dotted upper gets you noticed.\""], "data": [3, 4, 18, 1, 14, 1, 5, 19, 8, 3, 33, 1, 1, 5, 5, 115, 2, 1, 19, 9, 18, 14, 17, 1, 1, 7, 1, 3, 2, 1, 6, 15, 1, 13, 30, 5, 11, 1]}, "label": "rating", "count": 38, "min": " nodding to those who feed the city of style.\"", "max": "5"}, {"values": {"label": ["7", "54", "15", "11", "29", "42", "3", "30", "34", "8", "22", " including three distinct \"\"Stranger Things\"\" pins.\"", "16", "71", "47", "223", "5", "31", "18", "61", "27", "17", "26", "78", "6", "68", "19", "23", "25", " modern design for an elevated everyday look.\"", "53", "81", "33", "48", "67", "9", "24", "1", "105", "20", "36", "10", "63", "65", "4", "62", "12", "13", " an exposed foam tongue and minimalist leather. Why? Because you don't change what works.\"", "14", "94", "72", "2", "50", "45"], "data": [9, 1, 4, 8, 1, 1, 35, 3, 7, 10, 1, 1, 2, 1, 2, 1, 34, 4, 9, 2, 2, 6, 2, 1, 17, 1, 7, 4, 3, 1, 1, 1, 2, 1, 1, 8, 3, 98, 1, 6, 1, 11, 2, 1, 21, 1, 9, 7, 1, 4, 1, 1, 48, 1, 3]}, "label": "reviews", "count": 55, "min": " an exposed foam tongue and minimalist leather. Why? Because you don't change what works.\"", "max": "94"}, {"values": {"label": ["0.0 - 27.1", "27.1 - 54.2", "54.2 - 81.3", "81.3 - 108.4", "108.4 - 135.5", "135.5 - 162.6", "162.6 - 189.7", "189.7 - 216.8", "216.8 - 243.9", "243.9 - 271.0"], "data": [86, 54, 54, 54, 30, 27, 27, 27, 27, 28]}, "label": "product_name_stringindexer_transform", "count": 10, "min": 0.0, "max": 271.0}, {"values": {"label": ["0.0 - 36.4", "36.4 - 72.8", "72.8 - 109.2", "109.2 - 145.6", "145.6 - 182.0", "182.0 - 218.4", "218.4 - 254.8", "254.8 - 291.2", "291.2 - 327.6", "327.6 - 364.0"], "data": [74, 48, 37, 36, 36, 37, 36, 37, 36, 37]}, "label": "product_id_stringindexer_transform", "count": 10, "min": 0.0, "max": 364.0}, {"values": {"label": ["0"], "data": [414]}, "label": "brand_stringindexer_transform", "count": 1, "min": "0", "max": "0"}, {"values": {"label": ["0.0 - 33.4", "33.4 - 66.8", "66.8 - 100.2", "100.2 - 133.6", "133.6 - 167.0", "167.0 - 200.4", "200.4 - 233.8", "233.8 - 267.2", "267.2 - 300.6", "300.6 - 334.0"], "data": [76, 66, 38, 33, 33, 34, 33, 34, 33, 34]}, "label": "description_stringindexer_transform", "count": 10, "min": 0.0, "max": 334.0}, {"values": {"label": ["0.0 - 3.7", "3.7 - 7.4", "7.4 - 11.1", "11.1 - 14.8", "14.8 - 18.5", "18.5 - 22.2", "22.2 - 25.9", "25.9 - 29.6", "29.6 - 33.3", "33.3 - 37.0"], "data": [197, 72, 56, 28, 23, 17, 8, 5, 4, 4]}, "label": "rating_stringindexer_transform", "count": 10, "min": 0.0, "max": 37.0}, {"values": {"label": ["0.0 - 5.4", "5.4 - 10.8", "10.8 - 16.2", "16.2 - 21.6", "21.6 - 27.0", "27.0 - 32.4", "32.4 - 37.8", "37.8 - 43.2", "43.2 - 48.6", "48.6 - 54.0"], "data": [253, 48, 43, 22, 14, 12, 5, 6, 5, 6]}, "label": "reviews_stringindexer_transform", "count": 10, "min": 0.0, "max": 54.0}]}, "selectedFE": [{"transformationsData": [{"feature_label": "product_name", "transformation_label": "String Indexer"}], "feature": "product_name", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "414", "mean": "", "stddev": "", "min": "Air Jordan 1 Jester XX Low Laced", "max": "Zoom Freak 1 'Employee of the Month'", "missing": "0", "distinct": "272"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "product_name"}, {"transformationsData": [{"feature_label": "product_id", "transformation_label": "String Indexer"}], "feature": "product_id", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "414", "mean": "", "stddev": "", "min": "130690-017", "max": "CW4409-100", "missing": "0", "distinct": "365"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "product_id"}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "listing_price", "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "type": "numeric", "replaceby": "mean", "selected": true, "stats": {"count": "414", "mean": "4397.16", "stddev": "6112.7", "min": "0", "max": "18995", "missing": "0"}, "updatedLabel": "listing_price"}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "sale_price", "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "type": "numeric", "replaceby": "mean", "selected": true, "stats": {"count": "414", "mean": "10429.25", "stddev": "4260.23", "min": "1595", "max": "24995", "missing": "0"}, "updatedLabel": "sale_price"}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "discount", "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "type": "numeric", "replaceby": "mean", "selected": true, "stats": {"count": "414", "mean": "0.0", "stddev": "0.0", "min": "0", "max": "0", "missing": "0"}, "updatedLabel": "discount"}, {"transformationsData": [{"feature_label": "brand", "transformation_label": "String Indexer"}], "feature": "brand", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "414", "mean": "", "stddev": "", "min": "Nike", "max": "Nike", "missing": "0", "distinct": "1"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "brand"}, {"transformationsData": [{"feature_label": "description", "transformation_label": "String Indexer"}], "feature": "description", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "411", "mean": "", "stddev": "", "min": "\"Breathability and inspiration come together in the Nike Air Zoom Pegasus 36 Premium Rise. A knit-in graphic repeating across the mesh and synthetic upper spells out \"\"Just Do It.\"\" in perforations. Strategically placed", "max": "With the Nike Air Max 90, a legendary shoe gets a luxe material treatment and brash colour palette with a history all of its own. Here, the Air Max 90 silhouette is clad in premium all-over suede with ballistic mesh accents to keep it breathable. This vibrant palette of saturated colours was made famous in the original Viotech release, which launched exclusively in Japan in the early 2000s. The head-turners have another classic to admire.", "missing": "3", "distinct": "335"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "description"}, {"transformationsData": [{"feature_label": "rating", "transformation_label": "String Indexer"}], "feature": "rating", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "414", "mean": "4.24", "stddev": "0.82", "min": " nodding to those who feed the city of style.\"", "max": "5", "missing": "0", "distinct": "38"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "rating"}, {"transformationsData": [{"feature_label": "reviews", "transformation_label": "String Indexer"}], "feature": "reviews", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "414", "mean": "11.17", "stddev": "18.8", "min": " an exposed foam tongue and minimalist leather. Why? Because you don't change what works.\"", "max": "94", "missing": "0", "distinct": "55"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "reviews"}], "autoFE_flag": true}, "status": "new", "position": {"x": 62, "y": 160}, "shape_attributes": {"image": {"refWidth": "100%", "refHeight": "100%", "xlinkHref": "assets/svg/transformation/feature-transformation.svg"}, "label": {"textVerticalAnchor": "top", "textAnchor": "middle", "refX": "50%", "refY": "100%", "refY2": 10, "fontSize": 10, "fill": "#333333", "type": "transformation", "text": "Auto FE", "slug": "auto-fe", "fontFamily": "Roboto Condensed", "fontWeight": "Normal"}, "root": {"dataTooltipPosition": "bottom", "dataTooltipPositionSelector": ".joint-stencil", "mode": "auto"}, "body": {"fill": "transparent", "stroke": "#4295d1", "strokeWidth": 2, "strokeDasharray": "0"}, "dbValues": {"AutoFE": {"autoFE_flag": true, "dataPercentage": "10"}, "ManualFE": {"FE": []}, "selectedFE": [], "autoFE_flag": true}}, "shape_size": {"width": 60, "height": 60}, "shape_type": "standard.Image", "user_id": "7b254440-ce6b-4cbe-9a6b-9ca33491250a", "original_schema": [{"inherited": true, "checked": true, "field": "listing_price", "alias": "listing_price", "type": "numeric", "position": 0}, {"inherited": true, "checked": true, "field": "sale_price", "alias": "sale_price", "type": "numeric", "position": 1}, {"inherited": true, "checked": true, "field": "discount", "alias": "discount", "type": "numeric", "position": 2}, {"inherited": true, "checked": true, "field": "product_name_stringindexer", "alias": "product_name_stringindexer", "type": "real", "position": 3}, {"inherited": true, "checked": true, "field": "product_id_stringindexer", "alias": "product_id_stringindexer", "type": "real", "position": 4}, {"inherited": true, "checked": true, "field": "brand_stringindexer", "alias": "brand_stringindexer", "type": "numeric", "position": 5}, {"inherited": true, "checked": true, "field": "description_stringindexer", "alias": "description_stringindexer", "type": "real", "position": 6}, {"inherited": true, "checked": true, "field": "rating_stringindexer", "alias": "rating_stringindexer", "type": "real", "position": 7}, {"inherited": true, "checked": true, "field": "reviews_stringindexer", "alias": "reviews_stringindexer", "type": "real", "position": 8}], "actual_schema": [{"inherited": true, "checked": true, "field": "product_name", "alias": "product_name", "type": "String", "position": 0}, {"inherited": true, "checked": true, "field": "product_id", "alias": "product_id", "type": "String", "position": 1}, {"inherited": true, "checked": true, "field": "listing_price", "alias": "listing_price", "type": "numeric", "position": 2}, {"inherited": true, "checked": true, "field": "sale_price", "alias": "sale_price", "type": "numeric", "position": 3}, {"inherited": true, "checked": true, "field": "discount", "alias": "discount", "type": "numeric", "position": 4}, {"inherited": true, "checked": true, "field": "brand", "alias": "brand", "type": "String", "position": 5}, {"inherited": true, "checked": true, "field": "description", "alias": "description", "type": "String", "position": 6}, {"inherited": true, "checked": true, "field": "rating", "alias": "rating", "type": "String", "position": 7}, {"inherited": true, "checked": true, "field": "reviews", "alias": "reviews", "type": "String", "position": 8}], "selected_schema": [], "created_at": "2024-08-03 11:03:37.421000", "originalcount": 414, "samplecount": 414, "samplefile": "/FileStore/platform/sampleData/66ae0e8917c733036b10f54e/part-00000-8f46f37b-7b4e-4437-846f-b1e1b04c7905-c000.csv", "joinSchema": [], "updated_at": "2024-08-03 11:05:22.022000", "__v": 0, "datacache": 0, "sampleData": [{"product_name": "Nike Free Metcon 3", "product_id": "CJ0861-017", "listing_price": 0, "sale_price": 9995, "discount": 0, "brand": "Nike", "description": "The Nike Free Metcon 3 combines Nike Free flexibility around the forefoot with Metcon stability in the heel to help you get the most out of your training session.", "rating": "5", "reviews": "1"}, {"product_name": "Nike Zoom Pegasus Turbo 2", "product_id": "AT8242-009", "listing_price": 0, "sale_price": 15995, "discount": 0, "brand": "Nike", "description": "The Nike Zoom Pegasus Turbo 2 is updated with a feather-light upper, while innovative foam brings revolutionary responsiveness to your long-distance training.", "rating": "2.7", "reviews": "14"}, {"product_name": "Nike Air Max 270 React ENG", "product_id": "CK2595-500", "listing_price": 0, "sale_price": 14995, "discount": 0, "brand": "Nike", "description": "The Nike Air Max 270 React ENG combines a full-length React foam midsole with a 270 Max Air unit for unrivalled comfort and a striking visual experience.", "rating": "5", "reviews": "2"}, {"product_name": "Nike Air Max 90", "product_id": "CD0490-104", "listing_price": 0, "sale_price": 9995, "discount": 0, "brand": "Nike", "description": "Clean lines, versatile and timeless\u00e2\u20ac\u201dthe people's shoe returns with the Nike Air Max 90. Featuring the same iconic Waffle sole, stitched overlays and classic TPU accents you've come to love, it lets you walk among the pantheon of Air.", "rating": "5", "reviews": "9"}, {"product_name": "Nike Air Force 1 '07", "product_id": "315115-112", "listing_price": 0, "sale_price": 7495, "discount": 0, "brand": "Nike", "description": "The radiance lives on in the Nike Air Force 1 '07, the b-ball OG that puts a fresh spin on what you know best: crisp leather in an all-white colourway for a statement look on and off the court.", "rating": "4.5", "reviews": "67"}, {"product_name": "Nike Air VaporMax Flyknit 3", "product_id": "AJ6910-009", "listing_price": 0, "sale_price": 16995, "discount": 0, "brand": "Nike", "description": "Be bouncy and buoyant in the Nike Air VaporMax Flyknit 3. Inspired by high fashion, the upper features flowing lines of breathable, stretchable Flyknit construction. Revolutionary VaporMax Air technology keeps a spring in your step with toe-to-heel cushioning.", "rating": "4.4", "reviews": "48"}, {"product_name": "Nike Air Zoom SuperRep", "product_id": "BQ7043-668", "listing_price": 0, "sale_price": 9995, "discount": 0, "brand": "Nike", "description": "The Nike Air Zoom SuperRep is designed for circuit training, HIIT, short runs and other fast-paced exercise. Zoom Air cushioning in the forefoot combines with a wide, stable heel to keep you moving and lifting comfortably.", "rating": "4.4", "reviews": "34"}, {"product_name": "Nike Air Max 97", "product_id": "921733-104", "listing_price": 0, "sale_price": 16995, "discount": 0, "brand": "Nike", "description": "The Nike Air Max 97 keeps a sneaker icon going strong with the same design details that made it famous: water-ripple lines, reflective piping and full-length Max Air cushioning.", "rating": "4.3", "reviews": "16"}, {"product_name": "Nike SB Bruin High", "product_id": "923112-001", "listing_price": 7995, "sale_price": 5597, "discount": 0, "brand": "Nike", "description": "The first Nike SB shoe designed specifically for women, the Nike SB Bruin High is built for exceptional comfort and board control. With classic Bruin design lines and details, this is a fresh take on a time-honoured shoe.", "rating": "4.2", "reviews": "6"}, {"product_name": "Air Jordan XXXIV PF", "product_id": "BQ3381-600", "listing_price": 0, "sale_price": 14995, "discount": 0, "brand": "Nike", "description": "The Air Jordan XXXIV PF continues the legacy of a cultural icon. Light, responsive and sculpted with aerodynamic precision, it combines a boldly unconventional midsole with herringbone traction to merge innovative and iconic design elements.", "rating": "5", "reviews": "2"}, {"product_name": "Nike Metcon 5", "product_id": "AO2982-076", "listing_price": 0, "sale_price": 10995, "discount": 0, "brand": "Nike", "description": "The Nike Metcon 5 is the most tuned Metcon yet. This means specific stability for heavy lifting, traction made for speed and durability where you need it. It even includes a Hyperlift insert that's compatible with all prior versions of the Metcon. Meet your secret weapon for weight-lifting and high-impact training.", "rating": "4.4", "reviews": "22"}, {"product_name": "Nike Joyride Run Flyknit", "product_id": "AQ2730-009", "listing_price": 0, "sale_price": 14995, "discount": 0, "brand": "Nike", "description": "The Nike Joyride Run Flyknit is designed to help make running feel easier and give your legs a day off. Tiny foam beads underfoot contour to your foot for cushioning that stands up to your mileage.", "rating": "4", "reviews": "65"}, {"product_name": "Nike Air VaporMax 360", "product_id": "CK9671-001", "listing_price": 0, "sale_price": 18995, "discount": 0, "brand": "Nike", "description": "Inspired by heritage running shoes like the 2006 Air Max 360, the Nike Air VaporMax 360 re-imagines full-length Air with its lighter, more flexible design. The full-length foam midsole adds to the comfort while bold colours create a fresh, modern look.", "rating": "4", "reviews": "1"}, {"product_name": "Nike Offcourt", "product_id": "BQ4632-602", "listing_price": 0, "sale_price": 2495, "discount": 0, "brand": "Nike", "description": "Featuring Revive Foam, a super-soft foam designed to help you relax and recharge, the unrelenting comfort of the Nike Offcourt Slide is sensational. The innovative dual-layered foam and soft jersey lining on the strap ensure a gratifying full-foot experience. The iconic Air Force 1 pivot circle outsole and block lettering on the strap casually nod to heritage hoops.", "rating": "4.3", "reviews": "4"}, {"product_name": "Jordan Break", "product_id": "AR6374-402", "listing_price": 0, "sale_price": 1995, "discount": 0, "brand": "Nike", "description": "Featuring a fixed strap over the top of the foot, the Jordan Break Slide features durable synthetic leather and lightweight foam cushioning for underfoot comfort.", "rating": "4.2", "reviews": "5"}, {"product_name": "LeBron 7 QS", "product_id": "CU5646-001", "listing_price": 0, "sale_price": 16995, "discount": 0, "brand": "Nike", "description": "Make your head-turning journey to the top comfortable. Built strong and sleek, the LeBron 7 QS features a mix of materials on the upper for a look that lasts. Metal accents and multiple LeBron crests celebrate a king, while full-length cushioning graces your every step.", "rating": "5", "reviews": "1"}, {"product_name": "Nike In-Season TR 9", "product_id": "AR4543-013", "listing_price": 0, "sale_price": 5995, "discount": 0, "brand": "Nike", "description": "The Nike In-Season TR 9 is light, stable and features deep, comfortable footbed for superior impact absorption and energy return throughout your entire workout.", "rating": "4.9", "reviews": "7"}, {"product_name": "Nike Air Force 1 '07 LV8", "product_id": "CD0888-002", "listing_price": 0, "sale_price": 7595, "discount": 0, "brand": "Nike", "description": "The Nike Air Force 1 '07 LV8 incorporates the same hoops-inspired performance features of the 1982 original while adding fresh design details for an updated look.", "rating": "5", "reviews": "3"}, {"product_name": "Nike Air Max Dia", "product_id": "CJ0636-100", "listing_price": 0, "sale_price": 8995, "discount": 0, "brand": "Nike", "description": "Designed specifically for a woman's foot, the Nike Air Max Dia delivers a lifted look and airy aesthetic. The minimal upper modernises the silhouette, while the Max Air unit is amplified even further by an exaggerated midsole for a boost of style.", "rating": "1", "reviews": "1"}, {"product_name": "Air Jordan 1 Mid SE", "product_id": "852542-087", "listing_price": 0, "sale_price": 9995, "discount": 0, "brand": "Nike", "description": "The Air Jordan 1 Mid SE maintains the timeless appeal of the OG AJ1, revamped with fresh colours and premium materials. Built with a lightweight Air-Sole unit and classic design lines, it captures the essence of the original through a modern lens.", "rating": "4.8", "reviews": "13"}, {"product_name": "Nike Daybreak", "product_id": "CK2351-601", "listing_price": 0, "sale_price": 7995, "discount": 0, "brand": "Nike", "description": "Originally released in 1979, the Nike Daybreak is a blast from the past. Featuring the same rubber Waffle outsole and nylon upper, it gives you true vintage style.", "rating": "4.9", "reviews": "7"}, {"product_name": "Nike SB Shane", "product_id": "BV0657-400", "listing_price": 0, "sale_price": 6495, "discount": 0, "brand": "Nike", "description": "Shane O'Neill put the same attention to detail into every aspect of his signature shoe as he does in his almost otherworldly skating. From the low-key perforated ventilation at the toe, to the double lacing option and the no-break-in remastered sole, the Nike SB Shane gets all the details right.", "rating": "4.7", "reviews": "3"}, {"product_name": "Air Jordan 1 Mid", "product_id": "554724-066", "listing_price": 0, "sale_price": 9995, "discount": 0, "brand": "Nike", "description": "The Air Jordan 1 Mid Shoe is inspired by the first AJ1, offering OG fans a look at how far the Jordan brand has come since 1985.", "rating": "4.5", "reviews": "61"}, {"product_name": "Jordan 'Why Not?' Zer0.3 PF", "product_id": "CD3002-103", "listing_price": 0, "sale_price": 10995, "discount": 0, "brand": "Nike", "description": "\"One of the game's fiercest competitors, triple-double dynamo Russell Westbrook has the motor, muscle and mentality to match his fearlessness\u00e2\u20ac\u201dwith the stats to back it up. Built to hold up on outdoor courts, the Jordan \"\"Why Not?\"\" Zer0.3 PF is fine-tuned for players like Russ", "rating": " who beat opponents with linear speed and aggressiveness.\"", "reviews": "5"}, {"product_name": "Nike Air Zoom SuperRep", "product_id": "CD3460-010", "listing_price": 0, "sale_price": 9995, "discount": 0, "brand": "Nike", "description": "The Nike Air Zoom SuperRep is designed for circuit training, HIIT, short runs and other fast-paced exercise. Zoom Air cushioning in the forefoot combines with a wide, stable heel to keep you moving and lifting comfortably.", "rating": "4.5", "reviews": "31"}, {"product_name": "Nike Metcon 5 AMP", "product_id": "CD3395-006", "listing_price": 0, "sale_price": 11995, "discount": 0, "brand": "Nike", "description": "The Nike Metcon 5 AMP arms you with stability for heavy lifting and traction for sprints during high-impact training. It combines breathability and durability to be your secret weapon in the gym.", "rating": "5", "reviews": "2"}, {"product_name": "Nike Air Max 97", "product_id": "CI3708-700", "listing_price": 0, "sale_price": 14995, "discount": 0, "brand": "Nike", "description": "The Air Max 97 shook up the running world with its revolutionary full-length Nike Air unit. The Nike Air Max 97 remasters the original design with bold new colours and flashes of gold.", "rating": "5", "reviews": "1"}, {"product_name": "LeBron 17 Low", "product_id": "CD5007-102", "listing_price": 0, "sale_price": 13995, "discount": 0, "brand": "Nike", "description": "Fine-tuned with LeBron's ferocious game in mind, the LeBron 17 Low has a sleek, low-top design that features a powerful combination of impact-ready cushioning and responsiveness.", "rating": "3", "reviews": "2"}, {"product_name": "Nike Renew Fusion", "product_id": "CD0200-003", "listing_price": 0, "sale_price": 6995, "discount": 0, "brand": "Nike", "description": "The Nike Renew Fusion blends stability, cushioning and durability for high-impact training sessions. A foam sole cushions heavy-weight, high-paced activities, while a midfoot cage locks your foot down to a flat, wide base for stability.", "rating": "5", "reviews": "1"}, {"product_name": "LeBron 17", "product_id": "BQ3177-100", "listing_price": 0, "sale_price": 16995, "discount": 0, "brand": "Nike", "description": "The LeBron 17 harnesses LeBron's strength and speed with containment and support for all-court domination. It features a lightweight mix of knit and heat-moulded yarns that gives each one a durable look and feel. Combined cushioning provides LeBron with the impact support and responsive energy return he needs to power through the long season.", "rating": "4.5", "reviews": "47"}, {"product_name": "Nike Air Max 90 Premium", "product_id": "CQ0912-100", "listing_price": 0, "sale_price": 11995, "discount": 0, "brand": "Nike", "description": "\"The Nike Air Max 90 Premium is built in honour of celebrated Parisian bakers who define French cuisine and hard work. Nike Air cushioning under your feet feels softer than freshly baked brioche while a durable upper features a French flag and baking champion's wheat laurel on opposite heels. \"\"Fresh baked daily\"\" is written on the liner", "rating": " nodding to those who feed the city of style.\"", "reviews": "5"}, {"product_name": "Nike Epic Phantom React A.I.R. Cody Hudson", "product_id": "CI1718-001", "listing_price": 13995, "sale_price": 8397, "discount": 0, "brand": "Nike", "description": "\"Soft to the touch, the Nike Epic Phantom React A.I.R. lets go of laces for slip-on style that has you up and running in no time. A sock-like fit within breathable Flyknit feels as though the Phantom \"\"disappears\"\" as you run", "rating": " while a polka-dotted upper gets you noticed.\"", "reviews": "5"}, {"product_name": "Nike Air Max 90", "product_id": "CD0490-101", "listing_price": 0, "sale_price": 9995, "discount": 0, "brand": "Nike", "description": "Clean lines, versatile and timeless\u00e2\u20ac\u201dthe people's shoe returns with the Nike Air Max 90. Featuring the same iconic Waffle sole, stitched overlays and classic TPU accents you've come to love, it lets you walk among the pantheon of Air.", "rating": "5", "reviews": "9"}, {"product_name": "Nike Zoom Gravity", "product_id": "BQ3202-011", "listing_price": 0, "sale_price": 7995, "discount": 0, "brand": "Nike", "description": "Designed to make fast go faster, the Nike Zoom Gravity is built to take you from quick tempo runs to winning races. Snappy forefoot propulsion and grippy, multi-surface traction combine to maximize your stride.", "rating": "3.1", "reviews": "8"}, {"product_name": "Nike Air Max 270 React ENG", "product_id": "CD0113-400", "listing_price": 0, "sale_price": 14995, "discount": 0, "brand": "Nike", "description": "The Nike Air Max 270 React ENG combines a full-length React foam midsole with a 270 Max Air unit for unrivalled comfort and a striking visual experience.", "rating": "5", "reviews": "1"}, {"product_name": "Nike Air Max 270 React", "product_id": "AO4971-700", "listing_price": 12995, "sale_price": 7797, "discount": 0, "brand": "Nike", "description": "The bold silhouette of Nike Air lifts the Nike Air Max 270 React to new heights, while the Nike React foam midsole delivers exceptional cushioning. Imagine all-day comfort with unstoppable style.", "rating": "3.9", "reviews": "33"}, {"product_name": "Nike React Presto", "product_id": "AV2605-101", "listing_price": 9995, "sale_price": 5997, "discount": 0, "brand": "Nike", "description": "Inspired by the early 2000s original, the Nike React Presto puts an exaggerated spin on an unconventional icon. Nike React foam delivers an expressive look with a lightweight, bouncy feel and a whole lot of personality.", "rating": "3.7", "reviews": "27"}, {"product_name": "Nike Legend React", "product_id": "AA1625-009", "listing_price": 0, "sale_price": 8795, "discount": 0, "brand": "Nike", "description": "The Nike Legend React Men's Running Shoe features a breathable upper with synthetic overlays that enhance durability while smooth, responsive foam cushions every step as you run.", "rating": "4.2", "reviews": "9"}, {"product_name": "NikeCourt Air Max Wildcard", "product_id": "AO7351-104", "listing_price": 0, "sale_price": 7995, "discount": 0, "brand": "Nike", "description": "The NikeCourt Air Max Wildcard delivers the comfort you need to hit hard and move fast on the court. A Max Air unit under your heel cushions every step, while an innovative Lunarlon midsole provides a springy underfoot sensation and extra stability.", "rating": "2.7", "reviews": "3"}, {"product_name": "Nike Free Metcon 3", "product_id": "CJ0861-010", "listing_price": 0, "sale_price": 9995, "discount": 0, "brand": "Nike", "description": "The Nike Free Metcon 3 combines Nike Free flexibility around the forefoot with Metcon stability in the heel to help you get the most out of your training session.", "rating": "5", "reviews": "1"}, {"product_name": "Nike SB Air Max Stefan Janoski 2", "product_id": "AQ7477-009", "listing_price": 0, "sale_price": 9995, "discount": 0, "brand": "Nike", "description": "The Nike SB Air Max Stefan Janoski 2 hugs your foot with a breathable textile upper. A Max Air unit in the heel cushions every step, while a flat rubber outsole optimises grip when you're on your board.", "rating": "2.6", "reviews": "11"}, {"product_name": "Nike Free RN Flyknit 3.0", "product_id": "AQ5707-001", "listing_price": 10995, "sale_price": 7697, "discount": 0, "brand": "Nike", "description": "Ideal for runs up to 3 miles, the Nike Free RN Flyknit 3.0 delivers a lace-free design so you can slip in and hit your stride. An updated flex groove pattern and modified midsole foam provides more flexibility than its predecessor, creating a barefoot sensation with every step. A mix of supportive and stretchy yarns are zonally placed for comfort that moves with your foot.", "rating": "3.9", "reviews": "10"}, {"product_name": "Nike ISPA Joyride Envelope", "product_id": "BV4584-001", "listing_price": 16995, "sale_price": 13597, "discount": 0, "brand": "Nike", "description": "Utilising the latest innovations and Nike's ISPA project\u00e2\u20ac\u201dwhich touts a philosophy of improvise, scavenge, protect and adapt\u00e2\u20ac\u201dthe Nike ISPA Joyride Envelope delivers a futuristic shoe built for taking on the elements. Innovative details provide easy on and off and help support you in wet or warm conditions.", "rating": "5", "reviews": "2"}, {"product_name": "Nike Phantom Venom Academy FG", "product_id": "AO0566-606", "listing_price": 0, "sale_price": 7495, "discount": 0, "brand": "Nike", "description": "The Nike Phantom Venom Academy FG is engineered for powerful, precise strikes that win games. Ridges on the instep create spin to control the flight of the ball, while the firm-ground plate provides the traction needed to unleash at any moment.", "rating": "2.8", "reviews": "5"}, {"product_name": "Nike Air Ghost Racer", "product_id": "AT5410-003", "listing_price": 9995, "sale_price": 6997, "discount": 0, "brand": "Nike", "description": "Designed for speed, stability and comfort, the Nike Air Ghost Racer was a hit 20 years ago\u00e2\u20ac\u201dand now it's back in a stitch-for-stitch remake. And though it has all the same features as the original, it might be even better than you remember.", "rating": "4.5", "reviews": "2"}, {"product_name": "Nike ACG Air Terra Antarktik", "product_id": "BV6348-300", "listing_price": 0, "sale_price": 15995, "discount": 0, "brand": "Nike", "description": "\"Designed and tested in Oregon, the Nike ACG Antarktik is a \"\"jacket\"\" for your foot. Its tough ripstop upper combines with a GORE-TEX lining to help keep your foot dry. All-new lug details use hard rubber for traction in all conditions.\"", "rating": "2.6", "reviews": "20"}, {"product_name": "Nike Mercurial Superfly 7 Academy MG", "product_id": "AT7946-414", "listing_price": 0, "sale_price": 8495, "discount": 0, "brand": "Nike", "description": "Building on the forefoot plate innovation of the 6, the Nike Mercurial Superfly 7 Academy MG Boot adds a versatile multi-ground plate that provides traction on natural- and artificial-grass surfaces.", "rating": "5", "reviews": "2"}, {"product_name": "Nike AlphaDunk", "product_id": "BQ5401-001", "listing_price": 15995, "sale_price": 11197, "discount": 0, "brand": "Nike", "description": "Join the hoops uprising in the AlphaDunk, one of Nike Basketball's bounciest game shoes to date. The revamped upper construction is light and supportive and a large cushioning unit spans nearly the entire forefoot, giving you all the responsiveness you can handle on the court.", "rating": "2.9", "reviews": "12"}, {"product_name": "Nike Daybreak SP", "product_id": "BV7725-500", "listing_price": 7995, "sale_price": 4797, "discount": 0, "brand": "Nike", "description": "The Nike Daybreak SP marks the return of the 1979 original, featuring suede and nylon on the upper and old-school graphics on the tongue for a '70s runner-inspired look and feel.", "rating": "5", "reviews": "3"}, {"product_name": "Nike x MMW Joyride CC3 Setter", "product_id": "CU7623-002", "listing_price": 0, "sale_price": 16995, "discount": 0, "brand": "Nike", "description": "Alyx founder and creative director Matthew M. Williams is known for his ability to push fashion into new spaces. His angle is simple: Combine the influence of his life in New York and California with the latest innovations. The Nike x MMW Joyride CC3 Setter runs with that idea, bringing you to a world of cushioning and comfort.", "rating": "3.5", "reviews": "2"}, {"product_name": "Nike SB Blazer Low GT", "product_id": "704939-103", "listing_price": 0, "sale_price": 6995, "discount": 0, "brand": "Nike", "description": "The Nike SB Blazer Low GT pairs a supportive feel with lightweight, responsive cushioning for everyday use. Just like Grant Taylor, it blends contemporary style with old-school traditions.", "rating": "4.3", "reviews": "8"}, {"product_name": "LeBron 17 Monstars", "product_id": "CD5050-400", "listing_price": 0, "sale_price": 16995, "discount": 0, "brand": "Nike", "description": "The Monstars have crash-landed in the Windy City, prepared to strip us of some of our greatest hardwood heroes. With the game in danger, who can Bugs and the Tune Squad turn to? Who other than The King himself, LeBron James, poised to dash the hopes and dreams of Mr Swackhammer and any team that stands in his way? The LeBron 17 Monstars is here just in time for All-Star in Chicago, where LeBron is ready to represent the Tune Squad and all that is great about the sport of basketball.", "rating": "4.6", "reviews": "5"}, {"product_name": "Kyrie 5 x Bandulu", "product_id": "CK5836-100", "listing_price": 10995, "sale_price": 8797, "discount": 0, "brand": "Nike", "description": "Designed in collaboration with Pat Peltier, the mind behind up-cycled vintage label Bandulu, the Kyrie 5 x Bandulu explores process, approach and technique. The brand's signature paint splatters give the shoe an expression that speaks to Kyrie's creativity and dedication to his craft\u00e2\u20ac\u201don and off the court.", "rating": "5", "reviews": "1"}, {"product_name": "Nike Air Max Impact", "product_id": "CI1396-600", "listing_price": 0, "sale_price": 7995, "discount": 0, "brand": "Nike", "description": "The Nike Air Max Impact infuses bold, expressive details into a design that's a beast on the court. Responsive cushioning helps soften hard landings, while the moulded heel clip and dual-strap system combine for a lightweight, locked-in feel.", "rating": "5", "reviews": "1"}, {"product_name": "Nike Air Max 90 QS", "product_id": "CD0916-001", "listing_price": 0, "sale_price": 11995, "discount": 0, "brand": "Nike", "description": "\"Originally designed by Tinker Hatfield in 1990, the Air Max 90 has been re-imagined. Widely considered one of the biggest cross-cultural icons of the early '00s, this iteration pays tribute to the influential 2003 \"\"Snakeskin\"\" release with premium materials and a bold twist on the original.\"", "rating": "5", "reviews": "1"}, {"product_name": "Nike React Element 55 SE", "product_id": "BV1507-001", "listing_price": 10995, "sale_price": 6597, "discount": 0, "brand": "Nike", "description": "The Nike React Element 55 SE borrows design lines from heritage runners like the Nike Internationalist, then places it all on Nike React technology.", "rating": "4.8", "reviews": "5"}, {"product_name": "Jordan Proto-Max 720", "product_id": "BQ6623-070", "listing_price": 15995, "sale_price": 12797, "discount": 0, "brand": "Nike", "description": "Inspired by outer space flight, the Jordan Proto-Max 720 provides all-day comfort with a future-forward look. An outer shroud covers the sock-like bootie construction, while Nike Air cushions every step.", "rating": "4.4", "reviews": "18"}, {"product_name": "Nike React Element 55 SE", "product_id": "CI3831-200", "listing_price": 10995, "sale_price": 6597, "discount": 0, "brand": "Nike", "description": "The Nike React Element 55 SE borrows design lines from heritage runners like the Nike Internationalist, adds reflective graphics, then places it all on Nike React technology.", "rating": "4", "reviews": "1"}, {"product_name": "Nike Air Max2 Light", "product_id": "AO1741-003", "listing_price": 11995, "sale_price": 8397, "discount": 0, "brand": "Nike", "description": "Originally released in 1994, the Nike Air Max2 Light returns as a near-exact replica of the iconic runner with style for the street. Its mesh and synthetic upper, moulded heel and Max Air unit honour the OG, while the soft foam midsole optimises all-day comfort.", "rating": "3.7", "reviews": "3"}, {"product_name": "Nike Air Max 270", "product_id": "AH8050-100", "listing_price": 0, "sale_price": 13995, "discount": 0, "brand": "Nike", "description": "Nike's first lifestyle Air Max lets you greet the streets with the soft, smooth and resilient ride of the Nike Air Max 270. The design draws inspiration from the Air Max pantheon, showcasing Nike's greatest innovation with its large window and fresh array of colours.", "rating": "3.8", "reviews": "81"}, {"product_name": "Nike Air Force 1 '07 LV8", "product_id": "CK4363-100", "listing_price": 0, "sale_price": 7595, "discount": 0, "brand": "Nike", "description": "The Nike Air Force 1 '07 LV8 has the same hoops-inspired performance of the '82 OG plus fresh new patterns for a sleek look that turns heads.", "rating": "5", "reviews": "6"}, {"product_name": "Nike Air Max 90", "product_id": "CN8490-100", "listing_price": 0, "sale_price": 9995, "discount": 0, "brand": "Nike", "description": "Nothing as fly, nothing as comfortable, nothing as proven. The Nike Air Max 90 stays true to its OG running roots with the iconic Waffle sole, stitched overlays and classic TPU details. Classic colours celebrate your fresh look while Max Air cushioning adds comfort to the journey.", "rating": "5", "reviews": "3"}, {"product_name": "Nike Phantom Vision Academy Dynamic Fit TF", "product_id": "AO3269-717", "listing_price": 8495, "sale_price": 5947, "discount": 0, "brand": "Nike", "description": "The Nike Phantom Vision Academy Dynamic Fit TF Artificial Turf Football Boot provides the precise touch to win small-sided glory, wherever the game finds you. Webbing on the laces provides lockdown while a textured instep is always ready to receive, turn and score.", "rating": "4", "reviews": "3"}, {"product_name": "Nike ACG MOC 3.0", "product_id": "CI9367-301", "listing_price": 0, "sale_price": 7995, "discount": 0, "brand": "Nike", "description": "Trail-ready traction makes the Nike ACG Moc 3.0 a go-to for your next outdoor adventure. Designed and tested in Oregon, it features a sticky rubber heel and toe tip.", "rating": "3.5", "reviews": "2"}, {"product_name": "Nike Air DSVM", "product_id": "AT8179-100", "listing_price": 15995, "sale_price": 9597, "discount": 0, "brand": "Nike", "description": "The lightweight Nike Air DSVM gives you all-day comfort and street-ready style in a modern take on a classic silhouette. An adjustable strap lets you change up the fit for a look that's sure to turn heads.", "rating": "4.4", "reviews": "7"}, {"product_name": "Nike x Carhartt WIP Air Max 95", "product_id": "AV3866-001", "listing_price": 0, "sale_price": 16995, "discount": 0, "brand": "Nike", "description": "The Nike x Carhartt WIP Air Max 95 features reflective details and neon pops of colour. Carhartt WIP materials help construct the durable upper of a new take on the first sneaker with visible forefoot Nike Air.", "rating": "5", "reviews": "1"}, {"product_name": "Nike Odyssey React Flyknit 2", "product_id": "AH1015-010", "listing_price": 9995, "sale_price": 6997, "discount": 0, "brand": "Nike", "description": "The Nike Odyssey React Flyknit 2 provides a strategic combination of lightweight Flyknit construction and synthetic material for support. Underfoot, Nike React cushioning delivers a soft, springy ride for a route that begs to be crushed.", "rating": "4", "reviews": "25"}, {"product_name": "Nike Tiempo Legend 8 Elite FG", "product_id": "AT5293-004", "listing_price": 0, "sale_price": 20995, "discount": 0, "brand": "Nike", "description": "The Nike Tiempo Legend 8 Elite FG takes the legendary touch of premium kangaroo leather and adds foot-hugging Quad-Fit mesh in the lining and a wrap-around Flyknit tongue that feels supportive under your arch.", "rating": "3.1", "reviews": "7"}, {"product_name": "Nike Joyride CC3 Setter", "product_id": "AT6395-002", "listing_price": 14995, "sale_price": 10497, "discount": 0, "brand": "Nike", "description": "Lounge wherever you go and let the Nike Joyride CC3 Setter take you into a new world of comfort. It places your feet directly on soft foam and innovative bead-pods for extra comfort, while exaggerated textures add unrivalled depth to your edgy attitude.", "rating": "4", "reviews": "6"}, {"product_name": "Nike Renew Run", "product_id": "CK6357-005", "listing_price": 0, "sale_price": 6995, "discount": 0, "brand": "Nike", "description": "The Nike Renew Run keeps you moving with softer foam for a cushioned feel. Designed with the everyday runner in mind, this shoe delivers secure support and durable traction for comfort on the go.", "rating": "4.3", "reviews": "12"}, {"product_name": "Nike React Ianga", "product_id": "AV5555-001", "listing_price": 10995, "sale_price": 8797, "discount": 0, "brand": "Nike", "description": "The Nike React Ianga takes elements from a jungle boot and mixes them with modern, technical details. Part of the 10th Collection, this shoe is a unique, military-inspired expression of the React family.", "rating": "4.3", "reviews": "9"}, {"product_name": "Air Jordan 10 Retro", "product_id": "310805-137", "listing_price": 0, "sale_price": 15995, "discount": 0, "brand": "Nike", "description": "Featuring soft, lightweight cushioning, the Air Jordan 10 Retro offers performance-inspired comfort with iconic Air Jordan detailing.", "rating": "4.7", "reviews": "223"}, {"product_name": "Air Jordan 12 Retro", "product_id": "130690-017", "listing_price": 0, "sale_price": 15995, "discount": 0, "brand": "Nike", "description": "An all-time favourite among players and sneakerheads, the Air Jordan 12 Retro features full-length Zoom Air cushioning and full-grain leather styled with distinct radial stitch lines.", "rating": "4.5", "reviews": "24"}, {"product_name": "Nike Air Max 270 React", "product_id": "CT1264-101", "listing_price": 0, "sale_price": 12995, "discount": 0, "brand": "Nike", "description": "Nike's first lifestyle Air Max meets the softest, smoothest, most resilient foam yet in the Nike Air Max 270 React. The design draws inspiration from the Air Max pantheon, showcasing Nike's greatest innovation with its large window and fresh array of colours.", "rating": "4", "reviews": "1"}, {"product_name": "Nike Air Zoom Winflo 6", "product_id": "AQ7497-300", "listing_price": 0, "sale_price": 7995, "discount": 0, "brand": "Nike", "description": "In a fluid design that speaks the language of fast, the Nike Air Zoom Winflo 6 has less bulk and a more sculpted profile than previous versions. It has 2 cushioning units for targeted responsiveness in the forefoot and heel. Up top, mesh in the upper provides breathability.", "rating": "5", "reviews": "3"}, {"product_name": "Nike Air Max 97", "product_id": "CT4526-100", "listing_price": 0, "sale_price": 15995, "discount": 0, "brand": "Nike", "description": "Remastered from the OG that shook up the running world, the Nike Air Max 97 elevates the classic design. Memorial Day Parade White and fresh Sky Blue tint the sole. Flex your summertime vibes and float the streets in style.", "rating": "5", "reviews": "1"}, {"product_name": "Nike MX-720-818", "product_id": "CI3871-300", "listing_price": 0, "sale_price": 15995, "discount": 0, "brand": "Nike", "description": "The Nike MX-720-818 uses materials inspired by space suits for a futuristic take on classic Air Max DNA.", "rating": "4.4", "reviews": "5"}, {"product_name": "Nike React Element 55", "product_id": "BQ2728-012", "listing_price": 0, "sale_price": 11995, "discount": 0, "brand": "Nike", "description": "The Nike React Element 55 Women's Shoe borrows design lines from heritage Nike runners like the Internationalist, adds reflective graphics and then places it all on Nike React technology.", "rating": "3.9", "reviews": "17"}, {"product_name": "Nike ZoomX Vista Grind", "product_id": "CT8919-700", "listing_price": 0, "sale_price": 13995, "discount": 0, "brand": "Nike", "description": "The Nike ZoomX Vista Grind brings you to a bold new place both rebellious and refined. It's comfort you can see and feel in a brand new silhouette.", "rating": "4.5", "reviews": "2"}, {"product_name": "PG 4 EP", "product_id": "CD5082-001", "listing_price": 0, "sale_price": 8995, "discount": 0, "brand": "Nike", "description": "Paul George is the rare high-percentage shooter who's also a coach's dream on D. Designed for his unrivalled 2-way game, the PG 4 EP unveils a new cushioning system that's lightweight, articulated and responsive, ideal for players like PG who go hard every play.", "rating": "4.5", "reviews": "2"}, {"product_name": "Nike Air Zoom Pegasus 36", "product_id": "BV5739-500", "listing_price": 10995, "sale_price": 7697, "discount": 0, "brand": "Nike", "description": "The iconic Nike Air Zoom Pegasus 36 returns with more perforations for more cooling. An engineered mesh and synthetic upper strategically targets breathability across high-heat areas. A slimmer heel collar and tongue reduce bulk without compromising comfort, while exposed Flywire cables give you a snug fit at higher speeds.", "rating": "4.7", "reviews": "3"}, {"product_name": "Nike Air Force 1 '07 LV8", "product_id": "CD0887-201", "listing_price": 0, "sale_price": 7995, "discount": 0, "brand": "Nike", "description": "The radiance lives on in the Nike Air Force 1 '07, the b-ball OG that puts a fresh, outdoorsy spin on what you know best: soft suedes, bold colours and the perfect amount of flash to make you shine.", "rating": "5", "reviews": "3"}, {"product_name": "Nike Air VaporMax Flyknit 3", "product_id": "AJ6900-102", "listing_price": 0, "sale_price": 16995, "discount": 0, "brand": "Nike", "description": "Be bouncy and buoyant in the Nike Air VaporMax Flyknit 3. The upper features flowing 2-tone lines of breathable, stretchable Flyknit construction for unique, street-ready style. Revolutionary VaporMax technology keeps a spring in your step with toe-to-heel cushioning.", "rating": "3.7", "reviews": "50"}, {"product_name": "Nike Air Max Verona", "product_id": "CI9842-500", "listing_price": 0, "sale_price": 9995, "discount": 0, "brand": "Nike", "description": "Designed with every woman in mind, the mixed-material upper features a plush collar, flashy colours and unique stitching patterns. Nike Air cushioning combines with the lifted foam heel for a modern touch, adding comfort and style to your journey.", "rating": "5", "reviews": "2"}, {"product_name": "Nike Air Force 1 Shadow", "product_id": "CI0919-100", "listing_price": 0, "sale_price": 8995, "discount": 0, "brand": "Nike", "description": "The Nike Air Force 1 Shadow pays homage to the women who are setting an example for the next generation by being forces of change in their community. This sneaker reflects this ethos in its design with double the Swoosh, double the height and double the force.", "rating": "4.8", "reviews": "20"}, {"product_name": "Nike Air Tailwind 79", "product_id": "487754-303", "listing_price": 0, "sale_price": 7995, "discount": 0, "brand": "Nike", "description": "Making its debut in 1978 for the Honolulu Marathon, the Nike Air Tailwind was a revolution in cushioning. Now, a racing icon returns with the Nike Air Tailwind 79, featuring nearly original materials and colours, plus the Nike Air unit that made it a winner.", "rating": "3.9", "reviews": "17"}, {"product_name": "Nike TiempoX Lunar Legend VII Pro TF", "product_id": "AH7249-118", "listing_price": 8995, "sale_price": 7197, "discount": 0, "brand": "Nike", "description": "The Nike TiempoX Lunar Legend VII Pro Turf Football Boot features lightweight foam cushioning and a premium leather construction for a flexible fit and dominating touch when playing on turf pitches.", "rating": "3", "reviews": "1"}, {"product_name": "Nike Air Max Plus III", "product_id": "CJ9684-001", "listing_price": 15995, "sale_price": 11197, "discount": 0, "brand": "Nike", "description": "The Nike Air Max Plus III combines ultra-comfortable Tuned Air Technology with an energetic silhouette made famous by its predecessors. The III updates the look with TPU details fused to the upper while paying homage to the iconic colour fade.", "rating": "5", "reviews": "2"}, {"product_name": "Nike Zoom 2K", "product_id": "AO0354-108", "listing_price": 0, "sale_price": 6995, "discount": 0, "brand": "Nike", "description": "Inspired by running silhouettes from the early 2000s, the Nike Zoom 2K is reimagining the golden age of running sneakers. A classic Zoom bag takes it back to where it began, while the rubber wings that wrap the outsole push the design into the future.", "rating": "4.9", "reviews": "8"}, {"product_name": "Nike Zoom Pegasus Turbo 2", "product_id": "AT2863-100", "listing_price": 0, "sale_price": 15995, "discount": 0, "brand": "Nike", "description": "The Nike Zoom Pegasus Turbo 2 is updated with a feather-light upper, while innovative foam brings revolutionary responsiveness to your long-distance training.", "rating": "3.1", "reviews": "54"}, {"product_name": "Nike Kawa Shower", "product_id": "832528-001", "listing_price": 0, "sale_price": 1595, "discount": 0, "brand": "Nike", "description": "The Nike Kawa Shower Men's Slide is designed to help feet recover after competition. A textured Solarsoft footbed and flexible foam outsole offer lightweight comfort.", "rating": "4.5", "reviews": "6"}, {"product_name": "Nike React Infinity Run Flyknit", "product_id": "CD4371-001", "listing_price": 0, "sale_price": 13995, "discount": 0, "brand": "Nike", "description": null, "rating": "4.6", "reviews": "68"}, {"product_name": "Air Jordan XXXIII", "product_id": "AQ8830-016", "listing_price": 18995, "sale_price": 15197, "discount": 0, "brand": "Nike", "description": "The Air Jordan XXXIII rewrites the story of an iconic basketball shoe. Its revolutionary closure system secures you for flight, while new FlightSpeed technology is tuned for optimal energy return.", "rating": "4.1", "reviews": "17"}, {"product_name": "Nike Odyssey React", "product_id": "AO9819-001", "listing_price": 11995, "sale_price": 9637, "discount": 0, "brand": "Nike", "description": "The Nike Odyssey React Men's Running Shoe provides crazy comfort that lasts as long as you can run. Its Nike React foam cushioning is responsive yet lightweight, durable yet soft. This attraction of opposites creates a sensation that not only enhances the feeling of moving forwards, but makes running feel fun, too.\u00c2\u00a0The upper of the Nike Odyssey React is built with a lightweight, breathable fabric instead of the premium Flyknit featured on the Nike Epic React.", "rating": "4.4", "reviews": "27"}, {"product_name": "Nike Metcon 5", "product_id": "AQ1189-009", "listing_price": 0, "sale_price": 10995, "discount": 0, "brand": "Nike", "description": "The Nike Metcon 5 is our most tuned Metcon yet. This means specific stability for heavy lifting, traction made for speed and durability where you need it. It even includes a Hyperlift insert that's compatible with all prior versions of the Metcon. Meet your secret weapon for weight-lifting and high-impact training.", "rating": "3.7", "reviews": "31"}, {"product_name": "LeBron 7", "product_id": "CU5133-600", "listing_price": 16995, "sale_price": 13597, "discount": 0, "brand": "Nike", "description": "First debuted on the hardwood during one of the King's epic December showdowns, the LeBron 7 returns in familiar festive hues to celebrate the game and the season. Featuring the same supple Team Red upper and black accents as the original iteration, this limited-edition sneaker is expertly engineered for the street and arrives complete with the unmistakable Air iconic to the model.", "rating": "4.4", "reviews": "7"}, {"product_name": "Nike Blazer Low QS Flyleather with at least 50% leather fibre", "product_id": "CI5546-100", "listing_price": 0, "sale_price": 6495, "discount": 0, "brand": "Nike", "description": "Inspired by basketball, the Nike Blazer Low QS Flyleather features an innovative Flyleather upper for a premium look and bold graphics by artist Steven Harrington.", "rating": "2", "reviews": "2"}, {"product_name": "Nike SB Dunk High Pro", "product_id": "BQ6826-003", "listing_price": 0, "sale_price": 8995, "discount": 0, "brand": "Nike", "description": "The Nike SB Dunk High Pro pairs iconic Dunk style with a high-top design for a fresh look. A Zoom Air unit in the heel and a padded tongue create a comfortable fit that's made to skate.", "rating": "4.8", "reviews": "4"}, {"product_name": "Nike Air Max 90 FlyEase", "product_id": "CU0814-102", "listing_price": 0, "sale_price": 9995, "discount": 0, "brand": "Nike", "description": "Nike Sportswear's first collaboration by the Hatfield brothers, the Nike Air Max 90 FlyEase combines the timelessness of Tinker's original design with Tobie's FlyEase technology. The heel collapses when you step in then snaps back into place, providing quick, easy access to one of history's most iconic sneakers.", "rating": "4", "reviews": "1"}, {"product_name": "Nike Metcon 5 AMP", "product_id": "CD3395-006", "listing_price": 0, "sale_price": 11995, "discount": 0, "brand": "Nike", "description": "The Nike Metcon 5 AMP arms you with stability for heavy lifting and traction for sprints during high-impact training. It combines breathability and durability to be your secret weapon in the gym.", "rating": "5", "reviews": "2"}, {"product_name": "Nike M2K Tekno", "product_id": "AV4789-104", "listing_price": 8995, "sale_price": 7197, "discount": 0, "brand": "Nike", "description": "Drawing inspiration from the Monarch franchise, the Nike M2K Tekno combines real and synthetic leathers with textile for a layered look.", "rating": "4.4", "reviews": "7"}, {"product_name": "Nike React Kenny 55", "product_id": "CJ3312-001", "listing_price": 0, "sale_price": 12995, "discount": 0, "brand": "Nike", "description": "The Nike React Kenny 55 lets you rep the classic and the cutting edge at once. The lines are borrowed from OG Nike running shoes like the Internationalist, rooting you to sneaker heritage, while responsive React cushioning adds modern comfort that feels unbelievably soft. Its 2-tone marble print speaks to the duality of the real world. 1 part yin, 1 part yang. Everything in perfect balance.", "rating": "5", "reviews": "1"}, {"product_name": "Nike Air VaporMax 2019", "product_id": "AR6631-004", "listing_price": 15995, "sale_price": 12797, "discount": 0, "brand": "Nike", "description": "Designed for running but adopted by the street, the Nike Air VaporMax 2019 features the lightest, most flexible Air Max cushioning to date. A stretch woven material wraps your foot for lightweight support and stability, while an external reinforcement in the heel secures the back of your foot.", "rating": "3.8", "reviews": "24"}, {"product_name": "Nike React Element 55", "product_id": "BQ6166-003", "listing_price": 11995, "sale_price": 7197, "discount": 0, "brand": "Nike", "description": "The Nike React Element 55 Shoe borrows design lines from heritage runners like the Nike Internationalist and then places it all on Nike React technology.", "rating": "3.7", "reviews": "31"}, {"product_name": "Nike Air Force 1 Low Retro", "product_id": "CQ0492-001", "listing_price": 0, "sale_price": 10995, "discount": 0, "brand": "Nike", "description": "The legend lives on in the Nike Air Force 1 '07 Men's Shoe, a modern take on the iconic AF-1 that blends classic style and fresh details.", "rating": "4.5", "reviews": "2"}, {"product_name": "NikeCourt Zoom Cage 3", "product_id": "918193-700", "listing_price": 0, "sale_price": 13495, "discount": 0, "brand": "Nike", "description": "The NikeCourt Zoom Cage 3 offers zoned durability with a lightweight, pliable overlay that moves with you. A Zoom Air unit in the heel delivers a low-profile ride with responsive cushioning.", "rating": "3.6", "reviews": "20"}, {"product_name": "Nike Metcon Sport", "product_id": "AQ7489-008", "listing_price": 0, "sale_price": 7995, "discount": 0, "brand": "Nike", "description": "The Nike Metcon Sport is designed for heavy weightlifting like all Metcons, but is updated for increased agility during explosive movements and speed drills.", "rating": "3.6", "reviews": "14"}, {"product_name": "Jordan Mars 270", "product_id": "CD7070-009", "listing_price": 0, "sale_price": 14995, "discount": 0, "brand": "Nike", "description": "Drawing inspiration from four classic Air Jordans, the Jordan Mars 270 is a modern-day remix that offers a heavy dose of heritage, plus an enormous Max Air unit and springy foam for non-stop comfort.", "rating": "4.6", "reviews": "15"}, {"product_name": "Nike Air Zoom Vomero 14", "product_id": "AH7857-009", "listing_price": 0, "sale_price": 11995, "discount": 0, "brand": "Nike", "description": "The Nike Air Zoom Vomero 14 takes responsive cushioning to the next level. A full-length cushioning unit works with Nike React technology to deliver a super-snappy, smooth ride. Up top, the sleek design feels durable and supports your stride through every mile.", "rating": "4.2", "reviews": "23"}, {"product_name": "Nike Zoom Fly", "product_id": "880848-005", "listing_price": 0, "sale_price": 14495, "discount": 0, "brand": "Nike", "description": "Built with a carbon-infused nylon plate inspired by the VaporFly 4%\u00e2\u20ac\u201dour most efficient marathon shoe ever\u00e2\u20ac\u201dthe Nike Zoom Fly Men's Running Shoe is the perfect response to the demands of your toughest tempo runs, long runs and race days.", "rating": "4.3", "reviews": "105"}, {"product_name": "Nike Zoom Fly 3", "product_id": "AT8240-003", "listing_price": 0, "sale_price": 13995, "discount": 0, "brand": "Nike", "description": "Inspired by the Vaporfly, the Nike Zoom Fly 3 gives distance runners race-day comfort and durability. The power of a carbon-fibre plate keeps you in the running mile after mile.", "rating": "4", "reviews": "30"}, {"product_name": "Nike Air Zoom Pegasus 35", "product_id": "942851-002", "listing_price": 0, "sale_price": 10995, "discount": 0, "brand": "Nike", "description": "The Nike Air Zoom Pegasus 35 is built for runners at every level, whether you're a seasoned veteran or just starting out.\u00c2\u00a0It features a breathable mesh upper with an out-turned collar for Achilles comfort. Down below, the cushioning has been updated with full-length Zoom Air for the first time ever, to deliver a smoother, more natural stride.", "rating": "3.9", "reviews": "61"}, {"product_name": "Nike Air Zoom Pegasus 36 Trail", "product_id": "AR5677-200", "listing_price": 0, "sale_price": 10995, "discount": 0, "brand": "Nike", "description": "An icon trades pavement for path with the Nike Air Zoom Pegasus 36 Trail. A perforated mesh upper adds breathability, as double Zoom Air units underfoot cushion your stride. Opposing lugs on the outsole optimise traction on your uphill climbs.", "rating": "4.6", "reviews": "12"}, {"product_name": "Nike Phantom Vision Club Dynamic Fit FG", "product_id": "AJ6959-717", "listing_price": 5995, "sale_price": 4497, "discount": 0, "brand": "Nike", "description": "The Nike Phantom Vision Club Dynamic Fit FG brings the fierce precision of street play to the pitch. A foot-hugging Dynamic Fit collar combines with targeted texture for precision to create a boot for the finishers, the providers and the battlers of tomorrow's game.", "rating": "5", "reviews": "1"}, {"product_name": "Nike Air Monarch IV", "product_id": "415445-102", "listing_price": 0, "sale_price": 5295, "discount": 0, "brand": "Nike", "description": "The Nike Air Monarch IV Lifestyle/Gym Shoe delivers lightweight cushioning and durable support with a Phylon midsole and a leather upper. Flex grooves provide natural flexibility with every step.", "rating": "4.1", "reviews": "94"}, {"product_name": "Zoom Freak 1", "product_id": "BQ5422-200", "listing_price": 0, "sale_price": 9995, "discount": 0, "brand": "Nike", "description": "Get your freak on in Giannis Antetokounmpo's debut signature shoe, Nike's first-ever for the international basketball sensation. The Zoom Freak 1 has the extra-responsive cushioning, forefoot stability and multi-directional traction needed to complement his freakishly athletic game.", "rating": "4.2", "reviews": "30"}, {"product_name": "Nike Mercurial Superfly 7 Academy IC", "product_id": "AT7975-606", "listing_price": 0, "sale_price": 8495, "discount": 0, "brand": "Nike", "description": "The soft upper of the Nike Mercurial Superfly 7 Academy IC wraps your foot for a second-skin fit, while the rubber outsole helps supercharge traction on the court or street.", "rating": "5", "reviews": "1"}, {"product_name": "Air Jordan 1 Low", "product_id": "553558-125", "listing_price": 0, "sale_price": 8995, "discount": 0, "brand": "Nike", "description": "Inspired by the original that debuted in 1985, the Air Jordan 1 Low offers a clean, classic look that's familiar yet always fresh. It's made for casual mode, with an iconic design that goes with everything and never goes out of style.", "rating": "4.6", "reviews": "34"}, {"product_name": "Nike Mercurial Vapor 13 Elite FG", "product_id": "AQ4176-049", "listing_price": 0, "sale_price": 21995, "discount": 0, "brand": "Nike", "description": "Building on the 360-degree Flyknit innovation of the 12, the Nike Mercurial Vapor 13 Elite FG adds a Nike Aerowtrac zone to the forefoot and a slightly stiffer chassis to help supercharge traction. Inside, an insole with NikeGrip technology provides maximum interior traction underfoot and lightweight cushioning.", "rating": "3.5", "reviews": "4"}, {"product_name": "Nike Air VaporMax 360", "product_id": "CK2718-003", "listing_price": 0, "sale_price": 18995, "discount": 0, "brand": "Nike", "description": "Featuring a full-length foam midsole and VaporMax Air unit, the Nike Air VaporMax 360 gives you remarkable underfoot comfort with bold 2000s style inspired by the Air Max 360.", "rating": "4.1", "reviews": "10"}, {"product_name": "Nike Air Max 720", "product_id": "AO2924-401", "listing_price": 15995, "sale_price": 12797, "discount": 0, "brand": "Nike", "description": "The Nike Air Max 720 goes bigger than ever before with Nike's tallest Air unit yet, offering more air underfoot for unprecedented, all-day comfort. Has Air Max gone too far? We hope so.", "rating": "4.2", "reviews": "62"}, {"product_name": "Nike Zoom KD12", "product_id": "AR4229-003", "listing_price": 0, "sale_price": 12995, "discount": 0, "brand": "Nike", "description": "Kevin Durant always looks relaxed\u00e2\u20ac\u201duntil he attacks. His game is reserved yet explosive, difficult to guard and impossible to stop. The KD12 was built for his dominance and endless energy all game long, with the latest innovation in Nike Zoom Air technology.", "rating": "4.6", "reviews": "18"}, {"product_name": "Nike Free X Metcon 2", "product_id": "AQ8306-407", "listing_price": 9995, "sale_price": 7997, "discount": 0, "brand": "Nike", "description": "The Nike Free X Metcon will take you from a short run to your gym workout. Superior breathability and comfort combined with durability and response make this stable trainer perfect for even the most ambitious of fitness goals.", "rating": "3.4", "reviews": "23"}, {"product_name": "Nike Air Max 90", "product_id": "CD0881-104", "listing_price": 0, "sale_price": 9995, "discount": 0, "brand": "Nike", "description": "Clean lines, versatile and timeless\u00e2\u20ac\u201dthe people's shoe returns with the Nike Air Max 90. Featuring the same iconic Waffle sole, stitched overlays and classic TPU accents you've come to love, it lets you walk among the pantheon of Air.", "rating": "4.7", "reviews": "9"}, {"product_name": "Air Jordan 4 Retro SE", "product_id": "CT5342-007", "listing_price": 0, "sale_price": 18995, "discount": 0, "brand": "Nike", "description": "As fresh as its first release, the Air Jordan 4 Retro remakes Michael Jordan's 4th signature shoe for today's streetwear savants. Suede and textile materials provide lightweight durability and support, while Nike Air cushioning offers comfort with every step.", "rating": "4.8", "reviews": "11"}, {"product_name": "Nike SB Zoom Stefan Janoski Canvas RM Premium", "product_id": "AQ7878-003", "listing_price": 0, "sale_price": 7995, "discount": 0, "brand": "Nike", "description": "The Nike SB Zoom Stefan Janoski Canvas RM Premium pairs a minimal look with a modern fit. It has been updated with a new, plush sockliner and a flexible outsole for better boardfeel right out of the box.", "rating": "1", "reviews": "1"}, {"product_name": "Nike Zoom Rival Fly", "product_id": "CD7288-001", "listing_price": 7995, "sale_price": 6397, "discount": 0, "brand": "Nike", "description": "Inspired by Japan's Ekiden relay runners, the Nike Zoom Rival Fly features a futuristic look with a Zoom Air unit in the forefoot that gives you responsive propulsion. Flex grooves underneath optimise toe-off and soft foam cushions your stride. The mesh and synthetic upper blends strength and breathability.", "rating": "5", "reviews": "1"}, {"product_name": "Nike Pegasus 36 FlyEase (Extra Wide)", "product_id": "BV0612-001", "listing_price": 0, "sale_price": 9995, "discount": 0, "brand": "Nike", "description": "The Nike Air Zoom Pegasus 36 FlyEase (Extra-Wide) maintains everything you love about the Pegasus and adds a zip for effortless on and off. The no-tie lacing system adjusts easily for a secure feel as you tackle your miles.", "rating": "3", "reviews": "4"}, {"product_name": "Nike ISPA Air Max 720", "product_id": "CD2182-001", "listing_price": 17995, "sale_price": 14397, "discount": 0, "brand": "Nike", "description": "Utilising the latest innovations and Nike's ISPA project\u00e2\u20ac\u201dwhich touts a philosophy of improvise, scavenge, protect and adapt\u00e2\u20ac\u201dthe Nike ISPA Air Max 720 delivers smooth cushioning. It features an extra-large air unit, providing support along with innovative details inspired by modern life in the city.", "rating": "3", "reviews": "4"}, {"product_name": "Nike Epic Phantom React Flyknit", "product_id": "BV0417-401", "listing_price": 12995, "sale_price": 7797, "discount": 0, "brand": "Nike", "description": "\"Soft to the touch, the Nike Epic Phantom React Flyknit is lace-free for a slip-on style that gets you up and running in no time. A snug, secure, sock-like fit within a breathable Flyknit upper feels as though the Phantom \"\"disappears\"\" as you run.\"", "rating": "4.4", "reviews": "12"}, {"product_name": "Nike Air Zoom Pegasus 36", "product_id": "AQ2203-003", "listing_price": 0, "sale_price": 9995, "discount": 0, "brand": "Nike", "description": "The iconic Nike Air Zoom Pegasus 36 returns with more perforations and engineered mesh in the upper, which strategically target breathability across high-heat areas. A slimmer heel collar and tongue reduce bulk without compromising comfort, while exposed Flywire cables give you a snug fit at higher speeds.", "rating": "3.6", "reviews": "23"}, {"product_name": "Jordan Aerospace 720", "product_id": "BV5502-600", "listing_price": 0, "sale_price": 16995, "discount": 0, "brand": "Nike", "description": "With more Air underfoot, the Jordan Aerospace 720 delivers next-generation comfort with signature Jordan heritage.", "rating": "5", "reviews": "1"}, {"product_name": "Nike Air Max Plus III", "product_id": "CD7005-001", "listing_price": 0, "sale_price": 15995, "discount": 0, "brand": "Nike", "description": "Featuring the same Tuned Air technology that originally put it in the sneaker history books, the Nike Air Max Plus III updates the look with TPU fused to the upper while paying homage to the iconic colour fade.", "rating": "5", "reviews": "1"}, {"product_name": "Jordan Hydro 8", "product_id": "CD2803-001", "listing_price": 0, "sale_price": 3995, "discount": 0, "brand": "Nike", "description": "Made for athletes to relax in pre- and post-matches, the Jordan Hydro 8 works as an everyday, anytime slide. It offers the plush cushioning of a Solarsoft foam footbed and an adjustable strap.", "rating": "4", "reviews": "1"}, {"product_name": "Nike x Undercover React", "product_id": "CJ6971-001", "listing_price": 16995, "sale_price": 13597, "discount": 0, "brand": "Nike", "description": "Jun Takahashi's vision of chaos and balance comes to life in the modern age. The Nike x Undercover React pairs a classic welly with several technologies to create a shoe unlike any other.", "rating": "3.7", "reviews": "3"}, {"product_name": "Nike Air Max 98", "product_id": "640744-016", "listing_price": 16995, "sale_price": 10197, "discount": 0, "brand": "Nike", "description": "The Air Max 98 rode the wave of its legendary predecessor, debuting with full-length visible Air and fluid design lines. Now it returns, sporting the same signature look and a new run of colours.", "rating": "4.1", "reviews": "9"}, {"product_name": "Nike Air Max 200", "product_id": "AQ2568-100", "listing_price": 9995, "sale_price": 5997, "discount": 0, "brand": "Nike", "description": "With exceptional cushioning and modern detailing, the Nike Air Max 200 radiates cool while providing extreme comfort. Its design is inspired by patterns of energy radiating from the earth\u00e2\u20ac\u201dlike the flow of lava and the ocean's rhythmic waves.", "rating": "4.5", "reviews": "13"}, {"product_name": "Nike Air Max 90", "product_id": "CT2007-100", "listing_price": 0, "sale_price": 9995, "discount": 0, "brand": "Nike", "description": "\"The Nike Air Max 90 honours the OG with a revamped design that replicates the initial 1990 release. A \"\"clean slate\"\" colourway celebrates the shoe's 30th anniversary with the iconic Waffle sole.\"", "rating": "5", "reviews": "1"}, {"product_name": "Nike Air Zoom Terra Kiger 6", "product_id": "CJ0219-400", "listing_price": 0, "sale_price": 10995, "discount": 0, "brand": "Nike", "description": "The Nike Air Zoom Terra Kiger 6 is built to take on wet and rocky trails. Lightweight in design, it features a sleeker look with a woven heel for a secure fit and feel.", "rating": "5", "reviews": "2"}, {"product_name": "Nike Air Max 97 Utility", "product_id": "BQ5615-002", "listing_price": 15995, "sale_price": 11197, "discount": 0, "brand": "Nike", "description": "The Nike Air Max 97 Utility puts a cold-weather spin on a classic style. Synthetic panels, engineered rubber and reflective design touches let you feel secure when hitting the streets.", "rating": "5", "reviews": "1"}, {"product_name": "Jordan Jumpman 2020 PF", "product_id": "BQ3448-400", "listing_price": 0, "sale_price": 8995, "discount": 0, "brand": "Nike", "description": "The Jordan Jumpman 2020 PF delivers lightweight support for dynamic play on the court. A textile upper and secure midfoot webbing keep you moving freely during possessions.", "rating": "5", "reviews": "2"}, {"product_name": "Nike ACG React Terra Gobe", "product_id": "BV6344-001", "listing_price": 12995, "sale_price": 7797, "discount": 0, "brand": "Nike", "description": "The Nike ACG React Terra Gobe combines rugged durability with ACG style to get you where you need to go in comfort. The textile and synthetic upper is breathable and durable, and Nike React technology in the midsole provides an extremely smooth and comfortable ride.", "rating": "3.7", "reviews": "19"}, {"product_name": "Nike Air Force 1 '07 Essential", "product_id": "AO2132-401", "listing_price": 7995, "sale_price": 5597, "discount": 0, "brand": "Nike", "description": "Hoops in the park, Sunday BBQs and sunshine. The radiance lives on in the Nike Air Force 1 '07 Essential, the b-ball OG that puts a fresh spin on what you know best: crisp leather, bold colours and the perfect amount of flash to make you shine.", "rating": "4.4", "reviews": "5"}, {"product_name": "Nike Joyride Dual Run", "product_id": "CD4363-103", "listing_price": 0, "sale_price": 10995, "discount": 0, "brand": "Nike", "description": "The Nike Joyride Dual Run is designed to help make running feel easier and give your legs a day off. Tiny foam beads underfoot contour to your foot for cushioning that stands up to your mileage.", "rating": "4.8", "reviews": "5"}, {"product_name": "Jordan Proto-React Z", "product_id": "CI3794-600", "listing_price": 13995, "sale_price": 11197, "discount": 0, "brand": "Nike", "description": "Inspired by spacesuits, the Jordan Proto-React Z has a futuristic look with a fit and feel made for all-day wear. Responsive cushioning gives you more bounce with less weight, while an aeronautics-inspired shroud and snug bootie help keep you strapped in.", "rating": "4.6", "reviews": "5"}, {"product_name": "NikeCourt Air Zoom Vapor X", "product_id": "AA8030-108", "listing_price": 0, "sale_price": 14995, "discount": 0, "brand": "Nike", "description": "The NikeCourt Air Zoom Vapor X has an updated Dynamic Fit system with a full-length foot frame to provide ultimate lateral control. Its new generative outsole combined with a Zoom Air unit provides a lightweight, responsive feel on the court.", "rating": "3.3", "reviews": "13"}, {"product_name": "LeBron 17", "product_id": "BQ3177-100", "listing_price": 0, "sale_price": 16995, "discount": 0, "brand": "Nike", "description": "The LeBron 17 harnesses LeBron's strength and speed with containment and support for all-court domination. It features a lightweight mix of knit and heat-moulded yarns that gives each one a durable look and feel. Combined cushioning provides LeBron with the impact support and responsive energy return he needs to power through the long season.", "rating": "4.5", "reviews": "47"}, {"product_name": "Nike Benassi", "product_id": "343881-412", "listing_price": 0, "sale_price": 2495, "discount": 0, "brand": "Nike", "description": "The Nike Benassi Women's Slide features a lined upper with a bold logo for plush comfort and an athletic look. A foam midsole and outsole provide lightweight impact protection.", "rating": "4.3", "reviews": "12"}, {"product_name": "Nike Air Max Dia Icon Clash", "product_id": "AQ4312-107", "listing_price": 8995, "sale_price": 5397, "discount": 0, "brand": "Nike", "description": "The Nike Air Max Dia Icon Clash delivers a lifted look and airy aesthetic in a sleek shape. The minimal upper modernises the look, while a Max Air unit, surrounded by clear TPU, is amplified even further by an exaggerated midsole for a boost of style.", "rating": "4.6", "reviews": "23"}, {"product_name": "Air Jordan XXXIV PF", "product_id": "BQ3381-600", "listing_price": 0, "sale_price": 14995, "discount": 0, "brand": "Nike", "description": "The Air Jordan XXXIV PF continues the legacy of a cultural icon. Light, responsive and sculpted with aerodynamic precision, it combines a boldly unconventional midsole with herringbone traction to merge innovative and iconic design elements.", "rating": "5", "reviews": "2"}, {"product_name": "Nike Air Zoom Winflo 5", "product_id": "AA7406-006", "listing_price": 7995, "sale_price": 6397, "discount": 0, "brand": "Nike", "description": "The Nike Air Zoom Winflo 5 Men's Running Shoe provides a responsive ride and durable, multi-surface traction underfoot. Up top, engineered mesh delivers support and breathability where you need them, while an inner sleeve gives you a comfortable, sock-like fit as you hit your stride.", "rating": "3", "reviews": "6"}, {"product_name": "Nike Air Max 90", "product_id": "CD0917-300", "listing_price": 11995, "sale_price": 7197, "discount": 0, "brand": "Nike", "description": "With the Nike Air Max 90, a legendary shoe gets a luxe material treatment and brash colour palette with a history all of its own. Here, the Air Max 90 silhouette is clad in premium all-over suede with ballistic mesh accents to keep it breathable. This vibrant palette of saturated colours was made famous in the original Viotech release, which launched exclusively in Japan in the early 2000s. The head-turners have another classic to admire.", "rating": "3.2", "reviews": "5"}, {"product_name": "PG 3 NASA", "product_id": "CI2666-400", "listing_price": 9995, "sale_price": 7997, "discount": 0, "brand": "Nike", "description": "Paul George's moon shot took him from Palmdale to basketball stardom, and now he's heading to new heights. This space-themed version of the PG 3 offers sensational traction, springy responsiveness and lightweight containment for seamless moves between offence and defence.", "rating": "3.7", "reviews": "11"}, {"product_name": "Nike React Sertu", "product_id": "AT5301-003", "listing_price": 0, "sale_price": 12995, "discount": 0, "brand": "Nike", "description": "Emerging from The 10th, a new label that crosses tried-and-true workwear with Nike innovation, the Nike React Sertu blends handcrafted features with modern, technical elements. Borrowing elements from traditional moccasins and adding a touch of military-inspired detailing, it mixes utility with wearability, bringing a bold new look to the streets.", "rating": "5", "reviews": "2"}, {"product_name": "Nike React Element 55 SE", "product_id": "CD2153-001", "listing_price": 0, "sale_price": 10995, "discount": 0, "brand": "Nike", "description": "The Nike React Element 55 SE borrows design lines from heritage runners like the Nike Internationalist, adds premium details and places it all on Nike React technology.", "rating": "5", "reviews": "1"}, {"product_name": "Nike SB Zoom Stefan Janoski Mid RM", "product_id": "AT7324-001", "listing_price": 7995, "sale_price": 6397, "discount": 0, "brand": "Nike", "description": "The Nike SB Zoom Stefan Janoski Mid RM pairs a minimal look with a modern fit. It has been updated with a new, plush sockliner and a flexible midsole for better boardfeel right out of the box.", "rating": "5", "reviews": "1"}, {"product_name": "Nike Air Max Alpha Savage", "product_id": "AT3378-471", "listing_price": 0, "sale_price": 8995, "discount": 0, "brand": "Nike", "description": "The Nike Air Max Alpha Savage invokes Air Max style, stability and comfort in a modern design. Webbing integrates with the laces for midfoot containment, while Max Air cushioning delivers responsive comfort during your most intense workouts.", "rating": "4.2", "reviews": "5"}, {"product_name": "Nike React Vision", "product_id": "CD4373-001", "listing_price": 0, "sale_price": 10995, "discount": 0, "brand": "Nike", "description": "The Nike React Vision is a story of surreal comfort. Layered textures, shapes and vivid colours are combined in a design influenced by the exaggerated world of our dreams, while React foam and an ultra-plush tongue provide surreal comfort. DIMSIX on the tongue tab rises high off the collar to add just a touch of Nike's own origin story.", "rating": "4.7", "reviews": "3"}, {"product_name": "Jordan Trunner NXT React", "product_id": "AV1201-600", "listing_price": 0, "sale_price": 11995, "discount": 0, "brand": "Nike", "description": "Ready for the toughest workouts, the Jordan Trunner NXT features incredibly responsive cushioning and a breathable, lightweight upper.", "rating": "5", "reviews": "3"}, {"product_name": "Kyrie Low 2", "product_id": "AV6337-003", "listing_price": 0, "sale_price": 9495, "discount": 0, "brand": "Nike", "description": "Kyrie's ability to make quick, sharp cuts while handling the ball gives his game an unrivalled edge. Loaded with responsive cushioning, the Kyrie Low 2 features a curved outsole and traction that wraps up the sides, ideal for quick players who continually work the angles to break down the defence.", "rating": "4.5", "reviews": "4"}, {"product_name": "Nike Zoom Pegasus Turbo 2", "product_id": "CN6928-300", "listing_price": 0, "sale_price": 15995, "discount": 0, "brand": "Nike", "description": "The Nike Zoom Pegasus Turbo 2 Hakone is updated with a feather-light upper, while energy-returning foam brings revolutionary responsiveness to your long distance training.", "rating": "4", "reviews": "4"}, {"product_name": "Nike React Infinity Run Flyknit", "product_id": "CD4372-004", "listing_price": 0, "sale_price": 13995, "discount": 0, "brand": "Nike", "description": null, "rating": "4.2", "reviews": "29"}, {"product_name": "Nike Tiempo Legend 8 Academy MG", "product_id": "AT5292-606", "listing_price": 0, "sale_price": 6495, "discount": 0, "brand": "Nike", "description": "The Nike Tiempo Legend 8 Academy MG takes the legendary touch of calfskin leather and adds a versatile multi-ground plate for traction on natural- and artificial-grass surfaces.", "rating": "2", "reviews": "1"}, {"product_name": "Kyrie 5", "product_id": "AQ2456-007", "listing_price": 0, "sale_price": 8495, "discount": 0, "brand": "Nike", "description": "Responsive and supportive, the Kyrie 5 is made with a soft midsole for responsive cushioning and a curved outsole for multi-directional traction.", "rating": "5", "reviews": "3"}, {"product_name": "Nike Air Force 1 '07", "product_id": "315122-001", "listing_price": 0, "sale_price": 7295, "discount": 0, "brand": "Nike", "description": "Hoops in the park, Sunday BBQs and sunshine. The radiance lives on in the Nike Air Force 1 '07, the b-ball OG that puts a fresh spin on what you know best: crisp leather in an all-black colourway for a statement look on and off the court.", "rating": "4.5", "reviews": "78"}, {"product_name": "LeBron Soldier 13 SFG", "product_id": "AR4225-003", "listing_price": 11995, "sale_price": 9597, "discount": 0, "brand": "Nike", "description": "LeBron works hard in the offseason, getting stronger and fine-tuning his already devastating skills. Inspired by his dedication and commitment to inclusivity, the Soldier 13 SFG combines LeBron-tested cushioning, containment and support with a wide, flexible collar and lace-free closure that lets all players get in and out of the shoe with ease.", "rating": "4.2", "reviews": "6"}, {"product_name": "Nike Phantom Vision 2 Elite Dynamic Fit FG", "product_id": "CD4161-606", "listing_price": 0, "sale_price": 22995, "discount": 0, "brand": "Nike", "description": "The Nike Phantom Vision 2 Elite Dynamic Fit FG brings a new level of fierce precision to the field. A foot-hugging inner sleeve is concealed in a textured Flyknit outer layer to create a boot for the finishers, the providers and the battlers of tomorrow's game.", "rating": "5", "reviews": "1"}, {"product_name": "Nike Air Skarn", "product_id": "CD2189-002", "listing_price": 9995, "sale_price": 6997, "discount": 0, "brand": "Nike", "description": "Hiking shoes don't need to be big and bulky, and the Nike Air Skarn proves it. Originally launched in 1997, this reintroduction of a classic is lightweight, comfortable and tougher than it looks.", "rating": "4.5", "reviews": "2"}, {"product_name": "Nike Air Max 270 SE", "product_id": "CD6615-100", "listing_price": 0, "sale_price": 13995, "discount": 0, "brand": "Nike", "description": "The Nike Air Max 270 SE is inspired by 2 icons of Air: the Air Max 180 and the Air Max 93. It features Nike's biggest heel Air unit yet for a super-soft ride that feels as comfortable as it looks.", "rating": "5", "reviews": "1"}, {"product_name": "Nike SB Blazer Low XT", "product_id": "864348-019", "listing_price": 7995, "sale_price": 6397, "discount": 0, "brand": "Nike", "description": "The Nike SB Blazer Low XT Men's Skateboarding Shoe retools the classic profile for extra-tough sessions, adding lightweight impact protection.", "rating": "5", "reviews": "2"}, {"product_name": "Nike Huarache Type", "product_id": "BQ5102-400", "listing_price": 10995, "sale_price": 6597, "discount": 0, "brand": "Nike", "description": "Part of the N354 family that nods to Steve Prefontaine's fastest mile, the Nike Huarache Type is based on one of the most legendary sneakers from Nike's All Conditions Gear line-up, the Nike Mowabb. Using an adjustable approach to the Huarache system, this shoe is an exploration of fit and comfort.", "rating": "4.5", "reviews": "2"}, {"product_name": "Nike Zoom Vomero 5 SE SP", "product_id": "CI1694-300", "listing_price": 13995, "sale_price": 11197, "discount": 0, "brand": "Nike", "description": "The Nike Zoom Vomero 5 SE SP wraps your foot in breathable support. A combination of durable synthetic leather and breathable mesh stands ready for the rigours of your day. Soft foam and Zoom Air cushioning deliver lightweight comfort for a smooth ride.", "rating": "5", "reviews": "1"}, {"product_name": "Nike Benassi JDI", "product_id": "631261-035", "listing_price": 0, "sale_price": 2795, "discount": 0, "brand": "Nike", "description": "The Nike Benassi JDI Slide features a soft foam midsole and plush, jersey fabric lining the strap. Its heritage logo adds the perfect amount of flash.", "rating": "3", "reviews": "5"}, {"product_name": "Kyrie 6 'Enlightenment'", "product_id": "BQ4630-500", "listing_price": 10995, "sale_price": 8797, "discount": 0, "brand": "Nike", "description": "In spiritual circles, the colour purple represents enlightenment. It speaks to being fully connected to your spiritual mind by tapping into an inner source of potential that was otherwise undiscovered. The Kyrie 6 'Enlightenment' plays up the unseen spirituality theme with an all-seeing eye graphic on the side of the upper and a purple colour scheme.", "rating": "4.4", "reviews": "10"}, {"product_name": "Nike Tiempo Legend 8 Academy IC", "product_id": "AT6099-606", "listing_price": 0, "sale_price": 6495, "discount": 0, "brand": "Nike", "description": "The Nike Tiempo Legend 8 Academy IC takes the legendary touch of calfskin leather and adds cushioning that equips you for the court or the streets. A mesh tongue and collar lining add breathability and street style.", "rating": "5", "reviews": "1"}, {"product_name": "Nike React Presto Premium", "product_id": "CN7664-800", "listing_price": 0, "sale_price": 10995, "discount": 0, "brand": "Nike", "description": "The Nike React Presto Premium features an innovative React foam midsole that delivers a futuristic look and bouncy, lightweight feel for all-day comfort with a whole lot of personality.", "rating": "5", "reviews": "1"}, {"product_name": "Zoom Freak 1 'Employee of the Month'", "product_id": "CD4962-001", "listing_price": 0, "sale_price": 9995, "discount": 0, "brand": "Nike", "description": "Get your freak on in Giannis Antetokounmpo's debut signature shoe, Nike's first ever for the international basketball sensation. The Zoom Freak 1 has the extra-responsive cushioning, forefoot lockdown and multi-directional traction needed to complement his freakishly athletic game.", "rating": "5", "reviews": "1"}, {"product_name": "Nike ZoomX Vaporfly NEXT%", "product_id": "AO4568-600", "listing_price": 0, "sale_price": 19995, "discount": 0, "brand": "Nike", "description": "The Nike ZoomX Vaporfly NEXT% clears your path to record-breaking speed with a lighter design and faster feel than before. With more cushioning underfoot and reduced weight up top, the result is unprecedented energy return and comfort.", "rating": "4.7", "reviews": "45"}, {"product_name": "Nike SB Check", "product_id": "705265-006", "listing_price": 0, "sale_price": 5495, "discount": 0, "brand": "Nike", "description": "Crafted from soft suede, the Nike SB Check is reinforced in key areas for the durability you need to skate all day long.", "rating": "5", "reviews": "1"}, {"product_name": "Nike Air Zoom Structure 22", "product_id": "AA1636-406", "listing_price": 9995, "sale_price": 6997, "discount": 0, "brand": "Nike", "description": "The Nike Air Zoom Structure 22 Men's Running Shoe looks fast and feels secure. Engineered mesh, a heel overlay and dynamic support throughout the midfoot all work together to provide a smooth, stable ride.", "rating": "3.6", "reviews": "10"}, {"product_name": "Nike Drop-Type Mid", "product_id": "BQ5190-101", "listing_price": 6995, "sale_price": 4897, "discount": 0, "brand": "Nike", "description": "Part of the N354 family that nods to Steve Prefontaine's fastest mile, the Nike Drop-Type Mid is inspired by classic tennis shoes in the NikeCourt family. With distinct design lines that borrow from the All Court 2, it puts a raw, experimental edge on an iconic look.", "rating": "5", "reviews": "1"}, {"product_name": "Nike iSPA React", "product_id": "CT2692-002", "listing_price": 0, "sale_price": 13995, "discount": 0, "brand": "Nike", "description": "Utilising the latest innovations and Nike's new iSPA project\u00e2\u20ac\u201dwhich touts a philosophy of improvise, scavenge, protect and adapt\u00e2\u20ac\u201dthe Nike iSPA React takes experimental expression and runs with it. Its low-top design features a tape-like upper nodding to the power of improvisation in the face of adversity.", "rating": "4.6", "reviews": "14"}, {"product_name": "NikeCourt Air Zoom Zero", "product_id": "AA8018-101", "listing_price": 0, "sale_price": 11995, "discount": 0, "brand": "Nike", "description": "Featuring the first full-length Zoom Air unit in NikeCourt history, the NikeCourt Air Zoom Zero delivers exceptional responsiveness and great court feel. Its snug-fitting upper and webbed lacing system offer second-skin-like comfort and lockdown.", "rating": "4.3", "reviews": "10"}, {"product_name": "Nike Air Force Max II", "product_id": "AV6243-400", "listing_price": 0, "sale_price": 13995, "discount": 0, "brand": "Nike", "description": "The game has gone small, so bigs have to be faster, more agile and more versatile to stay relevant. Keeping pace with ever-evolving player needs, the Nike Air Force Max II provides the responsive cushioning that allows big players to keep crashing the boards and banging in the post, while helping them stay light and quick on the break.", "rating": "4.5", "reviews": "2"}, {"product_name": "Nike Air Max 97 SE", "product_id": "AQ4126-100", "listing_price": 15995, "sale_price": 12797, "discount": 0, "brand": "Nike", "description": "The Nike Air Max 97 shook up the running world with its revolutionary full-length Nike Air unit. The Nike Air Max 97 SE Men's Shoe refreshes the original design with new colours and materials.", "rating": "4.5", "reviews": "2"}, {"product_name": "NikeCourt Air Zoom Resistance", "product_id": "918194-003", "listing_price": 6995, "sale_price": 5597, "discount": 0, "brand": "Nike", "description": "The NikeCourt Air Zoom Resistance delivers lightweight durability on the hard court with a performance leather upper.", "rating": "2.5", "reviews": "6"}, {"product_name": "Nike Mercurial Superfly 7 Elite MDS FG", "product_id": "BQ5469-703", "listing_price": 0, "sale_price": 24995, "discount": 0, "brand": "Nike", "description": "Dream of speed and play fast in the Nike Mercurial Superfly 7 Elite MDS FG. A streamlined upper combines with a Nike Aerowtrac zone for high-speed play and supercharged traction.", "rating": "5", "reviews": "1"}, {"product_name": "Nike Solarsoft", "product_id": "488161-602", "listing_price": 0, "sale_price": 1595, "discount": 0, "brand": "Nike", "description": "Made with soft, pliable foam infused with grooves for superb airflow, the Nike Solarsoft Women's Flip Flop is a must-have in warm weather.", "rating": "3.8", "reviews": "5"}, {"product_name": "Air Jordan 11 Retro Low", "product_id": "528895-003", "listing_price": 16995, "sale_price": 11897, "discount": 0, "brand": "Nike", "description": "Since bursting onto the basketball scene in 1996, the Air Jordan 11 Retro Low Men's Shoe has been one of the most beloved Jordan designs ever. Signature details and Nike Air cushioning combine for the ultimate fusion of style and comfort.", "rating": "4.4", "reviews": "25"}, {"product_name": "Nike Zoom Fly 3 Premium", "product_id": "CD4570-300", "listing_price": 0, "sale_price": 14995, "discount": 0, "brand": "Nike", "description": "Inspired by the Vaporfly, the Nike Zoom Fly 3 Premium gives distance runners race-day comfort and durability. The power of a carbon-fibre plate keeps you in the running mile after mile.", "rating": "5", "reviews": "3"}, {"product_name": "Nike Zoom Gravity", "product_id": "BQ3203-007", "listing_price": 7995, "sale_price": 6397, "discount": 0, "brand": "Nike", "description": "Designed to make fast go faster, the Nike Zoom Gravity is built to take you from quick tempo runs to winning races. Snappy forefoot responsiveness and grippy, multi-surface traction combine to optimise your stride.", "rating": "3.7", "reviews": "18"}, {"product_name": "Nike Air Max 720 BETRUE", "product_id": "CJ5472-900", "listing_price": 0, "sale_price": 15995, "discount": 0, "brand": "Nike", "description": "Designed in collaboration with Gilbert Baker, the Nike Air Max 720 BETRUE features a rainbow-coloured upper inspired by, and in celebration of, the LGBTQ community.", "rating": "5", "reviews": "1"}, {"product_name": "Nike Air Force 1 Mid '07", "product_id": "315123-111", "listing_price": 0, "sale_price": 7595, "discount": 0, "brand": "Nike", "description": "The legend lives on in the Nike Air Force 1 Mid '07 Men's Shoe, a modern take on the icon that blends classic style and fresh, crisp details.", "rating": "4.5", "reviews": "13"}, {"product_name": "Nike Air Max 2017", "product_id": "849559-004", "listing_price": 0, "sale_price": 15995, "discount": 0, "brand": "Nike", "description": "The Nike Air Max 2017 Men's Shoe features a seamless Flymesh upper for support and breathability. Iconic Max Air cushioning provides a lightweight, smooth feel with each step, whether you're running your three-miler or running your day.", "rating": "2.9", "reviews": "71"}, {"product_name": "Nike EXP-X14 SE", "product_id": "AO3095-100", "listing_price": 0, "sale_price": 11995, "discount": 0, "brand": "Nike", "description": "\"Drawing inspiration from Nike running shoes such as the Nike Zoom Vaporfly Elite, the Nike EXP-X14 SE Men's Shoe races off the track and onto the street with a fast design and shape. Nike React technology delivers lightweight durability and a smooth feel, while the layered upper showcases Flywire cables and a bold \"\"Just Do It\"\" tagline.\"", "rating": "5", "reviews": "2"}, {"product_name": "Nike x Undercover Air Max 720", "product_id": "CN2408-001", "listing_price": 0, "sale_price": 16995, "discount": 0, "brand": "Nike", "description": "The Nike x Undercover Air Max 720 brings Jun Takahashi's vision of chaos and balance to Air. 360 degrees of cushioning and a breathable design capture Takahashi's view of the future of fashion.", "rating": "4", "reviews": "3"}, {"product_name": "Air Jordan 13 Retro", "product_id": "414571-030", "listing_price": 0, "sale_price": 15995, "discount": 0, "brand": "Nike", "description": "Featuring a panther-inspired design that takes after Michael Jordan's on-court presence, the Air Jordan 13 Retro is based on the OG model and has the same responsive cushioning and premium materials that made it famous in the '90s.", "rating": "3.9", "reviews": "34"}, {"product_name": "Nike Cortez '72 S.D.", "product_id": "CJ2586-100", "listing_price": 7995, "sale_price": 4797, "discount": 0, "brand": "Nike", "description": "\"Inspired by Phil Knight's \"\"Shoe Dog\"\"", "rating": " the Nike Cortez '72 S.D. returns to the OG design with zigzag edges", "reviews": " an exposed foam tongue and minimalist leather. Why? Because you don't change what works.\""}, {"product_name": "Nike Xarr", "product_id": "BQ5240-200", "listing_price": 12995, "sale_price": 9097, "discount": 0, "brand": "Nike", "description": "The Nike Xarr sets you up to take on the elements in style. It's crafted with a water-resistant leather upper to help keep you dry and a rubber outsole to combat the season's wet conditions. With intricate detailing and a stylised tongue cover, it's a fresh new look with lots of attitude.", "rating": "4.8", "reviews": "4"}, {"product_name": "Nike Air Force 1 GORE-TEX \u00c2\u00ae", "product_id": "CK2630-700", "listing_price": 12995, "sale_price": 9097, "discount": 0, "brand": "Nike", "description": "The Nike Air Force 1 GORE-TEX \u00c2\u00ae retools the classic Air Force 1 with a street-approved design that meets the standards of GORE-TEX \u00c2\u00ae waterproof technology. It features water-wicking flat laces, a GORE-TEX \u00c2\u00ae bootie and GORE-TEX \u00c2\u00ae branding on the heel.", "rating": "4.1", "reviews": "18"}, {"product_name": "Kyrie 6 EP 'Chinese New Year'", "product_id": "CD5029-001", "listing_price": 0, "sale_price": 10995, "discount": 0, "brand": "Nike", "description": "According to the four-year cycle of the Chinese zodiac, the year of the mouse represents growth. Through the folk-art tradition of Jianzhi (paper cutting), the Kyrie 6 'Chinese New Year' honours major breakthroughs in Nike innovation with a graphic on the tongue. A watercolour-themed print completes the art-inspired CNY theme.", "rating": "5", "reviews": "1"}, {"product_name": "Nike Zoom KD12", "product_id": "CK1195-101", "listing_price": 0, "sale_price": 12995, "discount": 0, "brand": "Nike", "description": "Kevin Durant always looks relaxed\u00e2\u20ac\u201duntil he attacks. His game is reserved yet explosive, difficult to guard and impossible to stop. The KD12 was built for his dominance and endless energy all game long, with the latest innovation in Nike Zoom Air technology.", "rating": "5", "reviews": "1"}, {"product_name": "Nike Epic React Flyknit 2", "product_id": "BQ8928-011", "listing_price": 12995, "sale_price": 10397, "discount": 0, "brand": "Nike", "description": "The Nike Epic React Flyknit 2 takes a step up from its predecessor with smooth, lightweight performance and a bold look. An updated Flyknit upper contours to your foot with a minimal, supportive design. Underfoot, durable Nike React technology defies the odds by being both soft and responsive, for comfort that lasts as long as you can run.", "rating": "4.1", "reviews": "72"}, {"product_name": "Nike MX-720-818", "product_id": "BV5841-800", "listing_price": 0, "sale_price": 15995, "discount": 0, "brand": "Nike", "description": "Disrupt the universe in your Nike MX-720-818. Featuring materials inspired by spacesuits and quilted stitching on the upper, it takes the largest Air unit to date and blends it with the futuristic look of the final frontier. Mesh on the upper keeps your feet cool while the clear sole features the black and grey reminiscent of deep space.", "rating": "4", "reviews": "1"}, {"product_name": "Nike Air Streak Lite", "product_id": "CD4387-100", "listing_price": 0, "sale_price": 8995, "discount": 0, "brand": "Nike", "description": "The Nike Air Streak Lite puts minimalist style back into the spotlight. Originally created by Nike's first Japanese creation team in 1995, this lightweight, sleek silhouette pushes footwear to a different space.", "rating": "5", "reviews": "1"}, {"product_name": "Nike SB Zoom Stefan Janoski Canvas RM Premium", "product_id": "AQ7878-003", "listing_price": 0, "sale_price": 7995, "discount": 0, "brand": "Nike", "description": "The Nike SB Zoom Stefan Janoski Canvas RM Premium pairs a minimal look with a modern fit. It has been updated with a new, plush sockliner and a flexible outsole for better boardfeel right out of the box.", "rating": "1", "reviews": "1"}, {"product_name": "Nike Wildhorse 6", "product_id": "BV7106-400", "listing_price": 0, "sale_price": 9995, "discount": 0, "brand": "Nike", "description": "The Nike Wildhorse 6 keeps it stable, secure and lightweight on the trail. An updated outsole delivers the traction you need, while a foam midsole keeps you cushioned on your run.", "rating": "4.7", "reviews": "3"}, {"product_name": "Nike Air Zoom Pegasus 36", "product_id": "AQ2210-002", "listing_price": 0, "sale_price": 9995, "discount": 0, "brand": "Nike", "description": "The iconic Nike Air Zoom Pegasus 36 returns with more perforations and engineered mesh in the upper for targeted breathability across high-heat areas. A slimmer heel collar and tongue reduce bulk without compromising comfort, while exposed Flywire cables give you a snug fit at higher speeds.", "rating": "4.4", "reviews": "19"}, {"product_name": "Nike Air Zoom Wildhorse 5", "product_id": "AQ2222-200", "listing_price": 0, "sale_price": 8995, "discount": 0, "brand": "Nike", "description": "Built specifically for trails, the Nike Air Zoom Wildhorse 5 keeps you galloping over rough terrain in breathable, multi-layer fabric. A rock plate helps shield your foot, while a Zoom Air heel unit cushions your stride on and off the path.", "rating": "5", "reviews": "6"}, {"product_name": "Nike Air Max 720 Waves", "product_id": "BQ4430-400", "listing_price": 15995, "sale_price": 11197, "discount": 0, "brand": "Nike", "description": "Bring a new point of view to off-court culture in your Nike Air Max 720 Waves. Its low-profile stance showcases Nike's tallest Air unit to date while its D/MS/X design mixes culture with sport, letting you enter a fresh dimension of hoops style with unparalleled comfort.", "rating": "5", "reviews": "4"}, {"product_name": "Nike Benassi JDI BETRUE", "product_id": "CD2717-001", "listing_price": 0, "sale_price": 4495, "discount": 0, "brand": "Nike", "description": "The Nike Benassi JDI BETRUE Slide creates lightweight comfort in a classic design, while the soft foam sole cushions your every step.", "rating": "4.3", "reviews": "3"}, {"product_name": "Kyrie 4", "product_id": "943806-602", "listing_price": 0, "sale_price": 10995, "discount": 0, "brand": "Nike", "description": "The Kyrie 4 Men's Basketball Shoe is ultra-flexible, responsive and supportive. It's designed for Kyrie Irving's sudden changes of direction and smooth yet rapid playing style.", "rating": "4.1", "reviews": "19"}, {"product_name": "Air Jordan 5 Retro", "product_id": "CN2932-100", "listing_price": 0, "sale_price": 18995, "discount": 0, "brand": "Nike", "description": "The Air Jordan 5 Retro brings back the original that was inspired by WWII fighter planes, featuring a mid-top profile and synthetic leather. An inner-sleeve creates a snug, comfortable feel.", "rating": "4.6", "reviews": "8"}, {"product_name": "Nike Drop-Type Premium", "product_id": "CN6916-100", "listing_price": 0, "sale_price": 6995, "discount": 0, "brand": "Nike", "description": "The Nike Drop-Type Premium is inspired by classic tennis shoes in the NikeCourt family. Part of the N354 family that nods to Steve Prefontaine's fastest mile, it offers distinct design lines that borrow from the All Court 2.", "rating": "4", "reviews": "6"}, {"product_name": "Nike React Metcon", "product_id": "BQ6044-100", "listing_price": 0, "sale_price": 12995, "discount": 0, "brand": "Nike", "description": "The Nike React Metcon takes the stability and traction from the training original and pairs it with Nike's most comfortable cushioning. Tackle high-impact and lifting workouts with a light, breathable upper and durable grip to keep you going.", "rating": "3.9", "reviews": "10"}, {"product_name": "Nike Joyride Dual Run", "product_id": "CD4365-003", "listing_price": 10995, "sale_price": 7697, "discount": 0, "brand": "Nike", "description": "The Nike Joyride Dual Run blazes its own route. Tiny foam beads underfoot combined with traditional cushioning in the forefoot give an incredibly smooth feel that contours to your foot.", "rating": "4.3", "reviews": "3"}, {"product_name": "Nike Classic Cortez", "product_id": "749571-154", "listing_price": 0, "sale_price": 6595, "discount": 0, "brand": "Nike", "description": "The Nike Classic Cortez Shoe is Nike's original running shoe, designed by Bill Bowerman and released in 1972. This version features a leather and synthetic leather construction for added durability.", "rating": "4.2", "reviews": "5"}, {"product_name": "Nike React Element 55 Premium", "product_id": "CI3835-002", "listing_price": 11995, "sale_price": 7197, "discount": 0, "brand": "Nike", "description": "The Nike React Element 55 borrows design lines from heritage runners like the Nike Internationalist, then places it all on Nike React technology.", "rating": "5", "reviews": "1"}, {"product_name": "Nike Joyride CC", "product_id": "AO1742-004", "listing_price": 11995, "sale_price": 8397, "discount": 0, "brand": "Nike", "description": "Lounge wherever you go and let the Nike Joyride CC take you into a new world of cosy by placing your feet directly on the soft cushioning of its innovative bead-pods. Bold colour-blocking and exaggerated textures add unrivalled depth to your fun, edgy attitude.", "rating": "5", "reviews": "4"}, {"product_name": "Nike Zoom Fly Flyknit", "product_id": "AR4561-200", "listing_price": 0, "sale_price": 15995, "discount": 0, "brand": "Nike", "description": "Nike Zoom Fly Flyknit Men's Running Shoe is built for record-breaking speed. The Flyknit upper delivers ultra-lightweight support that fits like a glove.", "rating": "4.2", "reviews": "42"}, {"product_name": "Nike Air Max Tailwind IV SP", "product_id": "BV1357-003", "listing_price": 15995, "sale_price": 9597, "discount": 0, "brand": "Nike", "description": "The Nike Air Max Tailwind IV SP gives a new look to the '90s classic. Max Air units give you comfort and style that last.", "rating": "3", "reviews": "5"}, {"product_name": "Jordan Proto-Lyte", "product_id": "AT3381-008", "listing_price": 7995, "sale_price": 6397, "discount": 0, "brand": "Nike", "description": "Featuring soft foam cushioning and lightweight, woven fabric in the upper, the Jordan Proto-Lyte is made for all-day, bouncy comfort.", "rating": "2.4", "reviews": "5"}, {"product_name": "Nike Mercurial Superfly 7 Academy TF", "product_id": "AT7978-414", "listing_price": 8495, "sale_price": 5947, "discount": 0, "brand": "Nike", "description": "The soft upper of the Nike Mercurial Superfly 7 Academy TF Shoe wraps your foot for a second-skin fit, while the rubber outsole helps supercharge traction on turf.", "rating": "5", "reviews": "1"}, {"product_name": "Nike x Hawkins High Cortez", "product_id": "CJ6106-100", "listing_price": 0, "sale_price": 9995, "discount": 0, "brand": "Nike", "description": "\"Nodding to Hawkins High from the hit TV show \"\"Stranger Things\"\"", "rating": " the Nike x Hawkins High Cortez combines premium materials laid out using the Tiger Pride green and orange with hidden details and show references throughout", "reviews": " including three distinct \"\"Stranger Things\"\" pins.\""}, {"product_name": "Nike Air Max 2090", "product_id": "CT7695-401", "listing_price": 0, "sale_price": 11995, "discount": 0, "brand": "Nike", "description": "Bring the past into the future with the Nike Air Max 2090, a bold look inspired by the DNA of the iconic Air Max 90. Brand-new Nike Air cushioning underfoot adds unparalleled comfort while transparent fabric on the upper is blended with timeless OG features for an edgy, modernised look.", "rating": "4.8", "reviews": "4"}, {"product_name": "Nike Phantom Vision Academy Dynamic Fit MG", "product_id": "AO3258-080", "listing_price": 8495, "sale_price": 5947, "discount": 0, "brand": "Nike", "description": "The Nike Phantom Vision Academy Dynamic Fit MG brings the fierce precision of street play to the pitch. A foot-hugging sleeve has a custom feel and the Ghost Laces system tights with 1 pull and is hidden for a bigger striking surface.", "rating": "4", "reviews": "5"}, {"product_name": "NikeCourt Air Max Vapor Wing MS", "product_id": "BQ0129-106", "listing_price": 0, "sale_price": 6495, "discount": 0, "brand": "Nike", "description": "The NikeCourt Air Max Vapor Wing MS is the perfect pairing of style and comfort for your match. Translucent textile shows off the technology within, while rubber on the toe increases durability. An Air Max unit provides legendary, lightweight cushioning.", "rating": "3.5", "reviews": "2"}, {"product_name": "LeBron x John Elliott Icon", "product_id": "AQ0114-101", "listing_price": 0, "sale_price": 19995, "discount": 0, "brand": "Nike", "description": "The LeBron x John Elliott Icon brings the clean and layered approach of a lifestyle shoe to a hardwood classic. Cushioning from the LeBron 8 combines with court-inspired details and translucent materials as a tribute to Elliott's favourite shoe in the series. The result: Power, unleashed.", "rating": "4.8", "reviews": "6"}, {"product_name": "Nike Air Max 270 Flyknit", "product_id": "AO1023-005", "listing_price": 0, "sale_price": 15995, "discount": 0, "brand": "Nike", "description": "Feel the Air, both above and below, with the Nike Air Max 270 Flyknit Men's Shoe. It features Nike's biggest heel Air unit yet, plus an ultra-breathable Flyknit upper that helps keep you cool when the temperatures rise. Classic colour combinations nod to iconic Air Max models of the past, delivering a modern, streamlined look that's rooted in Nike sneaker heritage.", "rating": "4.4", "reviews": "10"}, {"product_name": "Air Jordan 13 Retro Chinese New Year", "product_id": "CW4409-100", "listing_price": 0, "sale_price": 19995, "discount": 0, "brand": "Nike", "description": "\"Michael Jordan's stealthy creativity on the court earned him the nickname \"\"Black Cat\"\". The Air Jordan 13 Retro is based on the OG model and has responsive cushioning and premium materials. This version features special details to honour the Chinese New Year.\"", "rating": "5", "reviews": "1"}, {"product_name": "Nike Zoom Pegasus Turbo Shield", "product_id": "BQ1896-002", "listing_price": 17995, "sale_price": 12597, "discount": 0, "brand": "Nike", "description": "The Nike Zoom Pegasus Turbo Shield delivers your favourite lightweight running shoe in a smart, weatherised design, so you can continue training in confidence despite those dark and rainy months.", "rating": "4.1", "reviews": "11"}, {"product_name": "Nike Air Wildwood ACG", "product_id": "AO3116-004", "listing_price": 8995, "sale_price": 5397, "discount": 0, "brand": "Nike", "description": "From rain and mud to sunny afternoons, the Wildwood debuted in 1989 as a direct descendent of the Nike Escape. With design influence from the Pegasus, it was designed as an off-road sneaker meant to take you through rough terrain. The special sawtooth Waffle outsole was further proof that conquering bad weather didn't mean drabness.", "rating": "3.4", "reviews": "7"}, {"product_name": "LeBron 16 Low", "product_id": "CI2668-004", "listing_price": 13995, "sale_price": 11197, "discount": 0, "brand": "Nike", "description": "LeBron is unstoppable on the court and just as influential off of it. The year 2003, LeBron's rookie season and a pivotal year in culture, inspires the LeBron 16 Low. It is powered by Max Air and Zoom Air cushioning technologies, and embodies his clout and versatility.", "rating": "4.7", "reviews": "17"}, {"product_name": "Air Jordan 14 Retro", "product_id": "487471-003", "listing_price": 17995, "sale_price": 14397, "discount": 0, "brand": "Nike", "description": "The Air Jordan 14 Retro has class, comfort and the singular look of the original, with heritage-inspired colours, full-grain leather and responsive Zoom Air cushioning.", "rating": "4.2", "reviews": "12"}, {"product_name": "Nike Free RN Flyknit 3.0", "product_id": "AQ5708-201", "listing_price": 10995, "sale_price": 6597, "discount": 0, "brand": "Nike", "description": "Never worry about laces in the Nike Free RN Flyknit 3.0. This remix leaves them out\u00e2\u20ac\u201dletting you slip in quickly and hit your stride even faster. Supportive yarns join stretchy Flyknit for a lightweight upper that feels like a second skin. Heel-to-toe grooves in outsole move and bend with every stride.", "rating": "4.1", "reviews": "13"}, {"product_name": "Nike SB Air Max Stefan Janoski 2", "product_id": "AQ7477-009", "listing_price": 0, "sale_price": 9995, "discount": 0, "brand": "Nike", "description": "The Nike SB Air Max Stefan Janoski 2 hugs your foot with a breathable textile upper. A Max Air unit in the heel cushions every step, while a flat rubber outsole optimises grip when you're on your board.", "rating": "2.6", "reviews": "11"}, {"product_name": "Nike Air Zoom Pegasus 36 Trail", "product_id": "AR5676-401", "listing_price": 0, "sale_price": 10995, "discount": 0, "brand": "Nike", "description": "An icon hits the paths less travelled in the Nike Air Zoom Pegasus 36 Trail. Perforated mesh upper offers breathable comfort, and double Zoom Air units cushion your stride. Outsole lugs optimise traction when running uphill.", "rating": "4.2", "reviews": "9"}, {"product_name": "Nike Tiempo Legend 8 Club IC", "product_id": "AT6110-004", "listing_price": 4495, "sale_price": 3147, "discount": 0, "brand": "Nike", "description": "The Nike Tiempo Legend 8 Club IC takes the touch of textured synthetic leather and adds a grippy rubber outsole for multi-directional traction.", "rating": "2", "reviews": "1"}, {"product_name": "Nike Flex TR 9", "product_id": "AQ7491-008", "listing_price": 0, "sale_price": 5495, "discount": 0, "brand": "Nike", "description": "Designed for low-impact workouts and circuit training, the Nike Flex TR 9 pairs a breathable mesh and synthetic upper with a supportive platform designed for flexibility and traction.", "rating": "2.9", "reviews": "8"}, {"product_name": "Nike Epic Phantom React", "product_id": "CI1291-400", "listing_price": 13995, "sale_price": 8397, "discount": 0, "brand": "Nike", "description": "\"Soft to the touch, the Nike Epic Phantom React lets go of laces for a slip-on style that gets you up and running in no time. A snug, secure, sock-like fit within a breathable Flyknit and synthetic upper feels as though the Phantom \"\"disappears\"\" as you run.\"", "rating": "5", "reviews": "3"}, {"product_name": "Nike Metcon 5 AMP", "product_id": "CN5455-160", "listing_price": 0, "sale_price": 11995, "discount": 0, "brand": "Nike", "description": "The Nike Metcon 5 AMP arms you with stability for heavy lifting and traction for sprints during high-impact training. It combines breathability and durability to be your secret weapon in the gym.", "rating": "4.5", "reviews": "2"}, {"product_name": "Nike SB Air Zoom Bruin Edge", "product_id": "CD5036-100", "listing_price": 0, "sale_price": 7995, "discount": 0, "brand": "Nike", "description": "The Nike SB Air Zoom Bruin Edge puts a DIY spin on an iconic skate shoe. Frayed stitching, exposed foam and a mix of materials create a patched look that's built to perform. Stencils are included so you can take the DIY look to the next level.", "rating": "5", "reviews": "1"}, {"product_name": "Nike x Undercover React Presto", "product_id": "CU3459-200", "listing_price": 0, "sale_price": 15995, "discount": 0, "brand": "Nike", "description": "Jun Takahashi's vision of chaos and balance continues with the Nike x Undercover React Presto. An OG Presto design uses new details that pay homage to last season's collaboration, the React Boot.", "rating": "5", "reviews": "1"}, {"product_name": "Nike Signal D/MS/X", "product_id": "AT5303-100", "listing_price": 10995, "sale_price": 7697, "discount": 0, "brand": "Nike", "description": "Inspired by the chopping, cutting and rebuilding of custom cars and bikes, the Nike Signal D/MS/X overturns the idea of sportswear with style and attitude. With layered materials and intricate detailing, it uses innovations in an irreverent way that's more aesthetic than athletic.", "rating": "2.7", "reviews": "3"}, {"product_name": "Nike Air Max 720 (OBJ)", "product_id": "CK2531-001", "listing_price": 16995, "sale_price": 13597, "discount": 0, "brand": "Nike", "description": "Disrupt the atmosphere and let your light shine in the Nike Air Max 720 (OBJ), featuring Nike's tallest Air unit yet. Its colours take inspiration from the natural world, a counterpoint to the shoe's futuristic look.", "rating": "5", "reviews": "5"}, {"product_name": "Nike Vandalised LX", "product_id": "BQ3611-100", "listing_price": 10995, "sale_price": 8797, "discount": 0, "brand": "Nike", "description": "The Nike Vandalised LX hacks Nike DNA for a totally new spin on the original 1984 Nike Vandal, a basketball classic. Rearranging all the components creates a bold new look with asymmetrical details.", "rating": "5", "reviews": "1"}, {"product_name": "Nike Flex RN 2019", "product_id": "AQ7487-201", "listing_price": 0, "sale_price": 6995, "discount": 0, "brand": "Nike", "description": "With a stretchable knit in the upper, the Nike Flex RN 2019 makes every run comfortable as it expands and contracts along with your foot. Dual-density foam gives you cushioned comfort for pounding out the miles, while grooves in the outsole provide flexibility from heel to toe.", "rating": "3.8", "reviews": "6"}, {"product_name": "Nike Free RN 5.0", "product_id": "AQ1289-003", "listing_price": 7995, "sale_price": 5597, "discount": 0, "brand": "Nike", "description": "Ideal for runs up to 3 miles, the Nike Free RN 5.0 returns to its roots as a natural motion shoe. An updated flex groove pattern and modified midsole foam provides more flexibility than its predecessor, creating a barefoot sensation with every step. At the upper, breathable and stretchy mesh moves with your foot, while synthetic suede overlays provide stable support.", "rating": "3.9", "reviews": "25"}, {"product_name": "NikeCourt Air Max Vapor Wing MS", "product_id": "BQ0129-106", "listing_price": 0, "sale_price": 6495, "discount": 0, "brand": "Nike", "description": "The NikeCourt Air Max Vapor Wing MS is the perfect pairing of style and comfort for your match. Translucent textile shows off the technology within, while rubber on the toe increases durability. An Air Max unit provides legendary, lightweight cushioning.", "rating": "3.5", "reviews": "2"}, {"product_name": "Nike Air Max 90 NS SE", "product_id": "881105-800", "listing_price": 9995, "sale_price": 7997, "discount": 0, "brand": "Nike", "description": "The Nike Air Max 90 SE Women's Shoe combines classic design lines with rich materials for an elevated look that's true to the original.", "rating": "5", "reviews": "2"}, {"product_name": "Nike React Vision", "product_id": "CI7523-002", "listing_price": 0, "sale_price": 10995, "discount": 0, "brand": "Nike", "description": "The Nike React Vision is a story of surreal comfort. Layered textures, shapes and vivid colours are combined in a design influenced by the exaggerated world of our dreams, while React foam and an ultra-plush tongue provide surreal comfort. DIMSIX on the tongue tab rises high off the collar to add just a touch of Nike's own origin story.", "rating": "4.3", "reviews": "3"}, {"product_name": "Nike Air Max 2090", "product_id": "CT7698-600", "listing_price": 0, "sale_price": 11995, "discount": 0, "brand": "Nike", "description": "Bring the past into the future with the Nike Air Max 2090, a bold look inspired by the DNA of the iconic Air Max 90. Brand-new Nike Air cushioning underfoot adds unparalleled comfort while transparent knit and vibrantly coloured textiles on the upper blend with timeless OG features for an edgy, modernised look.", "rating": "5", "reviews": "2"}, {"product_name": "Nike Air Max Dia Winter", "product_id": "BQ9665-301", "listing_price": 0, "sale_price": 10995, "discount": 0, "brand": "Nike", "description": "Designed specifically for a woman's foot, the Nike Air Max Dia Winter delivers a lifted and airy aesthetic in a sleek shape. The minimal upper modernises the look, while a Max Air unit is amplified even further by an exaggerated midsole for a boost of style.", "rating": "4.4", "reviews": "5"}, {"product_name": "Nike Zoom Pegasus Turbo 2", "product_id": "BV7766-100", "listing_price": 15995, "sale_price": 12797, "discount": 0, "brand": "Nike", "description": "The Nike Zoom Pegasus Turbo 2 is updated with a feather-light upper, while innovative foam brings revolutionary responsiveness to your long-distance training.", "rating": "2.7", "reviews": "3"}, {"product_name": "Nike SB Shane", "product_id": "BV0657-400", "listing_price": 0, "sale_price": 6495, "discount": 0, "brand": "Nike", "description": "Shane O'Neill put the same attention to detail into every aspect of his signature shoe as he does in his almost otherworldly skating. From the low-key perforated ventilation at the toe, to the double lacing option and the no-break-in remastered sole, the Nike SB Shane gets all the details right.", "rating": "4.7", "reviews": "3"}, {"product_name": "Nike Air VaporMax 360", "product_id": "CK2719-400", "listing_price": 0, "sale_price": 18995, "discount": 0, "brand": "Nike", "description": "Featuring a full-length foam midsole and VaporMax Air unit, the Nike Air VaporMax 360 gives you remarkable underfoot comfort with bold 2000s style inspired by the Air Max 360.", "rating": "2.2", "reviews": "5"}, {"product_name": "Nike Air Max FF 720", "product_id": "AO3189-600", "listing_price": 18995, "sale_price": 13297, "discount": 0, "brand": "Nike", "description": "Part shoe, part sandal, the Nike Air Max FF 720 takes you into a new realm of Air. Built specifically for a woman's foot, it features premium leather on heightened foam for bold versatility and unbelievable comfort. Cinch it up with its unique drawcord system and make the streets your runway.", "rating": "3.5", "reviews": "6"}, {"product_name": "Jordan Proto-Max 720", "product_id": "BQ6623-070", "listing_price": 15995, "sale_price": 12797, "discount": 0, "brand": "Nike", "description": "Inspired by outer space flight, the Jordan Proto-Max 720 provides all-day comfort with a future-forward look. An outer shroud covers the sock-like bootie construction, while Nike Air cushions every step.", "rating": "4.4", "reviews": "18"}, {"product_name": "Nike Joyride Run Flyknit", "product_id": "AQ2731-500", "listing_price": 14995, "sale_price": 11997, "discount": 0, "brand": "Nike", "description": "The Nike Joyride Run Flyknit is designed to help make running feel easier and give your legs a day off. Tiny foam beads underfoot contour to your foot for cushioning that stands up to your mileage.", "rating": "4.4", "reviews": "26"}, {"product_name": "Nike Odyssey React Flyknit 2", "product_id": "AH1016-602", "listing_price": 9995, "sale_price": 5997, "discount": 0, "brand": "Nike", "description": "The Nike Odyssey React Flyknit 2 Women's Running Shoe delivers a strategic combination of lightweight Flyknit and synthetic material for support just where you need it. Underfoot, Nike React cushioning delivers a soft, springy ride for a route that begs to be crushed.", "rating": "3.4", "reviews": "26"}, {"product_name": "Nike React Element 55 SE", "product_id": "CN3591-002", "listing_price": 0, "sale_price": 11995, "discount": 0, "brand": "Nike", "description": "The Nike React Element 55 SE borrows design lines from heritage runners like the Nike Internationalist, adds reflective graphics and combines it with Nike React technology for a smooth ride.", "rating": "5", "reviews": "1"}, {"product_name": "Nike Air Max Dia LX", "product_id": "CI1214-004", "listing_price": 9995, "sale_price": 7997, "discount": 0, "brand": "Nike", "description": "Designed specifically for a woman's foot, the Nike Air Max Dia LX delivers a lifted and airy aesthetic in a new, sleek shape. The minimal upper modernises your look, while the Max Air unit, surrounded by clear plastic, elevates your style.", "rating": "1", "reviews": "1"}, {"product_name": "Nike Metcon 5", "product_id": "AQ1189-009", "listing_price": 0, "sale_price": 10995, "discount": 0, "brand": "Nike", "description": "The Nike Metcon 5 is our most tuned Metcon yet. This means specific stability for heavy lifting, traction made for speed and durability where you need it. It even includes a Hyperlift insert that's compatible with all prior versions of the Metcon. Meet your secret weapon for weight-lifting and high-impact training.", "rating": "3.7", "reviews": "31"}, {"product_name": "Nike Benassi", "product_id": "343880-090", "listing_price": 0, "sale_price": 2495, "discount": 0, "brand": "Nike", "description": "The Nike Benassi Slide features a lined upper with a bold logo for plush comfort and an athletic look. A foam midsole and outsole provide lightweight impact protection.", "rating": "4.1", "reviews": "33"}, {"product_name": "Nike Zoom KD12 'YouTube'", "product_id": "CQ7731-900", "listing_price": 12995, "sale_price": 10397, "discount": 0, "brand": "Nike", "description": "Breaking new ground for athletes, KD provides unprecedented access to his life through his YouTube channel. It's this type of authentic connection that KD wanted to create with his fans when he first partnered with YouTube in 2017. In celebration of his channel, the KD12 'YouTube' features co-branded graphic hits on the tongue and heel that celebrate two icons coming together to change the game.", "rating": "4.6", "reviews": "5"}, {"product_name": "Nike Air Force 1 React", "product_id": "CD4366-002", "listing_price": 0, "sale_price": 9995, "discount": 0, "brand": "Nike", "description": "\"Refresh your look and step into a new AF-1 world with the Nike Air Force 1 React. It fuses modern design with iconic b-ball style for a big, bold look. The oversized Swoosh, large \"\"AIR\"\" on the midsole and new sole pattern let you express your modern world while Nike React technology adds exceptional underfoot comfort.\"", "rating": "4.8", "reviews": "4"}, {"product_name": "Nike Air Max 90", "product_id": "CI5646-200", "listing_price": 11995, "sale_price": 9597, "discount": 0, "brand": "Nike", "description": "The Nike Air Max 90 stays true to its OG running roots with the iconic Waffle sole. Details and colours nod to the classic Lahar Escape Boot, delivering a vintage look from the wild.", "rating": "4.8", "reviews": "5"}, {"product_name": "Nike Air Zoom Pegasus 36", "product_id": "CD4573-001", "listing_price": 0, "sale_price": 10995, "discount": 0, "brand": "Nike", "description": "The iconic Nike Air Zoom Pegasus 36 returns with more perforations and mesh in the upper for targeted breathability across high-heat areas. A slimmer heel collar and tongue reduces bulk without compromising comfort, while exposed cables give you a snug fit at higher speeds.", "rating": "5", "reviews": "2"}, {"product_name": "Nike Zoom Fly 3", "product_id": "AT8241-002", "listing_price": 0, "sale_price": 13995, "discount": 0, "brand": "Nike", "description": "Inspired by the Vaporfly, the Nike Zoom Fly 3 gives distance runners race-day comfort and durability. The power of a carbon-fibre plate and responsive cushioning keeps you in the running mile after mile.", "rating": "4.8", "reviews": "12"}, {"product_name": "Nike Air Force 1 Shadow", "product_id": "CI0919-100", "listing_price": 0, "sale_price": 8995, "discount": 0, "brand": "Nike", "description": "The Nike Air Force 1 Shadow pays homage to the women who are setting an example for the next generation by being forces of change in their community. This sneaker reflects this ethos in its design with double the Swoosh, double the height and double the force.", "rating": "4.8", "reviews": "20"}, {"product_name": "Nike Air Max Tailwind IV", "product_id": "AQ2567-002", "listing_price": 13995, "sale_price": 8397, "discount": 0, "brand": "Nike", "description": "The Nike Air Max Tailwind IV gives a new look to the '90s classic. Max Air units give you comfort and style that last.", "rating": "5", "reviews": "1"}, {"product_name": "Nike Potential 3", "product_id": "844127-108", "listing_price": 0, "sale_price": 4495, "discount": 0, "brand": "Nike", "description": "The Nike Potential 3 Unisex Cricket Shoe delivers lightweight cushioning and superb grip on the field with a Phylon midsole and rubber outsole.", "rating": "5", "reviews": "1"}, {"product_name": "Nike x Olivia Kim Air Max 98", "product_id": "CK3309-001", "listing_price": 15995, "sale_price": 11197, "discount": 0, "brand": "Nike", "description": "NYC in the '90s\u00e2\u20ac\u201dif you spent much time in one of the many neighbourhoods, you'd hear SUVs driving around bumping Jamaican dancehall music at full blast. The Nike x Olivia Kim Air Max 98 celebrates the music and culture of NYC as remembered by designer Olivia. The fresh red-yellow-green take on the iconic Air Max 98 captures the vibrancy of the city's Rastafarian community.", "rating": "4.5", "reviews": "2"}, {"product_name": "NikeCourt Royale", "product_id": "749747-010", "listing_price": 4495, "sale_price": 3597, "discount": 0, "brand": "Nike", "description": "Taking inspiration from the archives, the NikeCourt Royale Men's Shoe brings retro tennis style in a modern package for everyday comfort.", "rating": "1.5", "reviews": "2"}, {"product_name": "Nike Air Huarache", "product_id": "634835-108", "listing_price": 0, "sale_price": 8995, "discount": 0, "brand": "Nike", "description": "Designed to stretch with your foot, the Nike Air Huarache Women's Shoe has remained a sneaker staple since its 1991 debut, when it changed the face of running footwear forever.", "rating": "4.5", "reviews": "63"}, {"product_name": "Nike Phantom Venom Academy FG", "product_id": "AO0566-606", "listing_price": 0, "sale_price": 7495, "discount": 0, "brand": "Nike", "description": "The Nike Phantom Venom Academy FG is engineered for powerful, precise strikes that win games. Ridges on the instep create spin to control the flight of the ball, while the firm-ground plate provides the traction needed to unleash at any moment.", "rating": "2.8", "reviews": "5"}, {"product_name": "Nike Phantom Vision 2 Elite Dynamic Fit FG", "product_id": "CD4161-606", "listing_price": 0, "sale_price": 22995, "discount": 0, "brand": "Nike", "description": "The Nike Phantom Vision 2 Elite Dynamic Fit FG brings a new level of fierce precision to the field. A foot-hugging inner sleeve is concealed in a textured Flyknit outer layer to create a boot for the finishers, the providers and the battlers of tomorrow's game.", "rating": "5", "reviews": "1"}, {"product_name": "Nike Air Force 1 Mid '07", "product_id": "366731-100", "listing_price": 7895, "sale_price": 6317, "discount": 0, "brand": "Nike", "description": "The legend lives on in the Nike Air Force 1 Mid '07 Women's Shoe, a modern take on the icon that blends classic style and fresh, crisp details.", "rating": "3.8", "reviews": "4"}, {"product_name": "Nike Air Force 1 '07 Premium", "product_id": "BQ4424-700", "listing_price": 10995, "sale_price": 7697, "discount": 0, "brand": "Nike", "description": "The Nike Air Force 1 '07 Premium captures the iconic look of its 1982 predecessor, with full-length cushioning for comfort and premium detailing that honours the original. A rich mix of materials gives an eye-catching look that's ready to hit the streets.", "rating": "5", "reviews": "1"}, {"product_name": "Air Jordan 12 Retro", "product_id": "130690-017", "listing_price": 0, "sale_price": 15995, "discount": 0, "brand": "Nike", "description": "An all-time favourite among players and sneakerheads, the Air Jordan 12 Retro features full-length Zoom Air cushioning and full-grain leather styled with distinct radial stitch lines.", "rating": "4.5", "reviews": "24"}, {"product_name": "Nike Air Max 98 LX", "product_id": "AV4417-002", "listing_price": 15995, "sale_price": 12797, "discount": 0, "brand": "Nike", "description": "Always one step ahead, the Nike Air Max 98 LX features the OG design lines that were inspired by the walls of the Grand Canyon while stepping into the future with a colourful medley of recycled materials on the upper. The fluid, textured look and full-length Nike Air cushioning set you apart as you turn waste into style.", "rating": "4.5", "reviews": "6"}, {"product_name": "Nike Phantom Venom Academy TF", "product_id": "AO0571-606", "listing_price": 0, "sale_price": 7495, "discount": 0, "brand": "Nike", "description": "The Nike Phantom Venom Academy TF is engineered for powerful, precise strikes that win games. Ridges on the instep help create spin to control the flight of the ball. The sole provides the turf traction needed to unleash at any moment.", "rating": "5", "reviews": "1"}, {"product_name": "Nike SB Dunk High Pro", "product_id": "BQ6826-003", "listing_price": 0, "sale_price": 8995, "discount": 0, "brand": "Nike", "description": "The Nike SB Dunk High Pro pairs iconic Dunk style with a high-top design for a fresh look. A Zoom Air unit in the heel and a padded tongue create a comfortable fit that's made to skate.", "rating": "4.8", "reviews": "4"}, {"product_name": "Nike Phantom Vision Academy Dynamic Fit MG", "product_id": "AO3258-080", "listing_price": 8495, "sale_price": 5947, "discount": 0, "brand": "Nike", "description": "The Nike Phantom Vision Academy Dynamic Fit MG brings the fierce precision of street play to the pitch. A foot-hugging sleeve has a custom feel and the Ghost Laces system tights with 1 pull and is hidden for a bigger striking surface.", "rating": "4", "reviews": "5"}, {"product_name": "Nike Air Max 270 React", "product_id": "AT6174-004", "listing_price": 12995, "sale_price": 7797, "discount": 0, "brand": "Nike", "description": "The bold silhouette of Nike Air lifts the Nike Air Max 270 React to new heights, while the Nike React foam midsole delivers exceptional cushioning. Imagine all-day comfort with unstoppable style.", "rating": "4.2", "reviews": "30"}, {"product_name": "Nike Tiempo Legend 8 Elite FG", "product_id": "AT5293-004", "listing_price": 0, "sale_price": 20995, "discount": 0, "brand": "Nike", "description": "The Nike Tiempo Legend 8 Elite FG takes the legendary touch of premium kangaroo leather and adds foot-hugging Quad-Fit mesh in the lining and a wrap-around Flyknit tongue that feels supportive under your arch.", "rating": "3.1", "reviews": "7"}, {"product_name": "Nike SB Zoom Stefan Janoski Canvas RM", "product_id": "AR7718-001", "listing_price": 0, "sale_price": 6995, "discount": 0, "brand": "Nike", "description": "The Nike SB Zoom Stefan Janoski Canvas RM pairs a minimal look with a modern fit. It has been updated with a new, plush sockliner and a flexible midsole for better boardfeel right out of the box.", "rating": "3.4", "reviews": "5"}, {"product_name": "Jordan 'Why Not?' Zer0.2 SE PF", "product_id": "AV4126-002", "listing_price": 0, "sale_price": 10995, "discount": 0, "brand": "Nike", "description": "Why not take the shot? Why not attack the full length of the court? Why not crash the boards and steal every ball and rain assists like water? The Jordan 'Why Not?' The Zer0.2 SE PF celebrates Russell Westbrook's calculated chaos by combining materials that work in lightweight harmony\u00e2\u20ac\u201dbecause, well, why not?", "rating": "3", "reviews": "2"}, {"product_name": "Nike Shox TL Nova SP", "product_id": "CK2085-002", "listing_price": 0, "sale_price": 14995, "discount": 0, "brand": "Nike", "description": "The 2003 icon returns with new upgrades. Fearless on the streets, the Nike Shox TL Nova takes mechanical cushioning to the next level. A modernised upper combines with Nike Shox columns for a new era.", "rating": "5", "reviews": "1"}, {"product_name": "Nike Air Max 90", "product_id": "CU0675-300", "listing_price": 13995, "sale_price": 9797, "discount": 0, "brand": "Nike", "description": "Redesigned for casual wear, the Nike Air Max 90 stays true to its '90s running roots with a rubber Waffle sole, stitched overlays and TPU plates. Hair-on leather and felted fabric colours combine with Max Air cushioning for a makeover that goes all out.", "rating": "5", "reviews": "1"}, {"product_name": "Nike Benassi JDI Floral", "product_id": "618919-031", "listing_price": 2995, "sale_price": 2397, "discount": 0, "brand": "Nike", "description": "The Nike Benassi JDI Floral Women's Slide is designed with a textured footbed and a lightweight foam midsole/outsole for a soothing, plush feel.", "rating": "4.1", "reviews": "8"}, {"product_name": "Nike Potential 3", "product_id": "844127-108", "listing_price": 0, "sale_price": 4495, "discount": 0, "brand": "Nike", "description": "The Nike Potential 3 Unisex Cricket Shoe delivers lightweight cushioning and superb grip on the field with a Phylon midsole and rubber outsole.", "rating": "5", "reviews": "1"}, {"product_name": "Nike Epic React Flyknit 2", "product_id": "BQ8927-102", "listing_price": 12995, "sale_price": 10397, "discount": 0, "brand": "Nike", "description": "The Nike Epic React Flyknit 2 takes a step up from its predecessor with smooth, lightweight performance and a bold look. An updated Flyknit upper contours to your foot with a minimal, supportive design. Underfoot, durable Nike React technology defies the odds by being both soft and responsive, for comfort that lasts as long as you can run.", "rating": "4.2", "reviews": "45"}, {"product_name": "Nike Phantom Vision Club Dynamic Fit FG", "product_id": "AJ6959-717", "listing_price": 5995, "sale_price": 4497, "discount": 0, "brand": "Nike", "description": "The Nike Phantom Vision Club Dynamic Fit FG brings the fierce precision of street play to the pitch. A foot-hugging Dynamic Fit collar combines with targeted texture for precision to create a boot for the finishers, the providers and the battlers of tomorrow's game.", "rating": "5", "reviews": "1"}, {"product_name": "Nike Air Max 97", "product_id": "921826-016", "listing_price": 16995, "sale_price": 11897, "discount": 0, "brand": "Nike", "description": "The Nike Air Max 97 Men's Shoe keeps the sneaker favourite going strong with the same design details that made it famous: water-ripple lines, reflective piping and full-length Max Air cushioning.", "rating": "4.3", "reviews": "17"}, {"product_name": "Nike x Olivia Kim Air Force 1 '07", "product_id": "CK3314-400", "listing_price": 0, "sale_price": 9995, "discount": 0, "brand": "Nike", "description": "Olivia Kim remembers NYC in the '90s. The city danced at all-night raves, and the fashion was bomb dot com. The Nike x Olivia Kim AF-1 '07 captures the outrageous '90s rave spirit with a blue corduroy upper and glow-in-the-dark details.", "rating": "5", "reviews": "1"}, {"product_name": "Nike TiempoX Lunar Legend VII Pro TF", "product_id": "AH7249-118", "listing_price": 8995, "sale_price": 7197, "discount": 0, "brand": "Nike", "description": "The Nike TiempoX Lunar Legend VII Pro Turf Football Boot features lightweight foam cushioning and a premium leather construction for a flexible fit and dominating touch when playing on turf pitches.", "rating": "3", "reviews": "1"}, {"product_name": "Nike M2K Tekno", "product_id": "BQ3378-002", "listing_price": 8995, "sale_price": 7197, "discount": 0, "brand": "Nike", "description": "The Nike M2K Tekno Shoe draws inspiration from the Monarch franchise and pushes it into today with a futuristic heel counter and plush tongue for additional comfort.", "rating": "3", "reviews": "1"}, {"product_name": "Nike Epic Phantom React Flyknit", "product_id": "BV0415-300", "listing_price": 12995, "sale_price": 7797, "discount": 0, "brand": "Nike", "description": "\"Soft to the touch, the Nike Epic Phantom React Flyknit is lace-free for a slip-on design that gets you up and out the door in no time. A snug, sock-like fit and breathable upper materials will make you feel as though the Phantom \"\"disappears\"\" as you run.\"", "rating": "4.9", "reviews": "17"}, {"product_name": "Nike SB Air Zoom Bruin Edge", "product_id": "CD5036-100", "listing_price": 0, "sale_price": 7995, "discount": 0, "brand": "Nike", "description": "The Nike SB Air Zoom Bruin Edge puts a DIY spin on an iconic skate shoe. Frayed stitching, exposed foam and a mix of materials create a patched look that's built to perform. Stencils are included so you can take the DIY look to the next level.", "rating": "5", "reviews": "1"}, {"product_name": "Nike Mercurial Superfly 7 Elite FG", "product_id": "AQ4174-049", "listing_price": 0, "sale_price": 22995, "discount": 0, "brand": "Nike", "description": "Building on the 360 innovation of the 6, the Nike Mercurial Superfly 7 Elite FG Boot adds a Nike Aerowtrac zone to the forefoot and a slightly stiffer chassis to help supercharge traction.", "rating": "4.3", "reviews": "8"}, {"product_name": "Nike Air Max 90 Essential", "product_id": "AJ1285-101", "listing_price": 0, "sale_price": 8995, "discount": 0, "brand": "Nike", "description": "The Nike Air Max 90 Essential Men's Shoe keeps the classic design lines of the 1990 original and the cushioning that made it famous.", "rating": "4", "reviews": "9"}, {"product_name": "Nike Air Zoom Pegasus 36 Premium Rise", "product_id": "AV6259-500", "listing_price": 10995, "sale_price": 6597, "discount": 0, "brand": "Nike", "description": "\"Breathability and inspiration come together in the Nike Air Zoom Pegasus 36 Premium Rise. A knit-in graphic repeating across the mesh and synthetic upper spells out \"\"Just Do It.\"\" in perforations. Strategically placed", "rating": " they cover zones where your foot releases the most heat.\"", "reviews": "5"}, {"product_name": "Nike Tiempo Legend 8 Academy MG", "product_id": "AT5292-004", "listing_price": 6495, "sale_price": 4547, "discount": 0, "brand": "Nike", "description": "The Nike Tiempo Legend 8 Academy MG takes the legendary touch of calfskin leather and adds a versatile multi-ground plate for traction on natural- and artificial-grass surfaces.", "rating": "2", "reviews": "1"}, {"product_name": "Nike Tanjun", "product_id": "812654-011", "listing_price": 4795, "sale_price": 3357, "discount": 0, "brand": "Nike", "description": "\"Named after the Japanese word for \"\"simplicity\"\"", "rating": " the Nike Tanjun Men's Shoe offers a streamlined", "reviews": " modern design for an elevated everyday look.\""}, {"product_name": "Nike Air Max Triax 96 SP", "product_id": "CT5543-300", "listing_price": 0, "sale_price": 12995, "discount": 0, "brand": "Nike", "description": "First released in the late '90s, the Nike Air Max Triax 96 SP now returns as a cult classic. Featuring the same iconic shape and large-volume visible Air unit, it brings back the classic comfort and style you remember.", "rating": "4", "reviews": "1"}, {"product_name": "Nike Air Max 2090", "product_id": "CU9174-600", "listing_price": 0, "sale_price": 13995, "discount": 0, "brand": "Nike", "description": "Bring the past into the future with the Nike Air Max 2090, a bold look inspired by the DNA of the iconic Air Max 90. Brand-new Nike Air cushioning underfoot adds unparalleled comfort while transparent mesh and vibrantly coloured details on the upper are blended with timeless OG features for an edgy, modernised look.", "rating": "5", "reviews": "1"}, {"product_name": "Nike Zoom Pegasus Turbo Shield", "product_id": "CJ9712-001", "listing_price": 17995, "sale_price": 12597, "discount": 0, "brand": "Nike", "description": "The Nike Zoom Pegasus Turbo Shield delivers your favourite lightweight running shoe in a smart, weatherised design, so you can continue training in confidence despite those dark and rainy months.", "rating": "4.5", "reviews": "4"}, {"product_name": "Nike Air Max 720 SE", "product_id": "CD0683-600", "listing_price": 0, "sale_price": 15995, "discount": 0, "brand": "Nike", "description": "The Nike Air Max 720 goes bigger than ever before with Nike's tallest Air unit yet, which offers more air underfoot for unprecedented, all-day comfort. Details include bubble wrap accents and colours inspired by the natural world.", "rating": "3", "reviews": "1"}, {"product_name": "Nike Revolution 5 FlyEase", "product_id": "BQ3212-600", "listing_price": 0, "sale_price": 3695, "discount": 0, "brand": "Nike", "description": "Designed with a zip closure secured by a midfoot strap, the Nike Revolution 5 FlyEase lets you suit up for your run quickly and easily. Soft foam cushions your stride, while a minimalist design fits in just about anywhere.", "rating": "4.5", "reviews": "6"}, {"product_name": "Nike Classic Cortez", "product_id": "807471-101", "listing_price": 0, "sale_price": 6995, "discount": 0, "brand": "Nike", "description": "The Nike Classic Cortez Women's Shoe is Nike's original running shoe, designed by Bill Bowerman and released in 1972. This version features a leather and synthetic leather construction for added durability.", "rating": "4.5", "reviews": "34"}, {"product_name": "Nike Air Max 200", "product_id": "AT6175-100", "listing_price": 9995, "sale_price": 5997, "discount": 0, "brand": "Nike", "description": "Inspired by patterns of energy radiating from Earth\u00e2\u20ac\u201dlike the flow of lava and the rhythmic ocean waves\u00e2\u20ac\u201dthe Nike Air Max 200 boasts the largest Max Air unit to date. With exceptional cushioning and modern detailing, this shoe radiates cool while providing optimal comfort.", "rating": "4.6", "reviews": "16"}, {"product_name": "Nike Air Max 270", "product_id": "AH6789-023", "listing_price": 0, "sale_price": 13995, "discount": 0, "brand": "Nike", "description": "The Nike Air Max 270 is inspired by two icons of big Air: Air Max 180 and Air Max 93. It features Nike's biggest heel Air unit yet for a soft ride that feels as remarkable as it looks.", "rating": "3.9", "reviews": "63"}, {"product_name": "Nike SFB Gen 2 20cm (approx.)", "product_id": "922474-001", "listing_price": 0, "sale_price": 13995, "discount": 0, "brand": "Nike", "description": "Made from durable nylon canvas and synthetic leather, the Nike SFB Gen 2 20cm (approx.) is a lightweight tactical boot designed for speed and flexibility over rough terrain. Inspired by Nike Free technology, the flexible sole is equipped with an aggressive traction pattern for multi-surface grip and an internal rock shield to help prevent punctures.", "rating": "3.8", "reviews": "15"}, {"product_name": "Nike Air Max Dia", "product_id": "CI3898-200", "listing_price": 0, "sale_price": 8995, "discount": 0, "brand": "Nike", "description": "Designed specifically for a woman's foot, the Nike Air Max Dia delivers a lifted look, an airy aesthetic and a sleek shape. The minimal upper modernises the look, while the Max Air unit, surrounded by clear TPU, is amplified even further by an exaggerated midsole for a boost of style.", "rating": "5", "reviews": "3"}, {"product_name": "Nike Zoom Rise", "product_id": "BQ5467-101", "listing_price": 11995, "sale_price": 8397, "discount": 0, "brand": "Nike", "description": "Bounce like never before in the Zoom Rise, Nike Basketball's artfully crafted creation for the upwardly mobile. This mid-top provides containment and support up through the ankle, while an extra-large Nike Zoom Air unit under the ball of your foot redefines how responsive a shoe can be.", "rating": "4", "reviews": "2"}, {"product_name": "Air Jordan 1 Low", "product_id": "553558-125", "listing_price": 0, "sale_price": 8995, "discount": 0, "brand": "Nike", "description": "Inspired by the original that debuted in 1985, the Air Jordan 1 Low offers a clean, classic look that's familiar yet always fresh. It's made for casual mode, with an iconic design that goes with everything and never goes out of style.", "rating": "4.6", "reviews": "34"}, {"product_name": "Nike Air Max Bella TR 2", "product_id": "AQ7492-010", "listing_price": 0, "sale_price": 6495, "discount": 0, "brand": "Nike", "description": "The Nike Air Max Bella TR 2 is a versatile trainer for weight training and station workouts. It's crafted from breathable fabric and features comfortable cushioning underfoot with a flat outsole for stability during workout sessions.", "rating": "4.3", "reviews": "12"}, {"product_name": "Nike Air Zoom Terra Kiger 6", "product_id": "CJ0220-400", "listing_price": 0, "sale_price": 10995, "discount": 0, "brand": "Nike", "description": "The Nike Air Zoom Terra Kiger 6 is built to take on wet and rocky trails. Lightweight in design, it features a sleeker look with a woven heel for a secure fit and feel.", "rating": "5", "reviews": "2"}, {"product_name": "Jordan Proto-React Z", "product_id": "CI3794-600", "listing_price": 13995, "sale_price": 11197, "discount": 0, "brand": "Nike", "description": "Inspired by spacesuits, the Jordan Proto-React Z has a futuristic look with a fit and feel made for all-day wear. Responsive cushioning gives you more bounce with less weight, while an aeronautics-inspired shroud and snug bootie help keep you strapped in.", "rating": "4.6", "reviews": "5"}, {"product_name": "Nike Air Force 1 SP", "product_id": "CQ6566-700", "listing_price": 0, "sale_price": 12995, "discount": 0, "brand": "Nike", "description": "The Nike Air Force 1 SP adds a shiny metallic finish to the details that made the original an icon.", "rating": "4.7", "reviews": "3"}, {"product_name": "Nike Zoom Pegasus Turbo", "product_id": "AJ4115-060", "listing_price": 0, "sale_price": 15995, "discount": 0, "brand": "Nike", "description": "The Nike Zoom Pegasus Turbo is the Pegasus you know and love with major upgrades for speed. The featherlight upper looks as fast as it feels, while the revolutionary Nike ZoomX foam that was designed for elite Nike runners during the Breaking 2 attempt brings record-breaking speed and responsiveness to your daily training runs.", "rating": "3.6", "reviews": "20"}, {"product_name": "Nike Free RN 5.0", "product_id": "AQ1316-500", "listing_price": 7995, "sale_price": 4797, "discount": 0, "brand": "Nike", "description": "An ideal performer for runs of up to 3 miles, the Nike Free RN 5.0 returns to its roots as a running shoe. A stripped-down upper with single-layer mesh is stretchy to feel like a second skin. The lightweight midsole with less foam makes it easy to hit the ground running.", "rating": "4.2", "reviews": "13"}, {"product_name": "Nike Air VaporMax 2019 Premium", "product_id": "AT6817-300", "listing_price": 16995, "sale_price": 13597, "discount": 0, "brand": "Nike", "description": "The Nike Air VaporMax 2019 Premium Shoe wraps your foot in stretchy woven material that gives structure and support to your stride. Underfoot, the lightest, most flexible Air Max cushioning to date gives a super-bouncy sensation that rivals running on air. Metallic Silver accents spark a sense of style.", "rating": "5", "reviews": "1"}, {"product_name": "NikeCourt Air Zoom Vapor Cage 4", "product_id": "CD0431-107", "listing_price": 0, "sale_price": 12995, "discount": 0, "brand": "Nike", "description": "The NikeCourt Air Zoom Vapor Cage 4 is innovated to last. Rubber and flexible plastic are built to withstand your toughest matches while a unique lacing system keeps your laces hidden for extra durability.", "rating": "4.7", "reviews": "3"}, {"product_name": "Air Jordan 1 Nova XX", "product_id": "AV4052-116", "listing_price": 0, "sale_price": 10495, "discount": 0, "brand": "Nike", "description": "Featuring an internal 1/2 sleeve construction, the Air Jordan 1 Nova XX Shoe offers a snug fit without traditional laces. Underfoot, an Air-Sole unit at the heel provides lightweight cushioning that moves with you all day long.", "rating": "5", "reviews": "1"}, {"product_name": "Nike Flex RN 2019", "product_id": "AQ7483-001", "listing_price": 0, "sale_price": 6995, "discount": 0, "brand": "Nike", "description": "The stretchable knit upper of the Nike Flex RN 2019 wraps you in softness as it expands and contracts with your foot. Dual-density foam layers supply durable cushioned comfort, while grooves on the outsole give you heel-to-toe flexibility.", "rating": "4.5", "reviews": "2"}, {"product_name": "Nike Free X Metcon 2", "product_id": "CD8526-446", "listing_price": 0, "sale_price": 9995, "discount": 0, "brand": "Nike", "description": null, "rating": "3", "reviews": "7"}, {"product_name": "Nike Air Max Impact", "product_id": "CI1396-004", "listing_price": 0, "sale_price": 7995, "discount": 0, "brand": "Nike", "description": "The Nike Air Max Impact infuses bold, expressive details into a design that's a beast on the court. Responsive cushioning helps soften hard landings, while the moulded heel clip and dual-strap system combine for a lightweight, locked-in feel.", "rating": "5", "reviews": "1"}, {"product_name": "Nike Classic Cortez", "product_id": "807471-103", "listing_price": 0, "sale_price": 6995, "discount": 0, "brand": "Nike", "description": "The Nike Classic Cortez Women's Shoe is Nike's original running shoe, designed by Bill Bowerman and released in 1972. This version features a leather and synthetic leather construction for added durability.", "rating": "4.5", "reviews": "34"}, {"product_name": "Nike Air Max 90 Premium", "product_id": "CJ1794-600", "listing_price": 0, "sale_price": 11995, "discount": 0, "brand": "Nike", "description": "The Nike Air Max 90 Premium pays tribute to the steadfast Royal Mail workers in London. Nike Air cushioning provides comfort for all-day wear, while fabric and leather on the upper combine breathability with durability. Details like crowns on the laces and colours inspired by Royal Mail uniforms nod to those who deliver day in and day out.", "rating": "5", "reviews": "2"}, {"product_name": "Nike Renew Run", "product_id": "CK6360-001", "listing_price": 0, "sale_price": 6995, "discount": 0, "brand": "Nike", "description": "The Nike Renew Run keeps you moving with softer foam for a cushioned feel. Designed with the everyday runner in mind, this shoe delivers secure support and durable traction for comfort on the go.", "rating": "4.8", "reviews": "5"}, {"product_name": "Nike Air Max 270 Special Edition", "product_id": "CQ6549-001", "listing_price": 0, "sale_price": 14995, "discount": 0, "brand": "Nike", "description": "Find unstoppable comfort in the Nike Air Max 270. The eye-catching Max Air 270 unit and Nike React foam midsole deliver cushioning that moves with you. A soft and minimal collar contours to your heel for an amazing fit. A glow-in-the-dark colourway celebrates the New Year.", "rating": "5", "reviews": "1"}, {"product_name": "Nike Air Force 1 Sage Low", "product_id": "AR5339-002", "listing_price": 0, "sale_price": 8995, "discount": 0, "brand": "Nike", "description": "Taking both height and craft to new levels, the Nike Air Force 1 Sage Low features a platform midsole and a pared-down upper for a bold yet feminine look.", "rating": "4.5", "reviews": "36"}, {"product_name": "Nike Air Max Triax 96", "product_id": "CD2053-105", "listing_price": 0, "sale_price": 10995, "discount": 0, "brand": "Nike", "description": "More than 20 years after its initial release, the Nike Air Max Triax 96 returns as a cult classic. Featuring the same iconic shape and large-volume Air unit, it brings back the classic comfort and style you remember.", "rating": "5", "reviews": "2"}, {"product_name": "PG 3 NASA", "product_id": "CI2666-400", "listing_price": 9995, "sale_price": 7997, "discount": 0, "brand": "Nike", "description": "Paul George's moon shot took him from Palmdale to basketball stardom, and now he's heading to new heights. This space-themed version of the PG 3 offers sensational traction, springy responsiveness and lightweight containment for seamless moves between offence and defence.", "rating": "3.7", "reviews": "11"}, {"product_name": "Nike Free RN 5.0 AW", "product_id": "BV7775-100", "listing_price": 8995, "sale_price": 5397, "discount": 0, "brand": "Nike", "description": "An ideal performer for runs up to 3 miles, the Nike Free RN 5.0 AW returns to its roots as a motion shoe. A stripped-down upper with single-layer mesh stretches and moves with you. Less foam in the midsole makes it easy to hit the ground running.", "rating": "5", "reviews": "1"}, {"product_name": "Air Jordan 1 Jester XX Low Laced", "product_id": "CI7815-602", "listing_price": 0, "sale_price": 7995, "discount": 0, "brand": "Nike", "description": "The Air Jordan 1 Jester XX Low knows not to take things too seriously, except comfort. A real and synthetic leather upper is supportive where it counts, while the exaggerated midsole adds a little altitude with responsive cushioning.", "rating": "5", "reviews": "2"}, {"product_name": "Nike SB Zoom Stefan Janoski Canvas RM", "product_id": "AR7718-001", "listing_price": 0, "sale_price": 6995, "discount": 0, "brand": "Nike", "description": "The Nike SB Zoom Stefan Janoski Canvas RM pairs a minimal look with a modern fit. It has been updated with a new, plush sockliner and a flexible midsole for better boardfeel right out of the box.", "rating": "3.4", "reviews": "5"}, {"product_name": "Nike Tiempo Legend 8 Academy IC", "product_id": "AT6099-606", "listing_price": 0, "sale_price": 6495, "discount": 0, "brand": "Nike", "description": "The Nike Tiempo Legend 8 Academy IC takes the legendary touch of calfskin leather and adds cushioning that equips you for the court or the streets. A mesh tongue and collar lining add breathability and street style.", "rating": "5", "reviews": "1"}, {"product_name": "Nike SB Bruin High", "product_id": "923112-001", "listing_price": 7995, "sale_price": 5597, "discount": 0, "brand": "Nike", "description": "The first Nike SB shoe designed specifically for women, the Nike SB Bruin High is built for exceptional comfort and board control. With classic Bruin design lines and details, this is a fresh take on a time-honoured shoe.", "rating": "4.2", "reviews": "6"}, {"product_name": "PG 3", "product_id": "AO2607-401", "listing_price": 8995, "sale_price": 7197, "discount": 0, "brand": "Nike", "description": "Paul George's moon shot took him from Palmdale to basketball stardom, and now he's heading to new heights with clouds under his feet. Built on an outsole inspired by moon craters, the PG 3 combines sensational traction with responsive Zoom Air cushioning that helps you move seamlessly between offence and defence.", "rating": "4", "reviews": "19"}, {"product_name": "Nike Free TR Ultra", "product_id": "AO3424-001", "listing_price": 7995, "sale_price": 6397, "discount": 0, "brand": "Nike", "description": "The Nike Free TR Ultra is lightweight and flexible to be quick and adaptable for whatever workout you take on. The slip-on design has Flywire cables to securely hold your foot. Soft, flexible foam cushioning has a wider surface area for more stability.", "rating": "1", "reviews": "1"}, {"product_name": "Air Jordan 7 Retro", "product_id": "313358-006", "listing_price": 15995, "sale_price": 11197, "discount": 0, "brand": "Nike", "description": "The Air Jordan 7 Retro celebrates MJ's championship legacy with a reissue of his 7th game shoe, the one he famously wore to gold-medal glory.", "rating": "4.8", "reviews": "4"}, {"product_name": "Nike SFB Gen 2 20cm (approx.)", "product_id": "922474-001", "listing_price": 0, "sale_price": 13995, "discount": 0, "brand": "Nike", "description": "Made from durable nylon canvas and synthetic leather, the Nike SFB Gen 2 20cm (approx.) is a lightweight tactical boot designed for speed and flexibility over rough terrain. Inspired by Nike Free technology, the flexible sole is equipped with an aggressive traction pattern for multi-surface grip and an internal rock shield to help prevent punctures.", "rating": "3.8", "reviews": "15"}, {"product_name": "Nike Mercurial Superfly 7 Elite MDS FG", "product_id": "BQ5469-703", "listing_price": 0, "sale_price": 24995, "discount": 0, "brand": "Nike", "description": "Dream of speed and play fast in the Nike Mercurial Superfly 7 Elite MDS FG. A streamlined upper combines with a Nike Aerowtrac zone for high-speed play and supercharged traction.", "rating": "5", "reviews": "1"}, {"product_name": "Nike Epic Phantom React", "product_id": "CI1290-100", "listing_price": 13995, "sale_price": 8397, "discount": 0, "brand": "Nike", "description": "\"Soft to the touch, the Nike Epic Phantom React lets go of laces for a slip-on style that gets you up and running in no time. A snug, secure, sock-like fit within a breathable Flyknit and synthetic upper feels as though the Phantom \"\"disappears\"\" as you run.\"", "rating": "5", "reviews": "2"}, {"product_name": "Nike Air Huarache Ultra", "product_id": "885118-001", "listing_price": 8995, "sale_price": 7197, "discount": 0, "brand": "Nike", "description": "The Nike Air Huarache Ultra Women's Sandal helps keep your feet cool and comfortable on warmer days.", "rating": "4.6", "reviews": "12"}, {"product_name": "Nike Wildhorse 6", "product_id": "BV7099-400", "listing_price": 0, "sale_price": 9995, "discount": 0, "brand": "Nike", "description": "The Nike Wildhorse 6 keeps it stable, secure and lightweight on the trail. An updated outsole delivers the traction you need, while a foam midsole keeps you cushioned on your run.", "rating": "4.5", "reviews": "2"}, {"product_name": "Nike Benassi JDI BETRUE", "product_id": "CD2717-001", "listing_price": 0, "sale_price": 4495, "discount": 0, "brand": "Nike", "description": "The Nike Benassi JDI BETRUE Slide creates lightweight comfort in a classic design, while the soft foam sole cushions your every step.", "rating": "4.3", "reviews": "3"}, {"product_name": "Nike Zoom Rise", "product_id": "BQ5467-101", "listing_price": 11995, "sale_price": 8397, "discount": 0, "brand": "Nike", "description": "Bounce like never before in the Zoom Rise, Nike Basketball's artfully crafted creation for the upwardly mobile. This mid-top provides containment and support up through the ankle, while an extra-large Nike Zoom Air unit under the ball of your foot redefines how responsive a shoe can be.", "rating": "4", "reviews": "2"}, {"product_name": "Nike Tiempo Legend 8 Club IC", "product_id": "AT6110-004", "listing_price": 4495, "sale_price": 3147, "discount": 0, "brand": "Nike", "description": "The Nike Tiempo Legend 8 Club IC takes the touch of textured synthetic leather and adds a grippy rubber outsole for multi-directional traction.", "rating": "2", "reviews": "1"}, {"product_name": "Nike Air Max 2017", "product_id": "849560-001", "listing_price": 0, "sale_price": 15995, "discount": 0, "brand": "Nike", "description": "The Nike Air Max 2017 Women's Shoe features a seamless Flymesh upper for support and breathability. Iconic Max Air cushioning provides a lightweight, smooth feel with each step, whether you're running your three-miler or running your day.", "rating": "3.5", "reviews": "18"}, {"product_name": "Nike Flex RN 2018", "product_id": "AA7408-008", "listing_price": 7495, "sale_price": 5997, "discount": 0, "brand": "Nike", "description": "The Nike Flex RN 2018 Women's Running Shoe delivers a flexible fit with a lightweight knit construction to help your runs feel free and easy.", "rating": "3.2", "reviews": "15"}, {"product_name": "NikeCourt Royale AC", "product_id": "BQ9138-601", "listing_price": 4495, "sale_price": 3147, "discount": 0, "brand": "Nike", "description": "Winning in both style and comfort, the NikeCourt Royale AC is as easy to get on as it is to pair with your entire warm-weather wardrobe. A hidden gore strap keeps the canvas upper looking clean and classic while easing it on and off.", "rating": "5", "reviews": "1"}, {"product_name": "Jordan Air Latitude 720", "product_id": "AV5187-602", "listing_price": 15995, "sale_price": 12797, "discount": 0, "brand": "Nike", "description": "Boasting a bold 720 Air unit, the Jordan Air Latitude 720 offers 360 degrees of cushioning and then some. This attention-grabbing, AJ 8\u00e2\u20ac\u201cinspired shoe is a celebration of '90s Jordan heritage, big-time Air and street-ready comfort.", "rating": "5", "reviews": "1"}, {"product_name": "Nike Air Force 1 '07 SE", "product_id": "AA0287-002", "listing_price": 8495, "sale_price": 6797, "discount": 0, "brand": "Nike", "description": "The legend lives on in the Nike Air Force 1 '07 SE. This fresh take on an icon gives you classic style while playing up the AF-1's versatility with new colours and materials.", "rating": "3.6", "reviews": "5"}, {"product_name": "Nike Zoom Fly 3 Premium", "product_id": "BV7756-001", "listing_price": 14995, "sale_price": 10497, "discount": 0, "brand": "Nike", "description": "Inspired by the Vaporfly, the Nike Zoom Fly 3 gives distance runners race-day comfort and durability. The power of a carbon-fibre plate keeps you in the running mile after mile.", "rating": "5", "reviews": "1"}, {"product_name": "Nike Air VaporMax 2019", "product_id": "AR6632-603", "listing_price": 15995, "sale_price": 9597, "discount": 0, "brand": "Nike", "description": "Designed for running but adopted by the street, the Nike Air VaporMax 2019 features the lightest, most flexible Air Max cushioning to date. A stretch woven material wraps your foot for lightweight support and stability, while an external reinforcement in the heel secures the back of your foot.", "rating": "3.5", "reviews": "11"}, {"product_name": "Nike Air Zoom Structure 22", "product_id": "AA1640-002", "listing_price": 0, "sale_price": 9995, "discount": 0, "brand": "Nike", "description": "The Nike Air Zoom Structure 22 Women's Running Shoe looks fast and feels secure. Engineered mesh, a heel overlay and dynamic support throughout the midfoot all work together to provide a smooth, stable ride.", "rating": "4.3", "reviews": "14"}, {"product_name": "NikeCourt Air Zoom Vapor X", "product_id": "AA8027-109", "listing_price": 0, "sale_price": 14995, "discount": 0, "brand": "Nike", "description": "The NikeCourt Air Zoom Vapor X has an updated Dynamic Fit system with a full-length foot frame to provide ultimate control. Its new generative outsole combined with a Zoom Air unit provides a lightweight, responsive feel on the court.", "rating": "4", "reviews": "3"}, {"product_name": "LeBron Soldier 13 SFG", "product_id": "AR4225-100", "listing_price": 11995, "sale_price": 9597, "discount": 0, "brand": "Nike", "description": "LeBron works hard in the offseason, getting stronger and fine-tuning his already devastating skills. Inspired by his dedication and commitment to inclusivity, the Soldier 13 SFG combines LeBron-tested cushioning, containment and support with a wide, flexible collar and lace-free closure that lets all players get in and out of the shoe with ease.", "rating": "4.2", "reviews": "6"}, {"product_name": "Air Jordan 13 Retro", "product_id": "414571-030", "listing_price": 0, "sale_price": 15995, "discount": 0, "brand": "Nike", "description": "Featuring a panther-inspired design that takes after Michael Jordan's on-court presence, the Air Jordan 13 Retro is based on the OG model and has the same responsive cushioning and premium materials that made it famous in the '90s.", "rating": "3.9", "reviews": "34"}, {"product_name": "Nike React Element 55 Premium", "product_id": "CD6964-002", "listing_price": 11995, "sale_price": 7197, "discount": 0, "brand": "Nike", "description": "The Nike React Element 55 is a balanced blend of classic design and forward-looking innovation. Nike React foam delivers lightweight, bouncy comfort, while rubber outsole pods and an exaggerated outsole offer a cutting-edge look that begs a reaction.", "rating": "4", "reviews": "1"}, {"product_name": "Nike Air Max 97", "product_id": "CI7388-600", "listing_price": 0, "sale_price": 16995, "discount": 0, "brand": "Nike", "description": "The Nike Air Max 97 keeps a sneaker icon going strong with the same design details that made its reputation from the beginning: water-ripple lines, reflective piping and full-length Max Air cushioning.", "rating": "5", "reviews": "1"}, {"product_name": "Nike Air Force 1 GORE-TEX \u00c2\u00ae", "product_id": "CK2630-001", "listing_price": 12995, "sale_price": 10397, "discount": 0, "brand": "Nike", "description": "The Nike Air Force 1 GORE-TEX \u00c2\u00ae retools the classic Air Force 1 with a street-approved design that meets the standards of GORE-TEX \u00c2\u00ae waterproof technology. It features water-wicking flat laces, a GORE-TEX \u00c2\u00ae bootie and GORE-TEX \u00c2\u00ae branding on the heel.", "rating": "4.1", "reviews": "18"}, {"product_name": "Nike Phantom Venom Academy TF", "product_id": "AO0571-606", "listing_price": 0, "sale_price": 7495, "discount": 0, "brand": "Nike", "description": "The Nike Phantom Venom Academy TF is engineered for powerful, precise strikes that win games. Ridges on the instep help create spin to control the flight of the ball. The sole provides the turf traction needed to unleash at any moment.", "rating": "5", "reviews": "1"}, {"product_name": "Kyrie 4", "product_id": "943806-602", "listing_price": 0, "sale_price": 10995, "discount": 0, "brand": "Nike", "description": "The Kyrie 4 Men's Basketball Shoe is ultra-flexible, responsive and supportive. It's designed for Kyrie Irving's sudden changes of direction and smooth yet rapid playing style.", "rating": "4.1", "reviews": "19"}, {"product_name": "Nike React Metcon", "product_id": "BQ6046-010", "listing_price": 0, "sale_price": 12995, "discount": 0, "brand": "Nike", "description": "The Nike React Metcon takes the stability and traction from the training original and pairs it with Nike's most comfortable cushioning. Tackle high-impact and lifting workouts with a light, breathable upper and durable grip to keep you going.", "rating": "3.7", "reviews": "3"}, {"product_name": "Nike ZoomX Vista Grind SP", "product_id": "CT5770-300", "listing_price": 0, "sale_price": 14995, "discount": 0, "brand": "Nike", "description": "The Nike ZoomX Vista Grind SP is proof of the improbable, bringing you to a bold new place that's rebellious and forward thinking. Recycled foam from the Nike ZoomX family plus lightweight fabric and durable overlays come together to give the shoe a modern look and classic comfort.", "rating": "5", "reviews": "1"}, {"product_name": "Nike Air Max 270 React", "product_id": "CI3899-200", "listing_price": 0, "sale_price": 12995, "discount": 0, "brand": "Nike", "description": "The Nike Air Max 270 React uses lightweight, layered, no-sew materials to create a modern style that looks as good as it feels.", "rating": "4.3", "reviews": "6"}, {"product_name": "Nike Drop-Type", "product_id": "CQ0989-002", "listing_price": 0, "sale_price": 5995, "discount": 0, "brand": "Nike", "description": "With DIY attitude and classic tennis shoe appeal, the Nike Drop-Type puts a raw, experimental edge on an iconic look. Featuring distinct lines that borrow from the NikeCourt series, an exposed foam tongue and N354 branding, it lets your shoes do the talking.", "rating": "4", "reviews": "1"}, {"product_name": "Nike Blazer Low LE", "product_id": "AV9370-001", "listing_price": 6995, "sale_price": 5597, "discount": 0, "brand": "Nike", "description": "The Nike Blazer Low LE refines the old-school basketball icon with updated details.", "rating": "5", "reviews": "2"}, {"product_name": "Nike Zoom Pegasus Turbo 2 Rise", "product_id": "BV1134-001", "listing_price": 15995, "sale_price": 9597, "discount": 0, "brand": "Nike", "description": "The Nike Zoom Pegasus Turbo 2 Rise is updated with a featherlight upper, while innovative foam brings revolutionary responsiveness to your long-distance training.", "rating": "4", "reviews": "5"}, {"product_name": "Nike Air Max Dia SE", "product_id": "AR7410-603", "listing_price": 9995, "sale_price": 5997, "discount": 0, "brand": "Nike", "description": "The Nike Air Max Dia SE features sleek lines and a sheer upper that combine classic Air Max elements into a lightweight, comfy and versatile icon. Together with its smart toe-down profile and extra lift, the Nike Air Max Dia SE offers an ever-bigger expression of Nike Air.", "rating": "4.8", "reviews": "20"}, {"product_name": "Nike Tanjun", "product_id": "812655-011", "listing_price": 4995, "sale_price": 3997, "discount": 0, "brand": "Nike", "description": "Named after the Japanese word for simplicity, the Nike Tanjun Women's Shoe offers an elegant, modern design for an elevated everyday look.", "rating": "4", "reviews": "53"}, {"product_name": "Nike Air Max 90", "product_id": "325213-139", "listing_price": 9495, "sale_price": 7597, "discount": 0, "brand": "Nike", "description": "The Nike Air Max 90 Women's Shoe honours its roots with a supportive upper and the excellent cushioning that made the original a favourite.", "rating": "3.6", "reviews": "5"}, {"product_name": "Nike Air Max 720 BETRUE", "product_id": "CJ5472-900", "listing_price": 0, "sale_price": 15995, "discount": 0, "brand": "Nike", "description": "Designed in collaboration with Gilbert Baker, the Nike Air Max 720 BETRUE features a rainbow-coloured upper inspired by, and in celebration of, the LGBTQ community.", "rating": "5", "reviews": "1"}, {"product_name": "Nike Odyssey React", "product_id": "AO9820-001", "listing_price": 11995, "sale_price": 9597, "discount": 0, "brand": "Nike", "description": "The Nike Odyssey React Women's Running Shoe provides crazy comfort that lasts as long as you can run. Its Nike React foam cushioning is responsive yet lightweight, durable yet soft. This attraction of opposites creates a sensation that not only enhances the feeling of moving forwards, but makes running feel fun, too.\u00c2\u00a0The upper of the Nike Odyssey React is built with a lightweight, breathable fabric instead of the premium Flyknit featured on the Nike Epic React.", "rating": "4.1", "reviews": "8"}, {"product_name": "Nike Legend React", "product_id": "AA1626-602", "listing_price": 0, "sale_price": 8795, "discount": 0, "brand": "Nike", "description": "The Nike Legend React Women's Running Shoe features a breathable upper with synthetic overlays that enhance durability while smooth, responsive foam cushions every step as you run.", "rating": "2.7", "reviews": "19"}, {"product_name": "Nike Air Zoom Winflo 6", "product_id": "AQ8228-102", "listing_price": 0, "sale_price": 7995, "discount": 0, "brand": "Nike", "description": "In a fluid design that speaks the language of fast, the Nike Air Zoom Winflo 6 has less bulk and a more sculpted profile than previous versions. It has 2 Zoom Air units for targeted responsiveness in the forefoot and heel. On the top, engineered mesh optimises breathability.", "rating": "3.7", "reviews": "10"}, {"product_name": "Nike Air Zoom Vomero 14", "product_id": "AH7858-010", "listing_price": 11995, "sale_price": 9597, "discount": 0, "brand": "Nike", "description": "The Nike Air Zoom Vomero 14 takes responsive cushioning to the next level. The full-length Zoom Air unit works with Nike React cushioning to deliver a super-snappy, smooth ride. On the top, the sleek design is engineered to support your stride.", "rating": "2.8", "reviews": "11"}, {"product_name": "Nike Air VaporMax SE", "product_id": "CI1246-302", "listing_price": 16995, "sale_price": 10197, "discount": 0, "brand": "Nike", "description": "The Nike Air VaporMax SE wraps your foot in a stretch woven material that gives structure and support to your stride. Underfoot, the lightest, most flexible Air Max cushioning to date gives a super-bouncy sensation that rivals running on air.", "rating": "3.7", "reviews": "3"}, {"product_name": "NikeCourt Air Max Wildcard", "product_id": "AO7353-105", "listing_price": 0, "sale_price": 7995, "discount": 0, "brand": "Nike", "description": "The NikeCourt Air Max Wildcard delivers the comfort you need to hit hard and move fast on the court. A Max Air unit under your heel cushions every step, while an innovative Lunarlon midsole gives you a springy underfoot sensation and extra stability.", "rating": "4.5", "reviews": "2"}, {"product_name": "Nike Air Max 98", "product_id": "CI3709-001", "listing_price": 0, "sale_price": 16995, "discount": 0, "brand": "Nike", "description": "The Nike Air Max 98 brings back retro Air Max style with contemporary comfort innovations. A full-length Max Air unit gives total cushioning in every step.", "rating": "4", "reviews": "1"}, {"product_name": "Nike SB Zoom Stefan Janoski Mid RM", "product_id": "AT7324-001", "listing_price": 7995, "sale_price": 6397, "discount": 0, "brand": "Nike", "description": "The Nike SB Zoom Stefan Janoski Mid RM pairs a minimal look with a modern fit. It has been updated with a new, plush sockliner and a flexible midsole for better boardfeel right out of the box.", "rating": "5", "reviews": "1"}, {"product_name": "NikeCourt Air Zoom Zero", "product_id": "AA8022-107", "listing_price": 0, "sale_price": 11995, "discount": 0, "brand": "Nike", "description": "Featuring the first full-length Zoom Air unit in NikeCourt history, the NikeCourt Air Zoom Zero delivers exceptional responsiveness and great court feel. Its fabric and synthetic upper with a customisable lacing system offers second-skin-like comfort.", "rating": "3.8", "reviews": "4"}, {"product_name": "Nike M2K Tekno", "product_id": "AO3108-018", "listing_price": 0, "sale_price": 8995, "discount": 0, "brand": "Nike", "description": "The Nike M2K Tekno draws inspiration from the Monarch franchise and pushes it into the future with space-age detailing. Its layered upper mimics the design of the OG Monarch, while the chunky outsole draws on the beloved Monarch IV.", "rating": "4", "reviews": "13"}, {"product_name": "PG 3", "product_id": "AO2607-401", "listing_price": 8995, "sale_price": 7197, "discount": 0, "brand": "Nike", "description": "Paul George's moon shot took him from Palmdale to basketball stardom, and now he's heading to new heights with clouds under his feet. Built on an outsole inspired by moon craters, the PG 3 combines sensational traction with responsive Zoom Air cushioning that helps you move seamlessly between offence and defence.", "rating": "4", "reviews": "19"}, {"product_name": "Air Jordan 5 Retro", "product_id": "CN2932-100", "listing_price": 0, "sale_price": 18995, "discount": 0, "brand": "Nike", "description": "The Air Jordan 5 Retro brings back the original that was inspired by WWII fighter planes, featuring a mid-top profile and synthetic leather. An inner-sleeve creates a snug, comfortable feel.", "rating": "4.6", "reviews": "8"}, {"product_name": "Nike Air Max Dia NRG", "product_id": "CQ2503-900", "listing_price": 10995, "sale_price": 7697, "discount": 0, "brand": "Nike", "description": "Crisp and clean with the perfect amount of lift, the Nike Air Max Dia is designed to elevate her every day. The minimal upper features no-sew skins and breathable mesh for an airiness that matches the swirled iridescent patterns. Boosting style and comfort, the Max Air unit underfoot joins with the super-soft foam midsole.", "rating": "4.3", "reviews": "3"}, {"product_name": "Nike Mercurial Vapor 13 Elite FG", "product_id": "AQ4176-049", "listing_price": 0, "sale_price": 21995, "discount": 0, "brand": "Nike", "description": "Building on the 360-degree Flyknit innovation of the 12, the Nike Mercurial Vapor 13 Elite FG adds a Nike Aerowtrac zone to the forefoot and a slightly stiffer chassis to help supercharge traction. Inside, an insole with NikeGrip technology provides maximum interior traction underfoot and lightweight cushioning.", "rating": "3.5", "reviews": "4"}, {"product_name": "Nike Air Max 720", "product_id": "AR9293-603", "listing_price": 15995, "sale_price": 9597, "discount": 0, "brand": "Nike", "description": "The Nike Air Max 720 goes bigger than ever before with Nike's tallest Air unit yet, which offers more air underfoot for unimaginable, all-day comfort. Has Air Max gone too far? We hope so.", "rating": "4.9", "reviews": "18"}, {"product_name": "Nike Zoom KD12", "product_id": "AR4229-003", "listing_price": 0, "sale_price": 12995, "discount": 0, "brand": "Nike", "description": "Kevin Durant always looks relaxed\u00e2\u20ac\u201duntil he attacks. His game is reserved yet explosive, difficult to guard and impossible to stop. The KD12 was built for his dominance and endless energy all game long, with the latest innovation in Nike Zoom Air technology.", "rating": "4.6", "reviews": "18"}, {"product_name": "Air Jordan 7 Retro", "product_id": "313358-006", "listing_price": 15995, "sale_price": 11197, "discount": 0, "brand": "Nike", "description": "The Air Jordan 7 Retro celebrates MJ's championship legacy with a reissue of his 7th game shoe, the one he famously wore to gold-medal glory.", "rating": "4.8", "reviews": "4"}, {"product_name": "Nike Mercurial Superfly 7 Academy IC", "product_id": "AT7975-606", "listing_price": 0, "sale_price": 8495, "discount": 0, "brand": "Nike", "description": "The soft upper of the Nike Mercurial Superfly 7 Academy IC wraps your foot for a second-skin fit, while the rubber outsole helps supercharge traction on the court or street.", "rating": "5", "reviews": "1"}, {"product_name": "Nike Air Zoom Pegasus 36 FlyEase", "product_id": "BV0614-005", "listing_price": 9995, "sale_price": 7997, "discount": 0, "brand": "Nike", "description": "The Nike Air Zoom Pegasus 36 FlyEase maintains everything you love about the Pegasus and adds a zip for effortless on and off. The no-tie lacing system adjusts easily for a secure feel as you tackle your miles.", "rating": "3", "reviews": "4"}, {"product_name": "Nike P-6000 Icon Clash", "product_id": "BV1021-007", "listing_price": 7995, "sale_price": 5597, "discount": 0, "brand": "Nike", "description": "A mash-up of Pegasus' past, the Nike P-6000 Icon Clash features breathable mesh with horizontal and vertical overlays for a 2000s running look that is as striking as, say, a majestic winged horse. Drawing on the design of the Nike Pegasus 25 and 2006, its running aesthetic meets all-day comfort for the streets.", "rating": "4.7", "reviews": "10"}, {"product_name": "Nike Mercurial Superfly 7 Elite FG", "product_id": "AQ4174-049", "listing_price": 0, "sale_price": 22995, "discount": 0, "brand": "Nike", "description": "Building on the 360 innovation of the 6, the Nike Mercurial Superfly 7 Elite FG Boot adds a Nike Aerowtrac zone to the forefoot and a slightly stiffer chassis to help supercharge traction.", "rating": "4.3", "reviews": "8"}, {"product_name": "Nike Air Max 95 Premium", "product_id": "807443-503", "listing_price": 16995, "sale_price": 13597, "discount": 0, "brand": "Nike", "description": "The Nike Air Max 95 Premium retains its iconic look, but is sleeker, lighter and geared for 24/7 comfort and style. It features inspiration from the human body itself. The midsole represents the spine, graduated panels are the muscles, the lace loops are the shoe's ribs and the fabric tongue is its skin.", "rating": "3.7", "reviews": "3"}, {"product_name": "Nike Pre-Love O.X.", "product_id": "AO3166-300", "listing_price": 0, "sale_price": 7495, "discount": 0, "brand": "Nike", "description": "The Nike Pre-Love O.X. Women's Shoe features a running-inspired profile and lightweight foam cushioning for all-day comfort.", "rating": "5", "reviews": "3"}, {"product_name": "Nike Mercurial Superfly 7 Academy MG", "product_id": "AT7946-414", "listing_price": 0, "sale_price": 8495, "discount": 0, "brand": "Nike", "description": "Building on the forefoot plate innovation of the 6, the Nike Mercurial Superfly 7 Academy MG Boot adds a versatile multi-ground plate that provides traction on natural- and artificial-grass surfaces.", "rating": "5", "reviews": "2"}, {"product_name": "Nike Air Force 1 '07 SE", "product_id": "CI3446-001", "listing_price": 0, "sale_price": 7995, "discount": 0, "brand": "Nike", "description": "The Nike Air Force 1 '07 SE incorporates the same hoops-inspired performance features of the 1982 original while adding details that call to mind the 2000s aesthetic.", "rating": "5", "reviews": "1"}, {"product_name": "Nike Zoom Pegasus Turbo XX", "product_id": "AR4347-600", "listing_price": 16995, "sale_price": 13597, "discount": 0, "brand": "Nike", "description": "Bridging performance and style, the Nike Zoom Pegasus Turbo XX Women's Running Shoe combines a full-length ZoomX midsole with an upper re-imagined exclusively for women. This feather-light translucent upper pops with a racing-stripe print that looks as fast as it feels, while Nike ZoomX foam delivers revolutionary responsiveness. A transparent, soft TPU overlay wraps your midfoot for the fit you need.", "rating": "1", "reviews": "1"}, {"product_name": "Nike React Metcon", "product_id": "BQ6044-100", "listing_price": 0, "sale_price": 12995, "discount": 0, "brand": "Nike", "description": "The Nike React Metcon takes the stability and traction from the training original and pairs it with Nike's most comfortable cushioning. Tackle high-impact and lifting workouts with a light, breathable upper and durable grip to keep you going.", "rating": "3.9", "reviews": "10"}, {"product_name": "Nike Zoom Pegasus Turbo 2 Special Edition", "product_id": "BV7757-500", "listing_price": 15995, "sale_price": 12797, "discount": 0, "brand": "Nike", "description": "The Nike Zoom Pegasus Turbo 2 is updated with a featherlight upper, while energy-returning foam brings revolutionary responsiveness to your long-distance training.", "rating": "5", "reviews": "1"}, {"product_name": "Nike Metcon 5 AMP", "product_id": "CN5455-160", "listing_price": 0, "sale_price": 11995, "discount": 0, "brand": "Nike", "description": "The Nike Metcon 5 AMP arms you with stability for heavy lifting and traction for sprints during high-impact training. It combines breathability and durability to be your secret weapon in the gym.", "rating": "4.5", "reviews": "2"}, {"product_name": "Air Jordan 5 Retro", "product_id": "CD2722-001", "listing_price": 0, "sale_price": 15995, "discount": 0, "brand": "Nike", "description": "The Air Jordan 5 Retro for women gives a colourful makeover to one of MJ's most memorable game shoes. Featuring iconic fighter plane-inspired midsole sculpting and moulded lace toggle, this version flashes an all-over reflective rainbow print for some bold colour and energy.", "rating": "3.3", "reviews": "3"}, {"product_name": "Nike ZoomX Vaporfly NEXT%", "product_id": "AO4568-600", "listing_price": 0, "sale_price": 19995, "discount": 0, "brand": "Nike", "description": "The Nike ZoomX Vaporfly NEXT% clears your path to record-breaking speed with a lighter design and faster feel than before. With more cushioning underfoot and reduced weight up top, the result is unprecedented energy return and comfort.", "rating": "4.7", "reviews": "45"}, {"product_name": "Kyrie 6 'Enlightenment'", "product_id": "BQ4630-500", "listing_price": 10995, "sale_price": 8797, "discount": 0, "brand": "Nike", "description": "In spiritual circles, the colour purple represents enlightenment. It speaks to being fully connected to your spiritual mind by tapping into an inner source of potential that was otherwise undiscovered. The Kyrie 6 'Enlightenment' plays up the unseen spirituality theme with an all-seeing eye graphic on the side of the upper and a purple colour scheme.", "rating": "4.4", "reviews": "10"}, {"product_name": "Nike React Metcon AMP", "product_id": "CT9155-063", "listing_price": 0, "sale_price": 13995, "discount": 0, "brand": "Nike", "description": "The Nike React Metcon AMP takes the stability and traction from the original and pairs it with React foam, Nike's most comfortable cushioning. It feels soft and springy with a breathable upper, but it's still stable enough to tackle lifting and high-impact workouts. A glow-in-the-dark rubber sole climbs up the side of the shoe for durability and extra grip during rope climbs.", "rating": "3", "reviews": "1"}, {"product_name": "Air Jordan 8 Retro", "product_id": "CI1236-100", "listing_price": 15995, "sale_price": 12797, "discount": 0, "brand": "Nike", "description": "The Air Jordan 8 Retro recaptures the memorable look of the '93 release. It's made from real and synthetic leather and has the same distinct and daring design that made the original such a '90s favourite.", "rating": "5", "reviews": "1"}, {"product_name": "Nike Mercurial Superfly 7 Academy TF", "product_id": "AT7978-414", "listing_price": 8495, "sale_price": 5947, "discount": 0, "brand": "Nike", "description": "The soft upper of the Nike Mercurial Superfly 7 Academy TF Shoe wraps your foot for a second-skin fit, while the rubber outsole helps supercharge traction on turf.", "rating": "5", "reviews": "1"}, {"product_name": "Nike Air Max 98", "product_id": "AH6799-300", "listing_price": 0, "sale_price": 16995, "discount": 0, "brand": "Nike", "description": "The Nike Air Max 98 features the OG design lines that were inspired by the walls of the Grand Canyon while adding bursts of fresh colour to the upper. The fluid, textured look and full-length Nike Air cushioning set you apart from the pack.", "rating": "4", "reviews": "4"}], "stage_runningstate": "executed", "after_run": {"baseType": "hdfs", "notify": "True", "pipeline_type": "simple", "retrain": "0", "schedule": "0", "scheduleInfo": "{}"}}, {"_id": "66ae0e8917c733036b10f550", "mode": "staged", "originalfile": "/FileStore/platform/uploadedSourceFiles/Nike_Pro.csv", "in": ["66ae0e8917c733036b10f54f"], "out": [], "is_streaming": false, "valid": false, "is_predefined": false, "cache": false, "name": "Nike_AutoML", "comment": "", "pipeline_id": "66ae0e8917c733036b10f54b", "sub_type": "Automl", "stage_type": "ml", "mlCategory": "Regression", "stage_attributes": {"model_type": "regression", "label": "rating_stringindexer", "features": ["listing_price", "sale_price", "discount", "product_name_stringindexer", "product_id_stringindexer", "brand_stringindexer", "description_stringindexer", "reviews_stringindexer"], "percentage": "80", "executionTime": "10", "sampling": "1", "sampling_value": "", "optimizeBy": "r2", "run_id": "", "server_url": "/nexusMax/NexusMaxPlatform/uploads/platform/"}, "status": "new", "position": {"x": 187, "y": 160}, "shape_attributes": {"image": {"refWidth": "100%", "refHeight": "100%", "xlinkHref": "assets/svg/ml-engine/regression.svg"}, "label": {"textVerticalAnchor": "top", "textAnchor": "middle", "refX": "50%", "refY": "100%", "refY2": 10, "fontSize": 10, "fill": "#333333", "type": "aml", "text": "Regression-AutoML", "slug": "auto-ml", "fontFamily": "Roboto Condensed", "fontWeight": "Normal"}, "root": {"dataTooltipPosition": "bottom", "dataTooltipPositionSelector": ".joint-stencil", "mode": "auto"}, "body": {"fill": "transparent", "stroke": "#4295d1", "strokeWidth": 2, "strokeDasharray": "0"}, "dbValues": {"model_type": "", "label": "", "features": []}}, "shape_size": {"width": 60, "height": 60}, "shape_type": "standard.Image", "user_id": "7b254440-ce6b-4cbe-9a6b-9ca33491250a", "original_schema": [{"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "66ae0f2917c733036b10f59f", "field": "listing_price", "alias": "listing_price", "type": "numeric", "position": "0"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "66ae0f2917c733036b10f5a0", "field": "sale_price", "alias": "sale_price", "type": "numeric", "position": "1"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "66ae0f2917c733036b10f5a1", "field": "discount", "alias": "discount", "type": "numeric", "position": "2"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "66ae0f2917c733036b10f5a2", "field": "product_name_stringindexer", "alias": "product_name_stringindexer", "type": "real", "position": "3"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "66ae0f2917c733036b10f5a3", "field": "product_id_stringindexer", "alias": "product_id_stringindexer", "type": "real", "position": "4"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "66ae0f2917c733036b10f5a4", "field": "brand_stringindexer", "alias": "brand_stringindexer", "type": "numeric", "position": "5"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "66ae0f2917c733036b10f5a5", "field": "description_stringindexer", "alias": "description_stringindexer", "type": "real", "position": "6"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "66ae0f2917c733036b10f5a6", "field": "rating_stringindexer", "alias": "rating_stringindexer", "type": "real", "position": "7"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "66ae0f2917c733036b10f5a7", "field": "reviews_stringindexer", "alias": "reviews_stringindexer", "type": "real", "position": "8"}], "actual_schema": [{"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "66ae0f2917c733036b10f596", "field": "product_name", "alias": "product_name", "type": "String", "position": "0"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "66ae0f2917c733036b10f597", "field": "product_id", "alias": "product_id", "type": "String", "position": "1"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "66ae0f2917c733036b10f598", "field": "listing_price", "alias": "listing_price", "type": "numeric", "position": "2"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "66ae0f2917c733036b10f599", "field": "sale_price", "alias": "sale_price", "type": "numeric", "position": "3"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "66ae0f2917c733036b10f59a", "field": "discount", "alias": "discount", "type": "numeric", "position": "4"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "66ae0f2917c733036b10f59b", "field": "brand", "alias": "brand", "type": "String", "position": "5"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "66ae0f2917c733036b10f59c", "field": "description", "alias": "description", "type": "String", "position": "6"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "66ae0f2917c733036b10f59d", "field": "rating", "alias": "rating", "type": "String", "position": "7"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "66ae0f2917c733036b10f59e", "field": "reviews", "alias": "reviews", "type": "String", "position": "8"}], "selected_schema": [], "created_at": "2024-08-03 11:03:37.421000", "originalcount": 414, "samplecount": 414, "samplefile": "/FileStore/platform/sampleData/66ae0e8917c733036b10f54e/part-00000-8f46f37b-7b4e-4437-846f-b1e1b04c7905-c000.csv", "joinSchema": [], "updated_at": "2024-08-03 11:09:08.478000", "__v": 0, "after_run": {"baseType": "hdfs", "notify": "True", "pipeline_type": "simple", "retrain": "0", "schedule": "0", "scheduleInfo": {}}}]